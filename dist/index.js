!function(t,e){"use strict";var s,i,n,r,o=Object.defineProperty,a=(t,e)=>o(t,"name",{value:e,configurable:!0});(i=s||(s={})).EOF=-1,i.UNKNOWN_SOURCE_NAME="<unknown>",(r=n||(n={})).INVALID_TYPE=0,r.EPSILON=-2,r.MIN_USER_TOKEN_TYPE=1,r.EOF=s.EOF,r.DEFAULT_CHANNEL=0,r.HIDDEN_CHANNEL=1,r.MIN_USER_CHANNEL_VALUE=2;var h=a((t=>{const e=t;return void 0!==e.tokenSource&&void 0!==e.channel}),"isToken"),c=class{static{a(this,"BitSet")}data;constructor(t){this.data=t?new Uint32Array(t.map((t=>t>>>0))):new Uint32Array(1)}[Symbol.iterator](){const t=this.data.length;let e=0,s=this.data[e];const i=this.data;return{[Symbol.iterator](){return this},next:a((()=>{for(;e<t;){if(0!==s){const t=s&-s,i=(e<<5)+this.bitCount(t-1);return s^=t,{done:!1,value:i}}e++,e<t&&(s=i[e])}return{done:!0,value:void 0}}),"next")}}clear(t){void 0===t?this.data=new Uint32Array:(this.resize(t),this.data[t>>>5]&=~(1<<t))}or(t){const e=Math.min(this.data.length,t.data.length);for(let s=0;s<e;++s)this.data[s]|=t.data[s];if(this.data.length<t.data.length){this.resize((t.data.length<<5)-1);const s=t.data.length;for(let i=e;i<s;++i)this.data[i]=t.data[i]}}get(t){if(t<0)throw new RangeError("index cannot be negative");const e=t>>>5;return!(e>=this.data.length)&&!!(this.data[e]&1<<t%32)}get length(){let t=0;const e=this.data.length,s=this.data;for(let i=0;i<e;i++)t+=this.bitCount(s[i]);return t}values(){const t=new Array(this.length);let e=0;const s=this.data.length;for(let i=0;i<s;++i){let s=this.data[i];for(;0!==s;){const n=s&-s;t[e++]=(i<<5)+this.bitCount(n-1),s^=n}}return t}nextSetBit(t){if(t<0)throw new RangeError("index cannot be negative");for(const e of this)if(e>=t)return e}set(t){if(t<0)throw new RangeError("index cannot be negative");this.resize(t),this.data[t>>>5]|=1<<t%32}toString(){return"{"+this.values().join(", ")+"}"}resize(t){const e=t+32>>>5;if(e<=this.data.length)return;const s=new Uint32Array(e);s.set(this.data),s.fill(0,this.data.length),this.data=s}bitCount(t){return t=(t=(858993459&(t-=t>>1&1431655765))+(t>>2&858993459))+(t>>4)&252645135,t+=t>>8,63&(t+=t>>16)}},l=class t{static{a(this,"MurmurHash")}static defaultSeed=701;constructor(){}static initialize(e=t.defaultSeed){return e}static updateFromComparable(t,e){return this.update(t,e?.hashCode()??0)}static update(t,e){return e=(e=Math.imul(e,3432918353))<<15|e>>>17,t=(t^=e=Math.imul(e,461845907))<<13|t>>>19,t=Math.imul(t,5)+3864292196}static finish(t,e){return t^=4*e,t^=t>>>16,t=Math.imul(t,2246822507),t^=t>>>13,t=Math.imul(t,3266489909),t^=t>>>16}static hashCode(e,s){return t.finish(t.update(s??t.defaultSeed,e),1)}},u=class t{static{a(this,"ObjectEqualityComparator")}static instance=new t;hashCode(t){return null==t?0:t.hashCode()}equals(t,e){return null==t?null==e:t.equals(e)}},d=class t{static{a(this,"DefaultEqualityComparator")}static instance=new t;hashCode(t){return null==t?0:u.instance.hashCode(t)}equals(t,e){return null==t?null==e:"string"==typeof t||"number"==typeof t?t===e:u.instance.equals(t,e)}},p=class t{static{a(this,"HashSet")}static defaultLoadFactor=.75;static initialCapacity=16;comparator;buckets;threshold;itemCount=0;constructor(e,s=t.initialCapacity){if(e instanceof t){this.comparator=e.comparator,this.buckets=e.buckets.slice(0);for(let t=0;t<this.buckets.length;t++){const e=this.buckets[t];e&&(this.buckets[t]=e.slice(0))}this.itemCount=e.itemCount,this.threshold=e.threshold}else this.comparator=e??d.instance,this.buckets=this.createBuckets(s),this.threshold=Math.floor(t.initialCapacity*t.defaultLoadFactor)}getOrAdd(t){this.itemCount>this.threshold&&this.expand();const e=this.getBucket(t);let s=this.buckets[e];if(!s)return s=[t],this.buckets[e]=s,++this.itemCount,t;for(const e of s)if(this.comparator.equals(e,t))return e;return s.push(t),++this.itemCount,t}get(t){if(null==t)return t;const e=this.getBucket(t),s=this.buckets[e];if(s)for(const e of s)if(this.comparator.equals(e,t))return e}remove(t){if(null==t)return!1;const e=this.getBucket(t),s=this.buckets[e];if(!s)return!1;for(let e=0;e<s.length;e++){const i=s[e];if(this.comparator.equals(i,t))return s.splice(e,1),--this.itemCount,!0}return!1}hashCode(){let t=l.initialize();for(const e of this.buckets)if(null!=e)for(const s of e){if(null==s)break;t=l.update(t,this.comparator.hashCode(s))}return t=l.finish(t,this.size),t}equals(e){return e===this||e instanceof t&&(e.size===this.size&&this.containsAll(e))}add(t){return this.getOrAdd(t)===t}contains(t){return this.containsFast(t)}containsFast(t){return null!=t&&void 0!==this.get(t)}*[Symbol.iterator](){yield*this.toArray()}toArray(){const t=new Array(this.size);let e=0;for(const s of this.buckets)if(null!=s)for(const i of s){if(null==i)break;t[e++]=i}return t}containsAll(e){if(e instanceof t){for(const t of e.buckets)if(null!=t)for(const e of t){if(null==e)break;if(!this.containsFast(e))return!1}}else for(const t of e)if(!this.containsFast(t))return!1;return!0}addAll(t){let e=!1;for(const s of t){this.getOrAdd(s)!==s&&(e=!0)}return e}clear(){this.buckets=this.createBuckets(t.initialCapacity),this.itemCount=0,this.threshold=Math.floor(t.initialCapacity*t.defaultLoadFactor)}toString(){if(0===this.size)return"{}";let t="{",e=!0;for(const s of this.buckets)if(null!=s)for(const i of s){if(null==i)break;e?e=!1:t+=", ",t+=i.toString()}return t+="}",t}toTableString(){let t="";for(const e of this.buckets){if(null==e){t+="null\n";continue}t+="[";let s=!0;for(const i of e)s?s=!1:t+=" ",t+=null==i?"_":i.toString();t+="]\n"}return t}getBucket(t){return this.comparator.hashCode(t)&this.buckets.length-1}expand(){const e=this.buckets,s=2*this.buckets.length,i=this.createBuckets(s);this.buckets=i,this.threshold=Math.floor(s*t.defaultLoadFactor);for(const t of e)if(t)for(const e of t){const t=this.getBucket(e);let s=this.buckets[t];s||(s=[],this.buckets[t]=s),s.push(e)}}get size(){return this.itemCount}get isEmpty(){return 0===this.itemCount}createBuckets(t){return new Array(t)}},g=class t{static{a(this,"Interval")}static INVALID_INTERVAL=new t(-1,-2);static INTERVAL_POOL_MAX_VALUE=1e3;static cache=[];start;stop;cachedHashCode;constructor(t,e){this.start=t,this.stop=e,this.cachedHashCode=Math.imul(651+t,31)+e}static of(e,s){return e!==s||e<0||e>t.INTERVAL_POOL_MAX_VALUE?new t(e,s):(t.cache[e]||(t.cache[e]=new t(e,e)),t.cache[e])}equals(t){return this.start===t.start&&this.stop===t.stop}hashCode(){return this.cachedHashCode}startsBeforeDisjoint(t){return this.start<t.start&&this.stop<t.start}startsBeforeNonDisjoint(t){return this.start<=t.start&&this.stop>=t.start}startsAfter(t){return this.start>t.start}startsAfterDisjoint(t){return this.start>t.stop}startsAfterNonDisjoint(t){return this.start>t.start&&this.start<=t.stop}disjoint(t){return this.startsBeforeDisjoint(t)||this.startsAfterDisjoint(t)}adjacent(t){return this.start===t.stop+1||this.stop===t.start-1}properlyContains(t){return t.start>=this.start&&t.stop<=this.stop}union(e){return t.of(Math.min(this.start,e.start),Math.max(this.stop,e.stop))}intersection(e){return t.of(Math.max(this.start,e.start),Math.min(this.stop,e.stop))}differenceNotProperlyContained(e){let s=null;return e.startsBeforeNonDisjoint(this)?s=t.of(Math.max(this.start,e.stop+1),this.stop):e.startsAfterNonDisjoint(this)&&(s=t.of(this.start,e.start-1)),s}toString(){return`${this.start}..${this.stop}`}get length(){return this.stop<this.start?0:this.stop-this.start+1}},x=class t{static{a(this,"Vocabulary")}static EMPTY_NAMES=[];static EMPTY_VOCABULARY=new t(t.EMPTY_NAMES,t.EMPTY_NAMES,t.EMPTY_NAMES);maxTokenType;literalNames;symbolicNames;displayNames;constructor(e,s,i){this.literalNames=e??t.EMPTY_NAMES,this.symbolicNames=s??t.EMPTY_NAMES,this.displayNames=i??t.EMPTY_NAMES,this.maxTokenType=Math.max(this.displayNames.length,Math.max(this.literalNames.length,this.symbolicNames.length))-1}static fromTokenNames(e){if(null==e||0===e.length)return t.EMPTY_VOCABULARY;const s=[...e],i=[...e];for(let t=0;t<e.length;t++){const n=e[t];if(null!=n){if(n.length>0){const e=n.codePointAt(0);if(39===e){i[t]=null;continue}if(e>=65&&e<=90){s[t]=null;continue}}s[t]=null,i[t]=null}}return new t(s,i,e)}getMaxTokenType(){return this.maxTokenType}getLiteralName(t){return t>=0&&t<this.literalNames.length?this.literalNames[t]:null}getSymbolicName(t){return t>=0&&t<this.symbolicNames.length?this.symbolicNames[t]:t===n.EOF?"EOF":null}getDisplayName(t){if(t>=0&&t<this.displayNames.length){const e=this.displayNames[t];if(null!=e)return e}const e=this.getLiteralName(t);if(null!=e)return e;const s=this.getSymbolicName(t);return null!=s?s:`${t}`}getLiteralNames(){return this.literalNames}getSymbolicNames(){return this.symbolicNames}getDisplayNames(){return this.displayNames}},f=class t{static{a(this,"IntervalSet")}intervals=[];cachedHashCode;constructor(t){if(t)if(Array.isArray(t))for(const e of t)this.addOne(e);else this.addSet(t)}static of(e,s){const i=new t;return i.addRange(e,s),i}static or(e){const s=new t;for(const t of e)s.addSet(t);return s}[Symbol.iterator](){return this.intervals[Symbol.iterator]()}get(t){return this.intervals[t]}get minElement(){return 0===this.intervals.length?n.INVALID_TYPE:this.intervals[0].start}get maxElement(){return 0===this.intervals.length?n.INVALID_TYPE:this.intervals[this.intervals.length-1].stop}clear(){this.cachedHashCode=void 0,this.intervals=[]}addOne(t){this.addInterval(new g(t,t))}addRange(t,e){this.addInterval(new g(t,e))}addInterval(t){if(this.cachedHashCode=void 0,0===this.intervals.length)this.intervals.push(t);else{for(let e=0;e<this.intervals.length;e++){const s=this.intervals[e];if(t.equals(s))return;if(t.adjacent(s)||!t.disjoint(s)){const i=t.union(s);this.intervals[e]=i;for(let t=e+1;t<this.intervals.length;){const s=this.intervals[t];if(!i.adjacent(s)&&i.disjoint(s))break;this.intervals.splice(t,1),this.intervals[e]=i.union(s)}return}if(t.startsBeforeDisjoint(s))return void this.intervals.splice(e,0,t)}this.intervals.push(t)}}addSet(t){return t.intervals.forEach((t=>this.addInterval(t)),this),this}complementWithVocabulary(e){const s=new t;return e?0===e.length?s:(s.addSet(e),s.subtract(this)):s}complement(e,s){const i=new t;return i.addInterval(new g(e,s)),i.subtract(this)}or(e){const s=new t;return s.addSet(this),e.forEach((t=>s.addSet(t))),s}and(e){if(0===e.length)return new t;const s=this.intervals,i=e.intervals;let n;const r=s.length,o=i.length;let a=0,h=0;for(;a<r&&h<o;){const e=s[a],r=i[h];e.startsBeforeDisjoint(r)?a++:r.startsBeforeDisjoint(e)?h++:e.properlyContains(r)?(n||(n=new t),n.addInterval(e.intersection(r)),h++):r.properlyContains(e)?(n||(n=new t),n.addInterval(e.intersection(r)),a++):e.disjoint(r)||(n||(n=new t),n.addInterval(e.intersection(r)),e.startsAfterNonDisjoint(r)?h++:r.startsAfterNonDisjoint(e)&&a++)}return n||new t}subtract(e){if(0===this.length)return new t;const s=new t(this);if(0===e.length)return s;let i=0,n=0;for(;i<s.intervals.length&&n<e.intervals.length;){const t=s.intervals[i],r=e.intervals[n];if(r.stop<t.start){n++;continue}if(r.start>t.stop){i++;continue}let o,a;r.start>t.start&&(o=new g(t.start,r.start-1)),r.stop<t.stop&&(a=new g(r.stop+1,t.stop)),o?a?(s.intervals[i]=o,s.intervals.splice(i+1,0,a),i++,n++):(s.intervals[i]=o,i++):a?(s.intervals[i]=a,n++):s.intervals.splice(i,1)}return s}contains(t){let e=0,s=this.intervals.length-1;for(;e<=s;){const i=Math.floor((e+s)/2),n=this.intervals[i];if(n.stop<t)e=i+1;else{if(!(n.start>t))return!0;s=i-1}}return!1}removeRange(t){if(this.cachedHashCode=void 0,t.start===t.stop)this.removeOne(t.start);else if(null!==this.intervals){let e=0;for(const s of this.intervals){if(t.stop<=s.start)return;if(t.start>s.start&&t.stop<s.stop){this.intervals[e]=new g(s.start,t.start);const i=new g(t.stop,s.stop);return void this.intervals.splice(e,0,i)}t.start<=s.start&&t.stop>=s.stop?(this.intervals.splice(e,1),e-=1):t.start<s.stop?this.intervals[e]=new g(s.start,t.start):t.stop<s.stop&&(this.intervals[e]=new g(t.stop,s.stop)),e+=1}}}removeOne(t){this.cachedHashCode=void 0;for(let e=0;e<this.intervals.length;e++){const s=this.intervals[e];if(t<s.start)return;if(t===s.start&&t===s.stop)return void this.intervals.splice(e,1);if(t===s.start)return void(this.intervals[e]=new g(s.start+1,s.stop));if(t===s.stop)return void(this.intervals[e]=new g(s.start,s.stop-1));if(t<s.stop){const i=new g(s.start,t-1);return this.intervals[e]=new g(t+1,s.stop),void this.intervals.splice(e,0,i)}}}hashCode(){if(void 0===this.cachedHashCode){let t=l.initialize();for(const e of this.intervals)t=l.update(t,e.start),t=l.update(t,e.stop);this.cachedHashCode=l.finish(t,2*this.intervals.length)}return this.cachedHashCode}equals(t){if(this===t)return!0;if(this.intervals.length!==t.intervals.length)return!1;for(let e=0;e<this.intervals.length;e++)if(!this.intervals[e].equals(t.intervals[e]))return!1;return!0}toString(t){if(0===this.intervals.length)return"{}";let e="";this.length>1&&(e+="{");for(let s=0;s<this.intervals.length;++s){const i=this.intervals[s],r=i.start,o=i.stop;r===o?r===n.EOF?e+="<EOF>":e+=t?"'"+String.fromCodePoint(r)+"'":r:e+=t?"'"+String.fromCodePoint(r)+"'..'"+String.fromCodePoint(o)+"'":r+".."+o,s<this.intervals.length-1&&(e+=", ")}return this.length>1&&(e+="}"),e}toStringWithVocabulary(t){if(0===this.intervals.length)return"{}";let e="";this.length>1&&(e+="{");for(let s=0;s<this.intervals.length;++s){const i=this.intervals[s],r=i.start,o=i.stop;if(r===o)r===n.EOF?e+="<EOF>":e+=this.elementName(t,r);else for(let s=r;s<=o;++s)s>r&&(e+=", "),e+=this.elementName(t,s);s<this.intervals.length-1&&(e+=", ")}return this.length>1&&(e+="}"),e}toStringWithRuleNames(t){if(0===this.intervals.length)return"{}";let e="";this.length>1&&(e+="{");const s=x.fromTokenNames(t);for(let t=0;t<this.intervals.length;++t){const i=this.intervals[t],r=i.start,o=i.stop;if(r===o)r===n.EOF?e+="<EOF>":e+=this.elementName(s,r);else for(let t=r;t<=o;++t)t>r&&(e+=", "),e+=this.elementName(s,t);t<this.intervals.length-1&&(e+=", ")}return this.length>1&&(e+="}"),e}toArray(){const t=[];for(const e of this.intervals)for(let s=e.start;s<=e.stop;s++)t.push(s);return t}get length(){let t=0;for(const e of this.intervals)t+=e.length;return t}elementName(t,e){return e===n.EOF?"<EOF>":e===n.EPSILON?"<EPSILON>":t.getDisplayName(e)}},m=a((t=>null===t?"null":t),"valueToString"),E=a((t=>Array.isArray(t)?"["+t.map(m).join(", ")+"]":"null"),"arrayToString"),T=a(((t,e)=>{if(t===e)return!0;if(t.length!==e.length)return!1;for(let s=0;s<t.length;s++){const i=t[s],n=e[s];if(i!==n&&(!i||!i.equals(n)))return!1}return!0}),"equalArrays"),S=a(((t,e)=>{if(t===e)return!0;if(t.length!==e.length)return!1;for(let s=0;s<t.length;s++)if(t[s]!==e[s])return!1;return!0}),"equalNumberArrays"),A=a(((t,e=!1)=>(t=t.replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r"),e&&(t=t.replace(/ /g,"·")),t)),"escapeWhitespace"),y=class t{static{a(this,"SemanticContext")}cachedHashCode;static andContext(e,s){if(null===e||e===t.NONE)return s;if(null===s||s===t.NONE)return e;const i=new k(e,s);return 1===i.operands.length?i.operands[0]:i}static orContext(e,s){if(null===e)return s;if(null===s)return e;if(e===t.NONE||s===t.NONE)return t.NONE;const i=new v(e,s);return 1===i.operands.length?i.operands[0]:i}static filterPrecedencePredicates(e){const s=[];for(const i of e)i instanceof t.PrecedencePredicate&&s.push(i);return s}evalPrecedence(t,e){return this}},k=class t extends y{static{a(this,"AND")}operands;constructor(e,s){super();const i=new p;e instanceof t?e.operands.forEach((t=>{i.add(t)})):i.add(e),s instanceof t?s.operands.forEach((t=>{i.add(t)})):i.add(s);const n=y.filterPrecedencePredicates(i);if(n.length>0){let t=null;n.forEach((e=>{(null===t||e.precedence<t.precedence)&&(t=e)})),t&&i.add(t)}this.operands=i.toArray()}equals(e){return this===e||e instanceof t&&T(this.operands,e.operands)}hashCode(){if(void 0===this.cachedHashCode){let t=l.initialize();for(const e of this.operands)t=l.updateFromComparable(t,e);t=l.update(t,3813686060),this.cachedHashCode=l.finish(t,this.operands.length+1)}return this.cachedHashCode}evaluate(t,e){for(const s of this.operands)if(!s.evaluate(t,e))return!1;return!0}evalPrecedence(t,e){let s=!1;const i=[];for(const n of this.operands){const r=n.evalPrecedence(t,e);if(s||=r!==n,null===r)return null;r!==y.NONE&&i.push(r)}if(!s)return this;if(0===i.length)return y.NONE;let n=null;return i.forEach((t=>{n=null===n?t:y.andContext(n,t)})),n}toString(){const t=this.operands.map((t=>t.toString()));return(t.length>3?t.slice(3):t).join("&&")}},v=class t extends y{static{a(this,"OR")}operands;constructor(e,s){super();const i=new p;e instanceof t?e.operands.forEach((t=>{i.add(t)})):i.add(e),s instanceof t?s.operands.forEach((t=>{i.add(t)})):i.add(s);const n=y.filterPrecedencePredicates(i);if(n.length>0){const t=n.sort(((t,e)=>t.compareTo(e))),e=t[t.length-1];i.add(e)}this.operands=i.toArray()}equals(e){return this===e||e instanceof t&&T(this.operands,e.operands)}hashCode(){if(void 0===this.cachedHashCode){let t=l.initialize();for(const e of this.operands)t=l.updateFromComparable(t,e);t=l.update(t,3383313031),this.cachedHashCode=l.finish(t,this.operands.length+1)}return this.cachedHashCode}evaluate(t,e){for(const s of this.operands)if(s.evaluate(t,e))return!0;return!1}evalPrecedence(t,e){let s=!1;const i=[];for(const n of this.operands){const r=n.evalPrecedence(t,e);if(s||=r!==n,r===y.NONE)return y.NONE;null!==r&&i.push(r)}if(!s)return this;if(0===i.length)return null;let n=null;return i.forEach((t=>{n=null===n?t:y.orContext(n,t)})),n}toString(){const t=this.operands.map((t=>t.toString()));return(t.length>3?t.slice(3):t).join("||")}};(t=>{class e extends t{static{a(this,"Predicate")}ruleIndex;predIndex;isCtxDependent;constructor(t,e,s){super(),this.ruleIndex=t??-1,this.predIndex=e??-1,this.isCtxDependent=s??!1}evaluate(t,e){const s=this.isCtxDependent?e:null;return t.sempred(s,this.ruleIndex,this.predIndex)}hashCode(){if(void 0===this.cachedHashCode){let t=l.initialize();t=l.update(t,this.ruleIndex),t=l.update(t,this.predIndex),t=l.update(t,this.isCtxDependent?1:0),t=l.finish(t,3),this.cachedHashCode=t}return this.cachedHashCode}equals(t){return this===t||this.ruleIndex===t.ruleIndex&&this.predIndex===t.predIndex&&this.isCtxDependent===t.isCtxDependent}toString(){return"{"+this.ruleIndex+":"+this.predIndex+"}?"}}t.Predicate=e;class s extends t{static{a(this,"PrecedencePredicate")}precedence;constructor(t){super(),this.precedence=t??0}evaluate(t,e){return t.precpred(e,this.precedence)}evalPrecedence(e,s){return e.precpred(s??null,this.precedence)?t.NONE:null}compareTo(t){return this.precedence-t.precedence}hashCode(){return 31+this.precedence}equals(t){return this===t||this.precedence===t.precedence}toString(){return"{"+this.precedence+">=prec}?"}}t.PrecedencePredicate=s,t.NONE=new e})(y||(y={}));var C=class t{static{a(this,"ATNConfig")}state;alt;reachesIntoOuterContext=!1;precedenceFilterSuppressed=!1;get semanticContext(){return this.#t}cachedHashCode;#e=null;#t;constructor(t,e,s,i){this.state=e,this.alt=t.alt,this.context=s,this.#t=i??y.NONE,this.reachesIntoOuterContext=t.reachesIntoOuterContext,void 0!==t.precedenceFilterSuppressed&&(this.precedenceFilterSuppressed=t.precedenceFilterSuppressed)}static duplicate(e,s){return new t(e,e.state,e.context,s??e.semanticContext)}static createWithContext(e,s,i,n){return new t({alt:s},e,i,n)}static createWithConfig(e,s,i){return new t(s,e,i??s.context,s.semanticContext)}static createWithSemanticContext(e,s,i){return new t(s,e??s.state,s.context,i)}hashCode(){if(void 0===this.cachedHashCode){let t=l.initialize(7);t=l.update(t,this.state.stateNumber),t=l.update(t,this.alt),t=l.updateFromComparable(t,this.#e),t=l.updateFromComparable(t,this.semanticContext),t=l.finish(t,4),this.cachedHashCode=t}return this.cachedHashCode}get context(){return this.#e}set context(t){this.#e=t,this.cachedHashCode=void 0}equals(t){return this===t||this.state.stateNumber===t.state.stateNumber&&this.alt===t.alt&&(null===this.context?null===t.context:this.context.equals(t.context))&&this.semanticContext.equals(t.semanticContext)&&this.precedenceFilterSuppressed===t.precedenceFilterSuppressed}toString(t,e=!0){let s="";return e&&(s=","+this.alt),"("+this.state+s+(null!==this.context?",["+this.context.toString()+"]":"")+(this.semanticContext!==y.NONE?","+this.semanticContext.toString():"")+(this.reachesIntoOuterContext?",up="+this.reachesIntoOuterContext:"")+")"}},R=class t{static{a(this,"ATNState")}static INVALID_STATE_NUMBER=-1;static INVALID_TYPE=0;static BASIC=1;static RULE_START=2;static BLOCK_START=3;static PLUS_BLOCK_START=4;static STAR_BLOCK_START=5;static TOKEN_START=6;static RULE_STOP=7;static BLOCK_END=8;static STAR_LOOP_BACK=9;static STAR_LOOP_ENTRY=10;static PLUS_LOOP_BACK=11;static LOOP_END=12;static stateType=t.INVALID_STATE_NUMBER;stateNumber=0;ruleIndex=0;epsilonOnlyTransitions=!1;nextTokenWithinRule;transitions=[];hashCode(){return this.stateNumber}equals(t){return this.stateNumber===t.stateNumber}toString(){return`${this.stateNumber}`}addTransitionAtIndex(t,e){0===this.transitions.length?this.epsilonOnlyTransitions=e.isEpsilon:this.epsilonOnlyTransitions!==e.isEpsilon&&(this.epsilonOnlyTransitions=!1),this.transitions.splice(t,0,e)}addTransition(t){0===this.transitions.length?this.epsilonOnlyTransitions=t.isEpsilon:this.epsilonOnlyTransitions!==t.isEpsilon&&(this.epsilonOnlyTransitions=!1),this.transitions.push(t)}setTransition(t,e){this.transitions.splice(t,1,e)}removeTransition(t){return this.transitions.splice(t,1)[0]}},_=class t{static{a(this,"PredictionContext")}static EMPTY_RETURN_STATE=2147483647;static traceATNSimulator=!1;cachedHashCode;constructor(t){this.cachedHashCode=t}static calculateEmptyHashCode(){let t=l.initialize(31);return t=l.finish(t,0),t}static calculateHashCodeSingle(t,e){let s=l.initialize(31);return s=l.updateFromComparable(s,t),s=l.update(s,e),s=l.finish(s,2),s}static calculateHashCodeList(t,e){let s=l.initialize(31);for(const e of t)s=l.updateFromComparable(s,e);for(const t of e)s=l.update(s,t);return s=l.finish(s,2*t.length),s}isEmpty(){return!1}hasEmptyPath(){return this.getReturnState(this.length-1)===t.EMPTY_RETURN_STATE}hashCode(){return this.cachedHashCode}toString(t){return""}},I=class t extends _{static{a(this,"SingletonPredictionContext")}parent;returnState;constructor(t,e){super(t?_.calculateHashCodeSingle(t,e):_.calculateEmptyHashCode()),this.parent=t??null,this.returnState=e}getParent(t){return this.parent}getReturnState(t){return this.returnState}equals(e){return this===e||e instanceof t&&(this.hashCode()===e.hashCode()&&(this.returnState===e.returnState&&(null==this.parent?null==e.parent:this.parent.equals(e.parent))))}toString(){const t=null===this.parent?"":this.parent.toString();return 0===t.length?this.returnState===_.EMPTY_RETURN_STATE?"$":""+this.returnState:this.returnState+" "+t}get length(){return 1}},L=class t extends I{static{a(this,"EmptyPredictionContext")}static instance=new t;constructor(){super(void 0,_.EMPTY_RETURN_STATE)}isEmpty(){return!0}getParent(){return null}getReturnState(){return this.returnState}equals(t){return this===t}toString(){return"$"}},N=class{static{a(this,"Transition")}static INVALID=0;static EPSILON=1;static RANGE=2;static RULE=3;static PREDICATE=4;static ATOM=5;static ACTION=6;static SET=7;static NOT_SET=8;static WILDCARD=9;static PRECEDENCE=10;target;constructor(t){this.target=t}get isEpsilon(){return!1}get label(){return null}toString(){return""}},w=class extends N{static{a(this,"SetTransition")}set;constructor(t,e){super(t),this.set=e||f.of(n.INVALID_TYPE,n.INVALID_TYPE)}get transitionType(){return N.SET}get label(){return this.set}matches(t,e,s){return this.set.contains(t)}toString(){return this.set.toString()}},b=class extends w{static{a(this,"NotSetTransition")}get transitionType(){return N.NOT_SET}matches(t,e,s){return t>=e&&t<=s&&!super.matches(t,e,s)}toString(){return"~"+super.toString()}},O=class{static{a(this,"MapKeyEqualityComparator")}keyComparator;constructor(t){this.keyComparator=t}hashCode(t){return this.keyComparator.hashCode(t.key)}equals(t,e){return this.keyComparator.equals(t.key,e.key)}},P=class t{static{a(this,"HashMap")}backingStore;constructor(e){e instanceof t?this.backingStore=new p(e.backingStore):(e=e??d.instance,this.backingStore=new p(new O(e)))}clear(){this.backingStore.clear()}containsKey(t){return this.backingStore.contains({key:t})}get(t){const e=this.backingStore.get({key:t});if(e)return e.value}get isEmpty(){return this.backingStore.isEmpty}set(t,e){const s=this.backingStore.get({key:t,value:e});let i;return s?(i=s.value,s.value=e):this.backingStore.add({key:t,value:e}),i}setIfAbsent(t,e){const s=this.backingStore.get({key:t,value:e});let i;return s?i=s.value:this.backingStore.add({key:t,value:e}),i}keys(){return this.backingStore.toArray().map((t=>t.key))}values(){return this.backingStore.toArray().map((t=>t.value))}get size(){return this.backingStore.size}hashCode(){return this.backingStore.hashCode()}equals(t){return this.backingStore.equals(t.backingStore)}},D=class{static{a(this,"TerminalNode")}parent=null;symbol;constructor(t){this.symbol=t}getChild(t){return null}getSymbol(){return this.symbol}getPayload(){return this.symbol}getSourceInterval(){if(null===this.symbol)return g.INVALID_INTERVAL;const t=this.symbol.tokenIndex;return new g(t,t)}getChildCount(){return 0}accept(t){return t.visitTerminal(this)}getText(){return this.symbol?.text??""}toString(){return this.symbol?.type===n.EOF?"<EOF>":this.symbol?.text??""}toStringTree(){return this.toString()}},F=class extends D{static{a(this,"ErrorNode")}accept(t){return t.visitErrorNode(this)}},B=class t{static{a(this,"CommonToken")}static EMPTY_SOURCE=[null,null];source;tokenIndex;start;stop;type;line;column;channel;#s;constructor(t){this.type=t.type,this.source=t.source,this.tokenIndex=t.tokenIndex??-1,this.line=t.line??0,this.column=t.column??-1,this.channel=t.channel??n.DEFAULT_CHANNEL,this.start=t.start??0,this.stop=t.stop??0,this.#s=t.text,void 0===t.line&&null!==t.source[0]&&(this.line=t.source[0].line),void 0===t.column&&null!==t.source[0]&&(this.column=t.source[0].column)}static fromToken(e){const s=[e.tokenSource,e.inputStream];return new t({type:e.type,line:e.line,tokenIndex:e.tokenIndex,column:e.column,channel:e.channel,start:e.start,stop:e.stop,text:e.text,source:s})}static fromType(e,s){return new t({type:e,text:s,source:t.EMPTY_SOURCE})}static fromSource(e,s,i,n,r){return new t({type:s,channel:i,start:n,stop:r,source:e})}get tokenSource(){return this.source[0]}get inputStream(){return this.source[1]}set inputStream(t){this.source[1]=t}clone(){return new t({source:this.source,type:this.type,channel:this.channel,start:this.start,stop:this.stop,tokenIndex:this.tokenIndex,line:this.line,column:this.column,text:this.#s})}toString(t){let e="";this.channel>0&&(e=",channel="+this.channel);let s=this.text;s?(s=s.replace(/\n/g,"\\n"),s=s.replace(/\r/g,"\\r"),s=s.replace(/\t/g,"\\t")):s="<no text>";let i=String(this.type);return t&&(i=t.vocabulary.getDisplayName(this.type)??"<unknown>"),"[@"+this.tokenIndex+","+this.start+":"+this.stop+"='"+s+"',<"+i+">"+e+","+this.line+":"+this.column+"]"}get text(){if(void 0!==this.#s)return this.#s;const t=this.inputStream;if(!t)return;const e=t.size;return this.start<e&&this.stop<e?t.getTextFromRange(this.start,this.stop):"<EOF>"}set text(t){this.#s=t}setText(t){this.#s=t}setType(t){this.type=t}setLine(t){this.line=t}setCharPositionInLine(t){this.column=t}setChannel(t){this.channel=t}setTokenIndex(t){this.tokenIndex=t}},M=class t{static{a(this,"Trees")}static toStringTree(e,s,i){s=s??null,i&&(s=i.ruleNames);let n=t.getNodeText(e,s);n=A(n,!1);const r=e.getChildCount();if(0===r)return n;let o="("+n+" ";r>0&&(n=t.toStringTree(e.getChild(0),s),o=o.concat(n));for(let i=1;i<r;i++)n=t.toStringTree(e.getChild(i),s),o=o.concat(" "+n);return o=o.concat(")"),o}static getNodeText(t,e,s){if(e=e??null,s&&(e=s.ruleNames),null!==e){if(t instanceof U){const s=t.ruleContext.getAltNumber();return 0!==s?e[t.ruleIndex]+":"+s:e[t.ruleIndex]}if(t instanceof F)return t.toString();if(t instanceof D)return t.symbol.text}const i=t.getPayload();return h(i)?i.text:String(t.getPayload())}static getChildren(t){const e=[];for(let s=0;s<t.getChildCount();s++)e.push(t.getChild(s));return e}static getAncestors(t){if(null===t.parent)return[];let e=[],s=t.parent;for(;null!==s;)e=[s].concat(e),s=s.parent;return e}static isAncestorOf(t,e){if(null===t||null===e||null===t.parent)return!1;let s=e.parent;for(;null!==s;){if(t===s)return!0;s=s.parent}return!1}static findAllTokenNodes(e,s){return t.findAllNodes(e,s,!0)}static findAllRuleNodes(e,s){return t.findAllNodes(e,s,!1)}static findAllNodes(e,s,i){const n=[];return t.doFindAllNodes(e,s,i,n),n}static descendants(e){let s=[e];for(let i=0;i<e.getChildCount();i++)s=s.concat(t.descendants(e.getChild(i)));return s}static getRootOfSubtreeEnclosingRegion(t,e,s){const i=t.getChildCount();for(let n=0;n<i;n++){const i=t.getChild(n),r=this.getRootOfSubtreeEnclosingRegion(i,e,s);if(null!==r)return r}return t instanceof U&&e>=t.start.tokenIndex&&(null===t.stop||s<=t.stop.tokenIndex)?t:null}static stripChildrenOutOfRange(t,e,s,i){if(null!==t)for(let r=0;r<t.getChildCount();r++){const o=t.getChild(r),a=o.getSourceInterval();if(t instanceof U&&(a.stop<s||a.start>i)&&this.isAncestorOf(o,e)){const e=B.fromType(n.INVALID_TYPE,"...");t.children[r]=new D(e)}}}static doFindAllNodes(e,s,i,n){i&&e instanceof D?e.symbol?.type===s&&n.push(e):!i&&e instanceof U&&e.ruleIndex===s&&n.push(e);for(let r=0;r<e.getChildCount();r++)t.doFindAllNodes(e.getChild(r),s,i,n)}},U=class t{static{a(this,"ParserRuleContext")}static empty=new t(null);start=null;stop=null;children=[];invokingState;parent;constructor(t,e=-1){this.parent=t,this.invokingState=e}copyFrom(t){this.parent=t.parent,this.invokingState=t.invokingState,this.children.slice(0,this.children.length),this.start=t.start,this.stop=t.stop,t.children&&t.children.forEach((t=>{t instanceof F&&(this.children.push(t),t.parent=this)}))}enterRule(t){}exitRule(t){}addChild(t){return this.children.push(t),t}removeLastChild(){this.children.pop()}addTokenNode(t){const e=new D(t);return this.children.push(e),e.parent=this,e}addErrorNode(t){return t.parent=this,this.children.push(t),t}getChild(t,e){if(t<0||t>=this.children.length)return null;if(!e)return this.children[t];for(const s of this.children)if(s instanceof e){if(0===t)return s;t-=1}return null}getToken(t,e){if(e<0||e>=this.children.length)return null;for(const s of this.children)if("symbol"in s&&s.symbol?.type===t){if(0===e)return s;e-=1}return null}getTokens(t){const e=[];for(const s of this.children)"symbol"in s&&s.symbol?.type===t&&e.push(s);return e}getRuleContext(t,e){return this.getChild(t,e)}getRuleContexts(t){const e=[];for(const s of this.children)s instanceof t&&e.push(s);return e}getChildCount(){return this.children.length}getSourceInterval(){return null===this.start?g.INVALID_INTERVAL:null===this.stop||this.stop.tokenIndex<this.start.tokenIndex?new g(this.start.tokenIndex,this.start.tokenIndex-1):new g(this.start.tokenIndex,this.stop.tokenIndex)}depth(){let t=0,e=this;for(;null!==e;)e=e.parent,t+=1;return t}isEmpty(){return-1===this.invokingState}get ruleContext(){return this}get ruleIndex(){return-1}getPayload(){return this}getText(){return 0===this.children.length?"":this.children.map((t=>t.getText())).join("")}getAltNumber(){return X.INVALID_ALT_NUMBER}setAltNumber(t){}accept(t){return t.visitChildren(this)}toStringTree(...t){return t.length<2?M.toStringTree(this,null,t[0]):M.toStringTree(this,t[0],t[1])}toString(t,e){t=t??null,e=e??null;let s=this,i="[";for(;null!==s&&s!==e;){if(null===t)s.isEmpty()||(i+=s.invokingState);else{const e=s.ruleIndex;i+=e>=0&&e<t.length?t[e]:""+e}null===s.parent||null===t&&s.parent.isEmpty()||(i+=" "),s=s.parent}return i+="]",i}},H=class t extends _{static{a(this,"ArrayPredictionContext")}parents=[];returnStates=[];constructor(t,e){return super(_.calculateHashCodeList(t,e)),this.parents=t,this.returnStates=e,this}isEmpty(){return this.returnStates[0]===_.EMPTY_RETURN_STATE}get length(){return this.returnStates.length}getParent(t){return this.parents[t]}getReturnState(t){return this.returnStates[t]}equals(e){return this===e||e instanceof t&&this.hashCode()===e.hashCode()&&(S(this.returnStates,e.returnStates)&&T(this.parents,e.parents))}toString(){if(this.isEmpty())return"[]";const t=[];for(let e=0;e<this.returnStates.length;e++)this.returnStates[e]!==_.EMPTY_RETURN_STATE?(t.push(this.returnStates[e].toString()),this.parents[e]?t.push(this.parents[e].toString()):t.push("null")):t.push("$");return`[${t.join(", ")}]`}},V=a(((t,e)=>e===_.EMPTY_RETURN_STATE&&null===t?L.instance:new I(t,e)),"createSingletonPredictionContext"),z=a(((t,e)=>{if(e||(e=U.empty),!e.parent||e===U.empty)return L.instance;const s=z(t,e.parent),i=t.states[e.invokingState].transitions[0];return V(s,i.followState.stateNumber)}),"predictionContextFromRuleContext"),W=a(((t,e,s)=>{if(t.isEmpty())return t;let i=s.get(t);if(i)return i;if(i=e.get(t),i)return s.set(t,i),i;let n,r=!1,o=[];for(let i=0;i<o.length;i++){const n=W(t.getParent(i),e,s);if(r||n!==t.getParent(i)){if(!r){o=[];for(let e=0;e<t.length;e++)o[e]=t.getParent(e);r=!0}o[i]=n}}return r?(n=0===o.length?L.instance:1===o.length?V(o[0]??void 0,t.getReturnState(0)):new H(o,t.returnStates),e.add(n),s.set(n,n),s.set(t,n),n):(e.add(t),s.set(t,t),t)}),"getCachedPredictionContext"),q=a(((t,e,s,i)=>{if(t===e||t.equals(e))return t;if(t instanceof I&&e instanceof I)return K(t,e,s,i);if(s){if(t instanceof L)return t;if(e instanceof L)return e}return t instanceof I&&(t=new H([t.parent],[t.returnState])),e instanceof I&&(e=new H([e.parent],[e.returnState])),$(t,e,s,i)}),"merge"),$=a(((t,e,s,i)=>{if(i){let s=i.get(t,e);if(s)return s;if(s=i.get(e,t),s)return s}let n=0,r=0,o=0,a=new Array(t.returnStates.length+e.returnStates.length).fill(0),h=new Array(t.returnStates.length+e.returnStates.length).fill(null);for(;n<t.returnStates.length&&r<e.returnStates.length;){const c=t.parents[n],l=e.parents[r];if(t.returnStates[n]===e.returnStates[r]){const e=t.returnStates[n];e===_.EMPTY_RETURN_STATE&&null===c&&null===l||null!==c&&null!==l&&c===l?(h[o]=c,a[o]=e):(h[o]=q(c,l,s,i),a[o]=e),n+=1,r+=1}else t.returnStates[n]<e.returnStates[r]?(h[o]=c,a[o]=t.returnStates[n],n+=1):(h[o]=l,a[o]=e.returnStates[r],r+=1);o+=1}if(n<t.returnStates.length)for(let e=n;e<t.returnStates.length;e++)h[o]=t.parents[e],a[o]=t.returnStates[e],o+=1;else for(let t=r;t<e.returnStates.length;t++)h[o]=e.parents[t],a[o]=e.returnStates[t],o+=1;if(o<h.length){if(1===o){const s=V(h[0]??void 0,a[0]);return null!==i&&i.set(t,e,s),s}h=h.slice(0,o),a=a.slice(0,o)}const c=new H(h,a);return c.equals(t)?(null!==i&&i.set(t,e,t),t):c.equals(e)?(null!==i&&i.set(t,e,e),e):(Y(h),null!==i&&i.set(t,e,c),c)}),"mergeArrays"),Y=a((t=>{const e=new P(u.instance);for(const s of t)s&&(e.containsKey(s)||e.set(s,s));for(let s=0;s<t.length;s++)t[s]&&(t[s]=e.get(t[s])??null)}),"combineCommonParents"),K=a(((t,e,s,i)=>{if(null!==i){let s=i.get(t,e);if(null!==s)return s;if(s=i.get(e,t),null!==s)return s}const n=G(t,e,s);if(null!==n)return null!==i&&i.set(t,e,n),n;if(t.returnState===e.returnState){const n=q(t.parent,e.parent,s,i);if(n===t.parent)return t;if(n===e.parent)return e;const r=V(n,t.returnState);return null!==i&&i.set(t,e,r),r}{let s=null;if((t===e||null!==t.parent&&t.parent.equals(e.parent))&&(s=t.parent),null!==s){const n=[t.returnState,e.returnState];t.returnState>e.returnState&&(n[0]=e.returnState,n[1]=t.returnState);const r=new H([s,s],n);return null!==i&&i.set(t,e,r),r}const n=[t.returnState,e.returnState];let r=[t.parent,e.parent];t.returnState>e.returnState&&(n[0]=e.returnState,n[1]=t.returnState,r=[e.parent,t.parent]);const o=new H(r,n);return null!==i&&i.set(t,e,o),o}}),"mergeSingletons"),G=a(((t,e,s)=>{if(s){if(t===L.instance||e===L.instance)return L.instance}else{if(t===L.instance&&e===L.instance)return L.instance;if(t===L.instance){const t=[e.returnState,_.EMPTY_RETURN_STATE],s=[e.parent,null];return new H(s,t)}if(e===L.instance){const e=[t.returnState,_.EMPTY_RETURN_STATE],s=[t.parent,null];return new H(s,e)}}return null}),"mergeRoot"),j=class t{constructor(t){this.atn=t}static{a(this,"LL1Analyzer")}static hitPredicate=n.INVALID_TYPE;getDecisionLookahead(e){const s=e.transitions.length,i=new Array(s);for(let n=0;n<s;n++){const s=new f,r=new p;this.doLook(e.transitions[n].target,void 0,L.instance,s,r,new c,!1,!1),s.length>0&&!s.contains(t.hitPredicate)&&(i[n]=s)}return i}look(t,e,s){const i=new f,n=s?z(this.atn,s):null;return this.doLook(t,e,n,i,new p,new c,!0,!0),i}doLook(e,s,i,r,o,a,h,c){const l=C.createWithContext(e,0,i);if(!o.get(l)){if(o.add(l),e===s){if(!i)return void r.addOne(n.EPSILON);if(i.isEmpty()&&c)return void r.addOne(n.EOF)}if(e.constructor.stateType===R.RULE_STOP){if(!i)return void r.addOne(n.EPSILON);if(i.isEmpty()&&c)return void r.addOne(n.EOF);if(i!==L.instance){const t=a.get(e.ruleIndex);try{a.clear(e.ruleIndex);for(let t=0;t<i.length;t++){const e=this.atn.states[i.getReturnState(t)];this.doLook(e,s,i.getParent(t),r,o,a,h,c)}}finally{t&&a.set(e.ruleIndex)}return}}for(const l of e.transitions)switch(l.transitionType){case N.RULE:{if(a.get(l.target.ruleIndex))continue;const t=V(i??void 0,l.followState.stateNumber);try{a.set(l.target.ruleIndex),this.doLook(l.target,s,t,r,o,a,h,c)}finally{a.clear(l.target.ruleIndex)}break}case N.PREDICATE:case N.PRECEDENCE:h?this.doLook(l.target,s,i,r,o,a,h,c):r.addOne(t.hitPredicate);break;case N.WILDCARD:r.addRange(n.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType);break;default:if(l.isEpsilon)this.doLook(l.target,s,i,r,o,a,h,c);else{let t=l.label;t&&(l instanceof b&&(t=t.complement(n.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType)),r.addSet(t))}}}}},X=class{static{a(this,"ATN")}static INVALID_ALT_NUMBER=0;static LEXER=0;static PARSER=1;grammarType;maxTokenType;states=[];decisionToState=[];ruleToStartState=[];ruleToStopState=[];modeNameToStartState=new Map;ruleToTokenType=[];lexerActions=[];modeToStartState=[];analyzer;constructor(t,e){this.grammarType=t,this.maxTokenType=e,this.analyzer=new j(this)}nextTokens(t,e){if(!e&&t.nextTokenWithinRule)return t.nextTokenWithinRule;const s=this.analyzer.look(t,void 0,e);return e||(t.nextTokenWithinRule=s),s}addState(t){t&&(t.stateNumber=this.states.length),this.states.push(t)}removeState(t){this.states[t.stateNumber]=null}defineDecisionState(t){return this.decisionToState.push(t),t.decision=this.decisionToState.length-1,t.decision}getDecisionState(t){return 0===this.decisionToState.length?null:this.decisionToState[t]}getNumberOfDecisions(){return this.decisionToState.length}getExpectedTokens(t,e){if(t<0||t>=this.states.length)throw new Error("Invalid state number.");const s=this.states[t];let i=this.nextTokens(s);if(!i.contains(n.EPSILON))return i;let r=e;const o=new f;for(o.addSet(i),o.removeOne(n.EPSILON);null!==r&&r.invokingState>=0&&i.contains(n.EPSILON);){const t=this.states[r.invokingState].transitions[0];i=this.nextTokens(t.followState),o.addSet(i),o.removeOne(n.EPSILON),r=r.parent}return i.contains(n.EPSILON)&&o.addOne(n.EOF),o}},Z=class t{static{a(this,"KeyTypeEqualityComparer")}static instance=new t;hashCode(t){let e=7;return e=31*e+t.state.stateNumber,e=31*e+t.alt,e=31*e+t.semanticContext.hashCode(),e}equals(t,e){return t===e||t.state.stateNumber===e.state.stateNumber&&t.alt===e.alt&&t.semanticContext.equals(e.semanticContext)}},J=class{static{a(this,"ATNConfigSet")}configLookup=new p(Z.instance);configs=[];uniqueAlt=0;hasSemanticContext=!1;dipsIntoOuterContext=!1;fullCtx=!1;readOnly=!1;conflictingAlts=null;firstStopState;#i=-1;constructor(t){if(void 0!==t)if("boolean"==typeof t)this.fullCtx=t??!0;else{const e=t;this.addAll(e.configs),this.uniqueAlt=e.uniqueAlt,this.conflictingAlts=e.conflictingAlts,this.hasSemanticContext=e.hasSemanticContext,this.dipsIntoOuterContext=e.dipsIntoOuterContext}}[Symbol.iterator](){return this.configs[Symbol.iterator]()}add(t,e=null){if(this.readOnly)throw new Error("This set is readonly");this.firstStopState||t.state.constructor.stateType!==R.RULE_STOP||(this.firstStopState=t),this.hasSemanticContext||=t.semanticContext!==y.NONE,this.dipsIntoOuterContext||=t.reachesIntoOuterContext;const s=this.configLookup.getOrAdd(t);if(s===t)return this.#i=-1,void this.configs.push(t);const i=!this.fullCtx,n=q(s.context,t.context,i,e);s.reachesIntoOuterContext||=t.reachesIntoOuterContext,s.precedenceFilterSuppressed||=t.precedenceFilterSuppressed,s.context=n}get elements(){return this.configs}getAlts(){const t=new c;for(const e of this.configs)t.set(e.alt);return t}getPredicates(){const t=[];for(const e of this.configs)e.semanticContext!==y.NONE&&t.push(e.semanticContext);return t}getStates(){const t=new p;for(const e of this.configs)t.add(e.state);return t}optimizeConfigs(t){if(this.readOnly)throw new Error("This set is readonly");if(0!==this.configLookup.size)for(const e of this.configs)e.context=t.getCachedContext(e.context)}addAll(t){for(const e of t)this.add(e);return!1}equals(t){return this===t||!(this.fullCtx!==t.fullCtx||this.uniqueAlt!==t.uniqueAlt||this.conflictingAlts!==t.conflictingAlts||this.hasSemanticContext!==t.hasSemanticContext||this.dipsIntoOuterContext!==t.dipsIntoOuterContext||!T(this.configs,t.configs))}hashCode(){return-1===this.#i&&(this.#i=this.computeHashCode()),this.#i}get length(){return this.configs.length}isEmpty(){return 0===this.configs.length}contains(t){if(null===this.configLookup)throw new Error("This method is not implemented for readonly sets.");return this.configLookup.contains(t)}containsFast(t){if(null===this.configLookup)throw new Error("This method is not implemented for readonly sets.");return this.configLookup.contains(t)}clear(){if(this.readOnly)throw new Error("This set is readonly");this.configs=[],this.#i=-1,this.configLookup=new p(Z.instance)}setReadonly(t){this.readOnly=t,t&&(this.configLookup=null)}toString(){return E(this.configs)+(this.hasSemanticContext?",hasSemanticContext="+this.hasSemanticContext:"")+(this.uniqueAlt!==X.INVALID_ALT_NUMBER?",uniqueAlt="+this.uniqueAlt:"")+(null!==this.conflictingAlts?",conflictingAlts="+this.conflictingAlts:"")+(this.dipsIntoOuterContext?",dipsIntoOuterContext":"")}computeHashCode(){let t=l.initialize();return this.configs.forEach((e=>{t=l.update(t,e.hashCode())})),t=l.finish(t,this.configs.length),t}},Q=class extends R{static{a(this,"BasicState")}static stateType=R.BASIC},tt=class extends R{static{a(this,"DecisionState")}decision=-1;nonGreedy=!1},et=class extends tt{static{a(this,"BlockStartState")}endState},st=class extends R{static{a(this,"BlockEndState")}static stateType=R.BLOCK_END;startState},it=class extends R{static{a(this,"LoopEndState")}static stateType=R.LOOP_END;loopBackState},nt=class extends R{static{a(this,"RuleStartState")}static stateType=R.RULE_START;stopState;isLeftRecursiveRule=!1},rt=class extends R{static{a(this,"RuleStopState")}static stateType=R.RULE_STOP},ot=class extends tt{static{a(this,"TokensStartState")}static stateType=R.TOKEN_START},at=class extends tt{static{a(this,"PlusLoopbackState")}static stateType=R.PLUS_LOOP_BACK},ht=class extends R{static{a(this,"StarLoopbackState")}static stateType=R.STAR_LOOP_BACK},ct=class extends tt{static{a(this,"StarLoopEntryState")}static stateType=R.STAR_LOOP_ENTRY;loopBackState;precedenceRuleDecision=!1},lt=class extends et{static{a(this,"PlusBlockStartState")}static stateType=R.PLUS_BLOCK_START;loopBackState},ut=class extends et{static{a(this,"StarBlockStartState")}static stateType=R.STAR_BLOCK_START},dt=class extends et{static{a(this,"BasicBlockStartState")}static stateType=R.BLOCK_START},pt=class extends N{static{a(this,"AtomTransition")}labelValue;#n;constructor(t,e){super(t),this.labelValue=e,this.#n=f.of(e,e)}get label(){return this.#n}get transitionType(){return N.ATOM}matches(t){return this.labelValue===t}toString(){return this.labelValue.toString()}},gt=class extends N{static{a(this,"RuleTransition")}ruleIndex;precedence;followState;constructor(t,e,s,i){super(t),this.ruleIndex=e,this.precedence=s,this.followState=i}get isEpsilon(){return!0}get transitionType(){return N.RULE}matches(t,e,s){return!1}},xt=class extends N{static{a(this,"RangeTransition")}start;stop;#n=new f;constructor(t,e,s){super(t),this.start=e,this.stop=s,this.#n.addRange(e,s)}get label(){return this.#n}get transitionType(){return N.RANGE}matches(t,e,s){return t>=this.start&&t<=this.stop}toString(){return"'"+String.fromCharCode(this.start)+"'..'"+String.fromCharCode(this.stop)+"'"}},ft=class extends N{static{a(this,"ActionTransition")}ruleIndex;actionIndex;isCtxDependent;constructor(t,e,s,i){super(t),this.ruleIndex=e,this.actionIndex=s??-1,this.isCtxDependent=i??!1}get isEpsilon(){return!0}get transitionType(){return N.ACTION}matches(t,e,s){return!1}toString(){return"action_"+this.ruleIndex+":"+this.actionIndex}},mt=class extends N{static{a(this,"EpsilonTransition")}#r;constructor(t,e=-1){super(t),this.#r=e}get outermostPrecedenceReturn(){return this.#r}get isEpsilon(){return!0}get transitionType(){return N.EPSILON}matches(){return!1}toString(){return"epsilon"}},Et=class extends N{static{a(this,"WildcardTransition")}get transitionType(){return N.WILDCARD}matches(t,e,s){return t>=e&&t<=s}toString(){return"."}},Tt=class extends N{static{a(this,"AbstractPredicateTransition")}constructor(t){super(t)}},St=class extends Tt{static{a(this,"PredicateTransition")}ruleIndex;predIndex;isCtxDependent;constructor(t,e,s,i){super(t),this.ruleIndex=e,this.predIndex=s,this.isCtxDependent=i}get isEpsilon(){return!0}matches(t,e,s){return!1}get transitionType(){return N.PREDICATE}getPredicate(){return new y.Predicate(this.ruleIndex,this.predIndex,this.isCtxDependent)}toString(){return"pred_"+this.ruleIndex+":"+this.predIndex}},At=class extends Tt{static{a(this,"PrecedencePredicateTransition")}precedence;constructor(t,e){super(t),this.precedence=e}get isEpsilon(){return!0}matches(t,e,s){return!1}getPredicate(){return new y.PrecedencePredicate(this.precedence)}get transitionType(){return N.PRECEDENCE}toString(){return this.precedence+" >= _p"}},yt=0,kt=1,vt=2,Ct=3,Rt=4,_t=5,It=6,Lt=7,Nt=class t{static{a(this,"LexerSkipAction")}static instance=new t;actionType;isPositionDependent=!1;constructor(){this.actionType=It}equals(t){return t===this}hashCode(){return It}execute(t){t.skip()}toString(){return"skip"}},wt=class t{static{a(this,"LexerChannelAction")}channel;actionType;isPositionDependent=!1;cachedHashCode;constructor(t){this.actionType=yt,this.channel=t}execute(t){t.channel=this.channel}hashCode(){if(void 0===this.cachedHashCode){let t=l.initialize();t=l.update(t,this.actionType),t=l.update(t,this.channel),this.cachedHashCode=l.finish(t,2)}return this.cachedHashCode}equals(e){return this===e||e instanceof t&&this.channel===e.channel}toString(){return"channel("+this.channel+")"}},bt=class t{static{a(this,"LexerCustomAction")}ruleIndex;actionIndex;actionType;isPositionDependent=!0;cachedHashCode;constructor(t,e){this.actionType=kt,this.ruleIndex=t,this.actionIndex=e}execute(t){t.action(null,this.ruleIndex,this.actionIndex)}hashCode(){if(void 0===this.cachedHashCode){let t=l.initialize();t=l.update(t,this.actionType),t=l.update(t,this.ruleIndex),t=l.update(t,this.actionIndex),this.cachedHashCode=l.finish(t,3)}return this.cachedHashCode}equals(e){return this===e||e instanceof t&&(this.ruleIndex===e.ruleIndex&&this.actionIndex===e.actionIndex)}},Ot=class t{static{a(this,"LexerMoreAction")}static instance=new t;actionType;isPositionDependent=!1;constructor(){this.actionType=Ct}equals(t){return t===this}hashCode(){return Ct}execute(t){t.more()}toString(){return"more"}},Pt=class t{static{a(this,"LexerTypeAction")}type;actionType;isPositionDependent=!1;cachedHashCode;constructor(t){this.actionType=Lt,this.type=t}execute(t){t.type=this.type}hashCode(){if(void 0===this.cachedHashCode){let t=l.initialize();t=l.update(t,this.actionType),t=l.update(t,this.type),this.cachedHashCode=l.finish(t,2)}return this.cachedHashCode}equals(e){return this===e||e instanceof t&&this.type===e.type}toString(){return"type("+this.type+")"}},Dt=class t{static{a(this,"LexerPushModeAction")}mode;actionType;isPositionDependent=!1;cachedHashCode;constructor(t){this.actionType=_t,this.mode=t}execute(t){t.pushMode(this.mode)}hashCode(){if(void 0===this.cachedHashCode){let t=l.initialize();t=l.update(t,this.actionType),t=l.update(t,this.mode),this.cachedHashCode=l.finish(t,2)}return this.cachedHashCode}equals(e){return this===e||e instanceof t&&this.mode===e.mode}toString(){return"pushMode("+this.mode+")"}},Ft=class t{static{a(this,"LexerPopModeAction")}static instance=new t;actionType;isPositionDependent=!1;constructor(){this.actionType=Rt}equals(t){return t===this}hashCode(){return Rt}execute(t){t.popMode()}toString(){return"popMode"}},Bt=class t{static{a(this,"LexerModeAction")}mode;actionType;isPositionDependent=!1;cachedHashCode;constructor(t){this.actionType=vt,this.mode=t}execute(t){t.mode=this.mode}hashCode(){if(void 0===this.cachedHashCode){let t=l.initialize();t=l.update(t,this.actionType),t=l.update(t,this.mode),this.cachedHashCode=l.finish(t,2)}return this.cachedHashCode}equals(e){return this===e||e instanceof t&&this.mode===e.mode}toString(){return"mode("+this.mode+")"}},Mt=class t{static{a(this,"ATNDeserializer")}static SERIALIZED_VERSION=4;static stateTypeMapper=new Map([[R.INVALID_TYPE,void 0],[R.BASIC,Q],[R.RULE_START,nt],[R.BLOCK_START,dt],[R.PLUS_BLOCK_START,lt],[R.STAR_BLOCK_START,ut],[R.TOKEN_START,ot],[R.RULE_STOP,rt],[R.BLOCK_END,st],[R.STAR_LOOP_BACK,ht],[R.STAR_LOOP_ENTRY,ct],[R.PLUS_LOOP_BACK,at],[R.LOOP_END,it]]);static lexerActionFactoryMapper=new Map([[yt,t=>new wt(t)],[kt,(t,e)=>new bt(t,e)],[vt,t=>new Bt(t)],[Ct,()=>Ot.instance],[Rt,()=>Ft.instance],[_t,t=>new Dt(t)],[It,()=>Nt.instance],[Lt,t=>new Pt(t)]]);data=[];pos=0;deserializationOptions;actionFactories;constructor(t){t||(t={readOnly:!1,verifyATN:!0,generateRuleBypassTransitions:!1}),this.deserializationOptions=t}deserialize(t){this.data=t,this.checkVersion();const e=this.readATN();this.readStates(e),this.readRules(e),this.readModes(e);const s=[];return this.readSets(e,s),this.readEdges(e,s),this.readDecisions(e),this.readLexerActions(e),this.markPrecedenceDecisions(e),this.verifyATN(e),this.deserializationOptions.generateRuleBypassTransitions&&e.grammarType===X.PARSER&&(this.generateRuleBypassTransitions(e),this.verifyATN(e)),e}checkVersion(){const e=this.data[this.pos++];if(e!==t.SERIALIZED_VERSION)throw new Error("Could not deserialize ATN with version "+e+" (expected "+t.SERIALIZED_VERSION+").")}readATN(){const t=this.data[this.pos++],e=this.data[this.pos++];return new X(t,e)}readStates(t){let e,s;const i=[],n=[],r=this.data[this.pos++];for(let e=0;e<r;e++){const e=this.data[this.pos++];if(e===R.INVALID_TYPE){t.addState(null);continue}const s=this.data[this.pos++],r=this.stateFactory(e,s);if(e===R.LOOP_END){const t=this.data[this.pos++];i.push([r,t])}else if(r instanceof et){const t=this.data[this.pos++];n.push([r,t])}t.addState(r)}for(e=0;e<i.length;e++){const s=i[e];s[0].loopBackState=t.states[s[1]]??void 0}for(e=0;e<n.length;e++){const s=n[e];s[0].endState=t.states[s[1]]}const o=this.data[this.pos++];for(e=0;e<o;e++)s=this.data[this.pos++],t.states[s].nonGreedy=!0;const a=this.data[this.pos++];for(e=0;e<a;e++)s=this.data[this.pos++],t.states[s].isLeftRecursiveRule=!0}readRules(t){let e;const s=this.data[this.pos++];for(t.grammarType===X.LEXER&&(t.ruleToTokenType=new Array(s),t.ruleToTokenType.fill(0)),t.ruleToStartState=new Array(s),t.ruleToStartState.fill(null),e=0;e<s;e++){const s=this.data[this.pos++];if(t.ruleToStartState[e]=t.states[s],t.grammarType===X.LEXER){const s=this.data[this.pos++];t.ruleToTokenType[e]=s}}for(t.ruleToStopState=new Array(s),t.ruleToStopState.fill(null),e=0;e<t.states.length;e++){const s=t.states[e];s instanceof rt&&(t.ruleToStopState[s.ruleIndex]=s,t.ruleToStartState[s.ruleIndex].stopState=s)}}readModes(t){const e=this.data[this.pos++];for(let s=0;s<e;s++){const e=this.data[this.pos++];t.modeToStartState.push(t.states[e])}}readSets(t,e){const s=this.data[this.pos++];for(let t=0;t<s;t++){const t=new f;e.push(t);const s=this.data[this.pos++];0!==this.data[this.pos++]&&t.addOne(-1);for(let e=0;e<s;e++){const e=this.data[this.pos++],s=this.data[this.pos++];t.addRange(e,s)}}}readEdges(t,e){let s,i,n,r,o;const a=this.data[this.pos++];for(s=0;s<a;s++){const s=this.data[this.pos++],i=this.data[this.pos++],n=this.data[this.pos++],o=this.data[this.pos++],a=this.data[this.pos++],h=this.data[this.pos++];r=this.edgeFactory(t,n,i,o,a,h,e);t.states[s].addTransition(r)}for(s=0;s<t.states.length;s++)for(n=t.states[s],i=0;i<n.transitions.length;i++){const e=n.transitions[i];if(!(e instanceof gt))continue;let s=-1;t.ruleToStartState[e.target.ruleIndex].isLeftRecursiveRule&&0===e.precedence&&(s=e.target.ruleIndex),r=new mt(e.followState,s),t.ruleToStopState[e.target.ruleIndex].addTransition(r)}for(s=0;s<t.states.length;s++){if(n=t.states[s],n instanceof et){if(!n.endState)throw new Error("IllegalState");if(n.endState.startState)throw new Error("IllegalState");n.endState.startState=n}if(n instanceof at)for(i=0;i<n.transitions.length;i++)o=n.transitions[i].target,o instanceof lt&&(o.loopBackState=n);else if(n instanceof ht)for(i=0;i<n.transitions.length;i++)o=n.transitions[i].target,o instanceof ct&&(o.loopBackState=n)}}readDecisions(t){const e=this.data[this.pos++];for(let s=0;s<e;s++){const e=this.data[this.pos++],i=t.states[e];t.decisionToState.push(i),i.decision=s}}readLexerActions(t){if(t.grammarType===X.LEXER){const e=this.data[this.pos++];t.lexerActions=[];for(let s=0;s<e;s++){const e=this.data[this.pos++],s=this.data[this.pos++],i=this.data[this.pos++];t.lexerActions.push(this.lexerActionFactory(e,s,i))}}}generateRuleBypassTransitions(t){let e;const s=t.ruleToStartState.length;for(e=0;e<s;e++)t.ruleToTokenType[e]=t.maxTokenType+e+1;for(e=0;e<s;e++)this.generateRuleBypassTransition(t,e)}generateRuleBypassTransition(t,e){let s,i;const n=new dt;n.ruleIndex=e,t.addState(n);const r=new st;r.ruleIndex=e,t.addState(r),n.endState=r,t.defineDecisionState(n),r.startState=n;let o=null,a=null;if(t.ruleToStartState[e].isLeftRecursiveRule){for(a=null,s=0;s<t.states.length;s++)if(i=t.states[s],this.stateIsEndStateFor(i,e)){a=i,o=i.loopBackState.transitions[0];break}if(null===o)throw new Error("Couldn't identify final state of the precedence rule prefix section.")}else a=t.ruleToStopState[e];for(s=0;s<t.states.length;s++){i=t.states[s];for(const t of i.transitions)t!==o&&t.target===a&&(t.target=r)}const h=t.ruleToStartState[e];for(;h.transitions.length>0;){const t=h.removeTransition(h.transitions.length-1);n.addTransition(t)}t.ruleToStartState[e].addTransition(new mt(n)),a&&r.addTransition(new mt(a));const c=new Q;t.addState(c),c.addTransition(new pt(r,t.ruleToTokenType[e])),n.addTransition(new mt(c))}stateIsEndStateFor(t,e){if(t.ruleIndex!==e)return null;if(!(t instanceof ct))return null;const s=t.transitions[t.transitions.length-1].target;return s instanceof it&&s.epsilonOnlyTransitions&&s.transitions[0].target instanceof rt?t:null}markPrecedenceDecisions(t){for(const e of t.states)if(e instanceof ct&&t.ruleToStartState[e.ruleIndex].isLeftRecursiveRule){const t=e.transitions[e.transitions.length-1].target;t instanceof it&&t.epsilonOnlyTransitions&&t.transitions[0].target instanceof rt&&(e.precedenceRuleDecision=!0)}}verifyATN(t){if(this.deserializationOptions.verifyATN)for(const e of t.states)if(null!==e)if(this.checkCondition(e.epsilonOnlyTransitions||e.transitions.length<=1),e instanceof lt)this.checkCondition(null!==e.loopBackState);else if(e instanceof ct)if(this.checkCondition(null!==e.loopBackState),this.checkCondition(2===e.transitions.length),e.transitions[0].target instanceof ut)this.checkCondition(e.transitions[1].target instanceof it),this.checkCondition(!e.nonGreedy);else{if(!(e.transitions[0].target instanceof it))throw new Error("IllegalState");this.checkCondition(e.transitions[1].target instanceof ut),this.checkCondition(e.nonGreedy)}else e instanceof ht?(this.checkCondition(1===e.transitions.length),this.checkCondition(e.transitions[0].target instanceof ct)):e instanceof it?this.checkCondition(null!==e.loopBackState):e instanceof nt?this.checkCondition(null!==e.stopState):e instanceof et?this.checkCondition(null!==e.endState):e instanceof st?this.checkCondition(null!==e.startState):e instanceof tt?this.checkCondition(e.transitions.length<=1||e.decision>=0):this.checkCondition(e.transitions.length<=1||e instanceof rt)}checkCondition(t,e){if(!t)throw null==e&&(e="IllegalState"),e}edgeFactory(t,e,s,i,r,o,a){const h=t.states[s];switch(e){case N.EPSILON:return new mt(h);case N.RANGE:return new xt(h,0!==o?n.EOF:i,r);case N.RULE:return new gt(t.states[i],r,o,h);case N.PREDICATE:return new St(h,i,r,0!==o);case N.PRECEDENCE:return new At(h,i);case N.ATOM:return new pt(h,0!==o?n.EOF:i);case N.ACTION:return new ft(h,i,r,0!==o);case N.SET:return new w(h,a[i]);case N.NOT_SET:return new b(h,a[i]);case N.WILDCARD:return new Et(h);default:throw new Error("The specified transition type: "+e+" is not valid.")}}stateFactory(e,s){const i=t.stateTypeMapper.get(e);if(!i)throw new Error("The specified state type "+e+" is not valid.");const n=new i;return n.ruleIndex=s,n}lexerActionFactory(e,s,i){const n=t.lexerActionFactoryMapper.get(e);if(!n)throw new Error("The specified lexer action type "+e+" is not valid.");return n(s,i)}},Ut=class t extends P{static{a(this,"OrderedHashMap")}#o=[];clear(){super.clear(),this.#o=[]}get(t){return super.get(t)}set(t,e){const s=super.set(t,e);return void 0===s&&this.#o.push(t),s}setIfAbsent(t,e){const s=super.setIfAbsent(t,e);return void 0===s&&this.#o.push(t),s}values(){return{[Symbol.iterator]:()=>{let t=0;return{next:a((()=>t<this.#o.length?{done:!1,value:super.get(this.#o[t++])}:{done:!0,value:void 0}),"next")}}}}keys(){return this.#o[Symbol.iterator]()}equals(e){return e instanceof t&&super.equals(e)}};(class t{static{a(this,"ATNSerializer")}atn;data=[];sets=new Ut(u.instance);nonGreedyStates=[];precedenceStates=[];constructor(t){this.atn=t}static getSerialized(e){return new t(e).serialize()}static serializeSets(t,e){t.push(e.length);for(const s of e){const e=s.contains(n.EOF),i=[...s];e&&i[0].stop===n.EOF?t.push(i.length-1):t.push(i.length),t.push(e?1:0);for(const e of i){if(e.start===n.EOF){if(e.stop===n.EOF)continue;t.push(0)}else t.push(e.start);t.push(e.stop)}}}serialize(){this.addPreamble();const t=this.addEdges();this.addNonGreedyStates(),this.addPrecedenceStates(),this.addRuleStatesAndLexerTokenTypes(),this.addModeStartStates();const e=this.addSets();return this.addEdges(t,e),this.addDecisionStartStates(),this.addLexerActions(),this.data}addPreamble(){this.data.push(Mt.SERIALIZED_VERSION),this.data.push(this.atn.grammarType),this.data.push(this.atn.maxTokenType)}addLexerActions(){if(this.atn.grammarType===X.LEXER){this.data.push(this.atn.lexerActions.length);for(const t of this.atn.lexerActions)switch(this.data.push(t.actionType),t.actionType){case yt:{const e=t.channel;this.data.push(e),this.data.push(0);break}case kt:{const e=t.ruleIndex,s=t.actionIndex;this.data.push(e),this.data.push(s);break}case vt:{const e=t.mode;this.data.push(e),this.data.push(0);break}case Ct:case Rt:this.data.push(0),this.data.push(0);break;case _t:{const e=t.mode;this.data.push(e),this.data.push(0);break}case It:this.data.push(0),this.data.push(0);break;case Lt:{const e=t.type;this.data.push(e),this.data.push(0);break}default:throw new Error(`The specified lexer action type ${t.actionType} is not valid.`)}}}addDecisionStartStates(){this.data.push(this.atn.decisionToState.length);for(const t of this.atn.decisionToState)this.data.push(t.stateNumber)}addEdges(...t){switch(t.length){case 0:{let t=0;this.data.push(this.atn.states.length);for(const e of this.atn.states){if(null===e){this.data.push(R.INVALID_TYPE);continue}const s=e.constructor.stateType;e instanceof tt&&e.nonGreedy&&this.nonGreedyStates.push(e.stateNumber),e instanceof nt&&e.isLeftRecursiveRule&&this.precedenceStates.push(e.stateNumber),this.data.push(s),this.data.push(e.ruleIndex),e.constructor.stateType===R.LOOP_END?this.data.push(e.loopBackState.stateNumber):e instanceof et&&this.data.push(e.endState.stateNumber),e.constructor.stateType!==R.RULE_STOP&&(t+=e.transitions.length);for(const t of e.transitions){const e=t.transitionType;if(e===N.SET||e===N.NOT_SET){const e=t;this.sets.set(e.set,!0)}}}return t}case 2:{const[e,s]=t;this.data.push(e);for(const t of this.atn.states)if(null!==t&&t.constructor.stateType!==R.RULE_STOP)for(const e of t.transitions){if(null===this.atn.states[e.target.stateNumber])throw new Error("Cannot serialize a transition to a removed state.");const i=t.stateNumber;let r=e.target.stateNumber;const o=e.transitionType;let a=0,h=0,c=0;switch(o){case N.RULE:r=e.followState.stateNumber,a=e.target.stateNumber,h=e.ruleIndex,c=e.precedence;break;case N.PRECEDENCE:a=e.precedence;break;case N.PREDICATE:{const t=e;a=t.ruleIndex,h=t.predIndex,c=t.isCtxDependent?1:0;break}case N.RANGE:a=e.start,h=e.stop,a===n.EOF&&(a=0,c=1);break;case N.ATOM:a=e.labelValue,a===n.EOF&&(a=0,c=1);break;case N.ACTION:{const t=e;a=t.ruleIndex,h=t.actionIndex,c=t.isCtxDependent?1:0;break}case N.SET:case N.NOT_SET:a=s.get(e.set)}this.data.push(i),this.data.push(r),this.data.push(o),this.data.push(a),this.data.push(h),this.data.push(c)}break}default:throw new Error("Invalid number of arguments")}}addSets(){t.serializeSets(this.data,[...this.sets.keys()]);const e=new P;let s=0;for(const t of this.sets.keys())e.set(t,s++);return e}addModeStartStates(){const t=this.atn.modeToStartState.length;if(this.data.push(t),t>0)for(const t of this.atn.modeToStartState)this.data.push(t.stateNumber)}addRuleStatesAndLexerTokenTypes(){const t=this.atn.ruleToStartState.length;this.data.push(t);for(let e=0;e<t;e++){const t=this.atn.ruleToStartState[e];this.data.push(t.stateNumber),this.atn.grammarType===X.LEXER&&this.data.push(this.atn.ruleToTokenType[e])}}addPrecedenceStates(){this.data.push(this.precedenceStates.length);for(const t of this.precedenceStates)this.data.push(t)}addNonGreedyStates(){this.data.push(this.nonGreedyStates.length);for(const t of this.nonGreedyStates)this.data.push(t)}});var Ht=class t{static{a(this,"DFAState")}stateNumber=-1;configs;edges=[];isAcceptState=!1;prediction=-1;lexerActionExecutor=null;requiresFullContext=!1;predicates=null;constructor(t){t&&(this.configs=t)}static fromState(e){const s=new t;return s.stateNumber=e,s}static fromConfigs(e){return new t(e)}static hashCode(t){return t.configs.hashCode()}static equals(t,e){return t.configs.equals(e.configs)}getAltSet(){const t=new Set;for(const e of this.configs)t.add(e.alt);return 0===t.size?null:t}toString(){let t="";return t+=this.stateNumber,t+=":",t+=this.configs?this.configs.toString():"",this.isAcceptState&&(t+="=>",this.predicates?t+=E(this.predicates):t+=this.prediction),t.toString()}},Vt=class{static{a(this,"ATNSimulator")}static ERROR=Ht.fromState(2147483647);atn;sharedContextCache;constructor(t,e){return this.atn=t,this.sharedContextCache=e,this}getCachedContext(t){if(!this.sharedContextCache)return t;const e=new P(u.instance);return W(t,this.sharedContextCache,e)}};(class t{static{a(this,"CodePointTransitions")}static createWithCodePoint(e,s){return t.createWithCodePointRange(e,s,s)}static createWithCodePointRange(t,e,s){return e===s?new pt(t,e):new xt(t,e,s)}});var zt,Wt=class{static{a(this,"DecisionInfo")}decision=0;invocations=0;timeInPrediction=0;sllTotalLook=0;sllMinLook=0;sllMaxLook=0;sllMaxLookEvent;llTotalLook=0;llMinLook=0;llMaxLook=0;llMaxLookEvent;contextSensitivities;errors;ambiguities;predicateEvals;sllATNTransitions=0;sllDFATransitions=0;llFallback=0;llATNTransitions=0;llDFATransitions=0;constructor(t){this.decision=t,this.contextSensitivities=[],this.errors=[],this.ambiguities=[],this.predicateEvals=[]}toString(){return"{decision="+this.decision+", contextSensitivities="+this.contextSensitivities.length+", errors="+this.errors.length+", ambiguities="+this.ambiguities.length+", sllLookahead="+this.sllTotalLook+", sllATNTransitions="+this.sllATNTransitions+", sllDFATransitions="+this.sllDFATransitions+", llFallback="+this.llFallback+", llLookahead="+this.llTotalLook+", llATNTransitions="+this.llATNTransitions+"}"}},qt=class t extends C{static{a(this,"LexerATNConfig")}lexerActionExecutor;passedThroughNonGreedyDecision;constructor(e,s,i,n){return super(e,s,i??e.context,i?y.NONE:e.semanticContext),this.lexerActionExecutor=i?n:e.lexerActionExecutor??null,this.passedThroughNonGreedyDecision=t.checkNonGreedyDecision(e,this.state),this}static createWithExecutor(e,s,i){return new t(e,s,e.context,i)}static createWithConfig(e,s,i){return new t(s,e,i??null,s.lexerActionExecutor)}static createWithContext(e,s,i){return new t({alt:s},e,i,null)}static checkNonGreedyDecision(t,e){return t.passedThroughNonGreedyDecision||"nonGreedy"in e&&e.nonGreedy}hashCode(){if(void 0===this.cachedHashCode){let t=l.initialize(7);t=l.update(t,this.state.stateNumber),t=l.update(t,this.alt),t=l.updateFromComparable(t,this.context),t=l.updateFromComparable(t,this.semanticContext),t=l.update(t,this.passedThroughNonGreedyDecision?1:0),t=l.updateFromComparable(t,this.lexerActionExecutor),t=l.finish(t,6),this.cachedHashCode=t}return this.cachedHashCode}equals(t){return this===t||this.passedThroughNonGreedyDecision===t.passedThroughNonGreedyDecision&&(this.lexerActionExecutor&&t.lexerActionExecutor?this.lexerActionExecutor.equals(t.lexerActionExecutor):!t.lexerActionExecutor)&&super.equals(t)}},$t=class{static{a(this,"BaseErrorListener")}syntaxError(t,e,s,i,n,r){}reportAmbiguity(t,e,s,i,n,r,o){}reportAttemptingFullContext(t,e,s,i,n,r){}reportContextSensitivity(t,e,s,i,n,r){}},Yt=class t extends $t{static{a(this,"ConsoleErrorListener")}static instance=new t;syntaxError(t,e,s,i,n,r){console.error("line "+s+":"+i+" "+n)}},Kt=class extends $t{constructor(t){return super(),this.delegates=t,this}static{a(this,"ProxyErrorListener")}syntaxError(t,e,s,i,n,r){this.delegates.forEach((o=>{o.syntaxError(t,e,s,i,n,r)}))}reportAmbiguity(t,e,s,i,n,r,o){this.delegates.forEach((a=>{a.reportAmbiguity(t,e,s,i,n,r,o)}))}reportAttemptingFullContext(t,e,s,i,n,r){this.delegates.forEach((o=>{o.reportAttemptingFullContext(t,e,s,i,n,r)}))}reportContextSensitivity(t,e,s,i,n,r){this.delegates.forEach((o=>{o.reportContextSensitivity(t,e,s,i,n,r)}))}},Gt=class t{static{a(this,"Recognizer")}static EOF=-1;static tokenTypeMapCache=new Map;static ruleIndexMapCache=new Map;interpreter;listeners=[Yt.instance];stateNumber=-1;checkVersion(t){const e="4.13.1";e!==t&&console.error("ANTLR runtime and generated code versions disagree: "+e+"!="+t)}addErrorListener(t){this.listeners.push(t)}removeErrorListeners(){this.listeners=[]}removeErrorListener(t){for(let e=0;e<this.listeners.length;e++)if(this.listeners[e]===t)return void this.listeners.splice(e,1)}getErrorListeners(){return this.listeners}getTokenTypeMap(){const e=this.vocabulary;let s=t.tokenTypeMapCache.get(e);if(!s){s=new Map;for(let t=0;t<=this.atn.maxTokenType;t++){const i=e.getLiteralName(t);i&&s.set(i,t);const n=e.getSymbolicName(t);n&&s.set(n,t)}s.set("EOF",n.EOF),t.tokenTypeMapCache.set(e,s)}return s}getRuleIndexMap(){const e=this.ruleNames;let s=t.ruleIndexMapCache.get(e);return s||(s=new Map,e.forEach(((t,e)=>s.set(t,e))),t.ruleIndexMapCache.set(e,s)),s}getTokenType(t){const e=this.getTokenTypeMap().get(t);return e||n.INVALID_TYPE}getErrorHeader(t){const e=t.offendingToken?.line,s=t.offendingToken?.column;return"line "+e+":"+s}get errorListenerDispatch(){return new Kt(this.listeners)}sempred(t,e,s){return!0}precpred(t,e){return!0}action(t,e,s){}get atn(){return this.interpreter.atn}get state(){return this.stateNumber}set state(t){this.stateNumber=t}getParseInfo(){}},jt=class t{static{a(this,"CommonTokenFactory")}static DEFAULT=new t;copyText=!1;constructor(t){this.copyText=t??!1}create(t,e,s,i,n,r,o,a){const h=B.fromSource(t,e,i,n,r);return h.line=o,h.column=a,s?h.text=s:this.copyText&&null!==t[1]&&(h.text=t[1].getTextFromRange(n,r)),h}},Xt=class t extends Error{static{a(this,"RecognitionException")}ctx;offendingToken=null;offendingState=-1;recognizer;input;constructor(e){super(e.message),Error.captureStackTrace&&Error.captureStackTrace(this,t),this.message=e.message,this.recognizer=e.recognizer,this.input=e.input,this.ctx=e.ctx,null!==this.recognizer&&(this.offendingState=this.recognizer.state)}getExpectedTokens(){return null!==this.recognizer&&null!==this.ctx?this.recognizer.atn.getExpectedTokens(this.offendingState,this.ctx):null}toString(){return this.message}},Zt=class extends Xt{static{a(this,"LexerNoViableAltException")}startIndex;deadEndConfigs;constructor(t,e,s,i){super({message:"",recognizer:t,input:e,ctx:null}),this.startIndex=s,this.deadEndConfigs=i}toString(){let t="";return this.input&&this.startIndex>=0&&this.startIndex<this.input.size&&(t=this.input.getTextFromRange(this.startIndex,this.startIndex)),`LexerNoViableAltException(${t})`}},Jt=class t extends Gt{static{a(this,"Lexer")}static DEFAULT_MODE=0;static MORE=-2;static SKIP=-3;static DEFAULT_TOKEN_CHANNEL=n.DEFAULT_CHANNEL;static HIDDEN=n.HIDDEN_CHANNEL;options={minDFAEdge:0,maxDFAEdge:256,minCodePoint:0,maxCodePoint:1114111};tokenStartCharIndex=-1;channel=0;type=0;mode=t.DEFAULT_MODE;currentTokenColumn=0;currentTokenStartLine=0;input;token=null;hitEOF=!1;factory;#a=[];#s;constructor(t,e){super(),this.options={...this.options,...e},this.input=t,this.factory=jt.DEFAULT}reset(e=!0){e&&this.input.seek(0),this.token=null,this.type=n.INVALID_TYPE,this.channel=n.DEFAULT_CHANNEL,this.tokenStartCharIndex=-1,this.currentTokenColumn=-1,this.currentTokenStartLine=-1,this.#s=void 0,this.hitEOF=!1,this.mode=t.DEFAULT_MODE,this.#a=[],this.interpreter.reset()}nextToken(){if(null===this.input)throw new Error("nextToken requires a non-null input stream.");const e=this.input.mark();try{for(;;){if(this.hitEOF)return this.emitEOF(),this.token;this.token=null,this.channel=n.DEFAULT_CHANNEL,this.tokenStartCharIndex=this.input.index,this.currentTokenColumn=this.interpreter.column,this.currentTokenStartLine=this.interpreter.line,this.#s=void 0;let e=!1;for(;;){this.type=n.INVALID_TYPE;let s=t.SKIP;try{s=this.interpreter.match(this.input,this.mode)}catch(t){if(!(t instanceof Zt))throw t;this.notifyListeners(t),this.recover(t)}if(this.input.LA(1)===n.EOF&&(this.hitEOF=!0),this.type===n.INVALID_TYPE&&(this.type=s),this.type===t.SKIP){e=!0;break}if(this.type!==t.MORE)break}if(!e)return null===this.token&&this.emit(),this.token}}finally{this.input.release(e)}}skip(){this.type=t.SKIP}more(){this.type=t.MORE}pushMode(t){this.#a.push(this.mode),this.mode=t}popMode(){if(0===this.#a.length)throw new Error("Empty Stack");return this.mode=this.#a.pop(),this.mode}get modeStack(){return this.#a}emitToken(t){this.token=t}emit(){const t=this.factory.create([this,this.input],this.type,this.#s,this.channel,this.tokenStartCharIndex,this.getCharIndex()-1,this.currentTokenStartLine,this.currentTokenColumn);return this.emitToken(t),t}emitEOF(){const t=this.factory.create([this,this.input],n.EOF,void 0,n.DEFAULT_CHANNEL,this.input.index,this.input.index-1,this.line,this.column);return this.emitToken(t),t}getCharIndex(){return this.input.index}getAllTokens(){const t=[];let e=this.nextToken();for(;e.type!==n.EOF;)t.push(e),e=this.nextToken();return t}notifyListeners(t){const e=this.tokenStartCharIndex,s=this.input.index,i=this.input.getTextFromRange(e,s),n="token recognition error at: '"+this.getErrorDisplay(i)+"'";this.errorListenerDispatch.syntaxError(this,null,this.currentTokenStartLine,this.currentTokenColumn,n,t)}getErrorDisplay(t){return t}getErrorDisplayForChar(t){return t.charCodeAt(0)===n.EOF?"<EOF>":"\n"===t?"\\n":"\t"===t?"\\t":"\r"===t?"\\r":t}getCharErrorDisplay(t){return"'"+this.getErrorDisplayForChar(t)+"'"}recover(t){this.input.LA(1)!==n.EOF&&(t instanceof Zt?this.interpreter.consume(this.input):this.input.consume())}get inputStream(){return this.input}set inputStream(t){this.reset(!1),this.input=t}set tokenFactory(t){this.factory=t}get tokenFactory(){return this.factory}get sourceName(){return this.input.getSourceName()}get line(){return this.interpreter.line}set line(t){this.interpreter.line=t}get column(){return this.interpreter.column}set column(t){this.interpreter.column=t}get text(){return this.#s?this.#s:this.interpreter.getText(this.input)}set text(t){this.#s=t}},Qt=class{static{a(this,"DFASerializer")}dfa;vocabulary;constructor(t,e){this.dfa=t,this.vocabulary=e}toString(){if(!this.dfa.s0)return"";let t="";const e=this.dfa.getStates();for(const s of e){let e=0;e=s.edges.length;for(let i=0;i<e;i++){const e=s.edges[i];if(e&&2147483647!==e.stateNumber){t+=this.getStateString(s);t+="-",t+=this.getEdgeLabel(i),t+="->",t+=this.getStateString(e),t+="\n"}}}return t}getEdgeLabel(t){return`${this.vocabulary.getDisplayName(t-1)}`}getStateString(t){const e=t.stateNumber,s=(t.isAcceptState?":":"")+"s"+e+(t.requiresFullContext?"^":"");return t.isAcceptState?null!==t.predicates?`${s}=>${t.predicates.toString()}`:`${s}=>${t.prediction}`:`${s}`}},te=class extends Qt{static{a(this,"LexerDFASerializer")}constructor(t){super(t,x.EMPTY_VOCABULARY)}getEdgeLabel=a((t=>"'"+String.fromCharCode(t)+"'"),"getEdgeLabel")},ee=class{static{a(this,"DFA")}s0;decision;atnStartState;isPrecedenceDfa;states=new Map;constructor(t,e){this.atnStartState=t,this.decision=e??0;let s=!1;t instanceof ct&&t.precedenceRuleDecision&&(s=!0,this.s0=Ht.fromState(-1)),this.isPrecedenceDfa=s}[Symbol.iterator]=()=>this.states.values()[Symbol.iterator]();getPrecedenceStartState=a((t=>{if(!this.isPrecedenceDfa)throw new Error("Only precedence DFAs may contain a precedence start state.");if(!(!this.s0||!this.s0.edges||t<0||t>=this.s0.edges.length))return this.s0.edges[t]}),"getPrecedenceStartState");setPrecedenceStartState=a(((t,e)=>{if(!this.isPrecedenceDfa)throw new Error("Only precedence DFAs may contain a precedence start state.");t<0||!this.s0||(this.s0.edges[t]=e)}),"setPrecedenceStartState");getStates(){const t=[...this.states.values()];return t.sort(((t,e)=>t.stateNumber-e.stateNumber)),t}getState(t){return this.states.get(t.configs.hashCode())??null}getStateForConfigs(t){return this.states.get(t.hashCode())??null}addState(t){const e=t.configs.hashCode();this.states.has(e)||(this.states.set(e,t),t.stateNumber=this.states.size-1)}toString(t){if(!t)return this.toString(x.EMPTY_VOCABULARY);if(!this.s0)return"";return new Qt(this,t).toString()??""}toLexerString(){if(!this.s0)return"";return new te(this).toString()??""}get length(){return this.states.size}},se=class t{static{a(this,"LexerIndexedCustomAction")}offset;action;actionType;isPositionDependent=!0;cachedHashCode;constructor(t,e){this.actionType=e.actionType,this.offset=t,this.action=e}execute(t){this.action.execute(t)}hashCode(){if(void 0===this.cachedHashCode){let t=l.initialize();t=l.update(t,this.offset),t=l.updateFromComparable(t,this.action),this.cachedHashCode=l.finish(t,2)}return this.cachedHashCode}equals(e){return this===e||e instanceof t&&(this.offset===e.offset&&this.action===e.action)}},ie=class t{static{a(this,"LexerActionExecutor")}lexerActions;actionType;isPositionDependent=!1;cachedHashCode;constructor(t){return this.actionType=-1,this.lexerActions=t??[],this}static append(e,s){if(null===e)return new t([s]);const i=e.lexerActions.concat([s]);return new t(i)}fixOffsetBeforeMatch(e){let s=null;for(let t=0;t<this.lexerActions.length;t++)!this.lexerActions[t].isPositionDependent||this.lexerActions[t]instanceof se||(null===s&&(s=this.lexerActions.concat([])),s[t]=new se(e,this.lexerActions[t]));return null===s?this:new t(s)}execute(t,e,s){if(void 0===e||void 0===s)return;let i=!1;const n=e.index;try{for(const r of this.lexerActions){let o=r;if(r instanceof se){const t=r.offset;e.seek(s+t),o=r.action,i=s+t!==n}else r.isPositionDependent&&(e.seek(n),i=!1);o.execute(t)}}finally{i&&e.seek(n)}}hashCode(){if(void 0===this.cachedHashCode){let t=l.initialize(7);for(const e of this.lexerActions)t=l.update(t,e.hashCode());this.cachedHashCode=l.finish(t,this.lexerActions.length)}return this.cachedHashCode}equals(t){return this===t||this.cachedHashCode===t.cachedHashCode&&(this.lexerActions.length===t.lexerActions.length&&this.lexerActions.every(((e,s)=>e.equals(t.lexerActions[s]))))}},ne=class t extends p{static{a(this,"OrderedHashSet")}elements=[];getOrAdd(t){const e=this.size,s=super.getOrAdd(t);return this.size>e&&this.elements.push(t),s}equals(e){return e instanceof t&&super.equals(e)}clear(){super.clear(),this.elements=[]}*[Symbol.iterator](){yield*this.elements}toArray(){return this.elements.slice(0)}},re=class extends J{static{a(this,"OrderedATNConfigSet")}constructor(){super(),this.configLookup=new ne}},oe=class extends Vt{static{a(this,"LexerATNSimulator")}static debug=!1;decisionToDFA;recognizer=null;startIndex=-1;line=1;column=0;mode=Jt.DEFAULT_MODE;prevAccept;options;lexerATNConfigFactory;constructor(t,e,s,i){super(e,i),this.decisionToDFA=s,this.recognizer=t,this.options=t?t.options:{minDFAEdge:0,maxDFAEdge:256,minCodePoint:0,maxCodePoint:1114111}}match(t,e){this.mode=e;const s=t.mark();try{this.startIndex=t.index,this.prevAccept=void 0;const s=this.decisionToDFA[e];return s.s0?this.execATN(t,s.s0):this.matchATN(t)}finally{t.release(s)}}reset(){this.prevAccept=void 0,this.startIndex=-1,this.line=1,this.column=0,this.mode=Jt.DEFAULT_MODE}clearDFA(){for(let t=0;t<this.decisionToDFA.length;t++)this.decisionToDFA[t]=new ee(this.atn.getDecisionState(t),t)}getDFA(t){return this.decisionToDFA[t]}getText(t){return t.getTextFromRange(this.startIndex,t.index-1)}consume(t){t.LA(1)==="\n".charCodeAt(0)?(this.line+=1,this.column=0):this.column+=1,t.consume()}getTokenName(t){return t===n.EOF?"EOF":"'"+String.fromCharCode(t)+"'"}matchATN(t){const e=this.atn.modeToStartState[this.mode];this.mode;const s=this.computeStartState(t,e),i=s.hasSemanticContext;s.hasSemanticContext=!1;const n=this.addDFAState(s);i||(this.decisionToDFA[this.mode].s0=n);return this.execATN(t,n)}execATN(t,e){e.isAcceptState&&this.captureSimState(t,e);let s=t.LA(1);for(;;){let i=this.getExistingTargetState(e,s);if(i||(i=this.computeTargetState(t,e,s)),i===Vt.ERROR)break;if(s!==n.EOF&&this.consume(t),i.isAcceptState&&(this.captureSimState(t,i),s===n.EOF))break;s=t.LA(1),e=i}return this.failOrAccept(t,e.configs,s)}getExistingTargetState(t,e){if(e>=this.options.minDFAEdge&&e<=this.options.maxDFAEdge){return t.edges[e-this.options.minDFAEdge]}}computeTargetState(t,e,s){const i=new re;return this.getReachableConfigSet(t,e.configs,i,s),0===i.length?(i.hasSemanticContext||this.addDFAEdge(e,s,Vt.ERROR),Vt.ERROR):this.addDFAEdge(e,s,null,i)}failOrAccept(t,e,s){if(this.prevAccept?.dfaState){const{dfaState:e,index:s,line:i,column:n}=this.prevAccept;return this.accept(t,e.lexerActionExecutor,this.startIndex,s,i,n),e.prediction}if(s===n.EOF&&t.index===this.startIndex)return n.EOF;throw new Zt(this.recognizer,t,this.startIndex,e)}getReachableConfigSet(t,e,s,i){let r=X.INVALID_ALT_NUMBER;for(const o of e){const e=o.alt===r;if(!e||!o.passedThroughNonGreedyDecision)for(const a of o.state.transitions){const h=this.getReachableTarget(a,i);if(h){let a=o.lexerActionExecutor;a&&(a=a.fixOffsetBeforeMatch(t.index-this.startIndex));const c=i===n.EOF,l=qt.createWithExecutor(o,h,a);this.closure(t,l,s,e,!0,c)&&(r=o.alt)}}}}accept(t,e,s,i,n,r){t.seek(i),this.line=n,this.column=r,e&&this.recognizer&&e.execute(this.recognizer,t,s)}getReachableTarget(t,e){return t.matches(e,this.options.minCodePoint,this.options.maxCodePoint)?t.target:void 0}computeStartState(t,e){const s=L.instance,i=new re;for(let n=0;n<e.transitions.length;n++){const r=e.transitions[n].target,o=qt.createWithContext(r,n+1,s);this.closure(t,o,i,!1,!1,!1)}return i}closure(t,e,s,i,n,r){let o=null;if(e.state.constructor.stateType===R.RULE_STOP){if(!e.context||e.context.hasEmptyPath()){if(!e.context||e.context.isEmpty())return s.add(e),!0;s.add(qt.createWithConfig(e.state,e,L.instance)),i=!0}if(e.context&&!e.context.isEmpty())for(let a=0;a<e.context.length;a++)if(e.context.getReturnState(a)!==_.EMPTY_RETURN_STATE){const h=e.context.getParent(a),c=this.atn.states[e.context.getReturnState(a)];o=qt.createWithConfig(c,e,h),i=this.closure(t,o,s,i,n,r)}return i}e.state.epsilonOnlyTransitions||i&&e.passedThroughNonGreedyDecision||s.add(e);for(const a of e.state.transitions)o=this.getEpsilonTarget(t,e,a,s,n,r),o&&(i=this.closure(t,o,s,i,n,r));return i}getEpsilonTarget(t,e,s,i,n,r){this.lexerATNConfigFactory||this.setupATNFactoryLookup();const o=this.lexerATNConfigFactory[s.transitionType];return o?o(t,e,s,i,n,r):null}setupATNFactoryLookup(){this.lexerATNConfigFactory=[],this.lexerATNConfigFactory[N.RULE]=(t,e,s)=>{const i=V(e.context??void 0,s.followState.stateNumber);return qt.createWithConfig(s.target,e,i)},this.lexerATNConfigFactory[N.PRECEDENCE]=()=>{throw new Error("Precedence predicates are not supported in lexers.")},this.lexerATNConfigFactory[N.PREDICATE]=(t,e,s,i,n)=>{const r=s;return i.hasSemanticContext=!0,this.evaluatePredicate(t,r.ruleIndex,r.predIndex,n)?qt.createWithConfig(s.target,e):null},this.lexerATNConfigFactory[N.ACTION]=(t,e,s)=>{if(null===e.context||e.context.hasEmptyPath()){const t=ie.append(e.lexerActionExecutor,this.atn.lexerActions[s.actionIndex]);return qt.createWithExecutor(e,s.target,t)}return qt.createWithConfig(s.target,e)},this.lexerATNConfigFactory[N.EPSILON]=(t,e,s)=>qt.createWithConfig(s.target,e);const t=a(((t,e,s,i,r,o)=>o&&s.matches(n.EOF,this.options.minCodePoint,this.options.maxCodePoint)?qt.createWithConfig(s.target,e):null),"simple");this.lexerATNConfigFactory[N.ATOM]=t,this.lexerATNConfigFactory[N.RANGE]=t,this.lexerATNConfigFactory[N.SET]=t}evaluatePredicate(t,e,s,i){if(!this.recognizer)return!0;if(!i)return this.recognizer.sempred(null,e,s);const n=this.column,r=this.line,o=t.index,a=t.mark();try{return this.consume(t),this.recognizer.sempred(null,e,s)}finally{this.column=n,this.line=r,t.seek(o),t.release(a)}}captureSimState(t,e){this.prevAccept={index:t.index,line:this.line,column:this.column,dfaState:e}}addDFAEdge(t,e,s,i){if(!s&&i){const t=i.hasSemanticContext;if(i.hasSemanticContext=!1,s=this.addDFAState(i),t)return s}return e<this.options.minDFAEdge||e>this.options.maxDFAEdge||(t.edges[e-this.options.minDFAEdge]=s),s}addDFAState(t){const e=this.decisionToDFA[this.mode],s=e.getStateForConfigs(t);if(s)return s;const i=Ht.fromConfigs(t),n=t.firstStopState;return n&&(i.isAcceptState=!0,i.lexerActionExecutor=n.lexerActionExecutor,i.prediction=this.atn.ruleToTokenType[n.state.ruleIndex]),t.setReadonly(!0),e.addState(i),i}},ae=class{static{a(this,"ParseInfo")}atnSimulator;constructor(t){this.atnSimulator=t}getDecisionInfo(){return this.atnSimulator.getDecisionInfo()}getLLDecisions(){const t=this.atnSimulator.getDecisionInfo(),e=new Array;for(let s=0;s<t.length;s++){t[s].llFallback>0&&e.push(s)}return e}getTotalTimeInPrediction(){const t=this.atnSimulator.getDecisionInfo();let e=0;for(const s of t)e+=s.timeInPrediction;return e}getTotalSLLLookaheadOps(){const t=this.atnSimulator.getDecisionInfo();let e=0;for(const s of t)e+=s.sllTotalLook;return e}getTotalLLLookaheadOps(){const t=this.atnSimulator.getDecisionInfo();let e=0;for(const s of t)e+=s.llTotalLook;return e}getTotalSLLATNLookaheadOps(){const t=this.atnSimulator.getDecisionInfo();let e=0;for(const s of t)e+=s.sllATNTransitions;return e}getTotalLLATNLookaheadOps(){const t=this.atnSimulator.getDecisionInfo();let e=0;for(const s of t)e+=s.llATNTransitions;return e}getTotalATNLookaheadOps(){const t=this.atnSimulator.getDecisionInfo();let e=0;for(const s of t)e+=s.sllATNTransitions,e+=s.llATNTransitions;return e}getDFASize(t){if(void 0===t){let t=0;const e=this.atnSimulator.decisionToDFA;for(let s=0;s<e.length;s++)t+=this.getDFASize(s);return t}return this.atnSimulator.decisionToDFA[t].length}},he=class extends Xt{static{a(this,"NoViableAltException")}deadEndConfigs=null;startToken;constructor(t,e=null,s=null,i=null,n=null,r=null){r=r??t.context,i=i??t.getCurrentToken(),s=s??t.getCurrentToken(),super({message:"",recognizer:t,input:e=e??t.inputStream,ctx:r}),this.deadEndConfigs=n,this.startToken=s,this.offendingToken=i}},ce=class{static{a(this,"DoubleDict")}cacheMap;constructor(){this.cacheMap=new P}get(t,e){const s=this.cacheMap.get(t)??null;return null===s?null:s.get(e)??null}set(t,e,s){let i=this.cacheMap.get(t);i||(i=new P,this.cacheMap.set(t,i)),i.set(e,s)}},le=class t{static{a(this,"SubsetEqualityComparer")}static instance=new t;hashCode(t){let e=l.initialize(7);return e=l.update(e,t.state.stateNumber),e=l.updateFromComparable(e,t.context),e=l.finish(e,2),e}equals(t,e){return t.state.stateNumber===e.state.stateNumber&&(t.context?.equals(e.context)??!0)}},ue=class t{static{a(this,"PredictionMode")}static SLL=0;static LL=1;static LL_EXACT_AMBIG_DETECTION=2;static hasSLLConflictTerminatingPrediction(e,s){if(t.allConfigsInRuleStopStates(s))return!0;if(e===t.SLL&&s.hasSemanticContext){const t=new J;for(let e of s)e=C.duplicate(e,y.NONE),t.add(e);s=t}const i=t.getConflictingAltSubsets(s);return t.hasConflictingAltSet(i)&&!t.hasStateAssociatedWithOneAlt(s)}static hasConfigInRuleStopState(t){for(const e of t)if(e.state instanceof rt)return!0;return!1}static allConfigsInRuleStopStates(t){for(const e of t)if(!(e.state instanceof rt))return!1;return!0}static resolvesToJustOneViableAlt(e){return t.getSingleViableAlt(e)}static allSubsetsConflict(e){return!t.hasNonConflictingAltSet(e)}static hasNonConflictingAltSet(t){for(const e of t)if(1===e.length)return!0;return!1}static hasConflictingAltSet(t){for(const e of t)if(e.length>1)return!0;return!1}static allSubsetsEqual(t){let e=null;for(const s of t)if(null===e)e=s;else if(s!==e)return!1;return!0}static getUniqueAlt(e){const s=t.getAlts(e);return 1===s.length?s.nextSetBit(0):X.INVALID_ALT_NUMBER}static getAlts(t){const e=new c;return t.forEach((t=>{e.or(t)})),e}static getConflictingAltSubsets(t){const e=new P(le.instance);for(const s of t){let t=e.get(s);t||(t=new c,e.set(s,t)),t.set(s.alt)}return Array.from(e.values())}static getStateToAltMap(t){const e=new P(u.instance);for(const s of t){let t=e.get(s.state);t||(t=new c,e.set(s.state,t)),t.set(s.alt)}return e}static hasStateAssociatedWithOneAlt(t){const e={};for(const s of t){const t=s.state.stateNumber;e[t]||(e[t]=0),e[t]++}return Object.values(e).some((t=>1===t))}static getSingleViableAlt(t){let e=null;for(const s of t){const t=s.nextSetBit(0);if(null===e)e=t;else if(e!==t)return X.INVALID_ALT_NUMBER}return e??0}},de=class t extends Vt{static{a(this,"ParserATNSimulator")}static traceATNSimulator=!1;static debug;static debugAdd=!1;static debugClosure=!1;static dfaDebug=!1;static retryDebug=!1;predictionMode;decisionToDFA;parser;mergeCache=new ce;predictionState;constructor(t,e,s,i){super(e,i),this.parser=t,this.decisionToDFA=s}static getUniqueAlt(t){let e=X.INVALID_ALT_NUMBER;for(const s of t)if(e===X.INVALID_ALT_NUMBER)e=s.alt;else if(s.alt!==e)return X.INVALID_ALT_NUMBER;return e}reset(){}clearDFA(){for(let t=0;t<this.decisionToDFA.length;t++)this.decisionToDFA[t]=new ee(this.atn.getDecisionState(t),t)}adaptivePredict(e,s,i){(t.debug||t.traceATNSimulator)&&console.log("adaptivePredict decision "+s+" exec LA(1)=="+this.getLookaheadName(e)+" line "+e.LT(1).line+":"+e.LT(1).column);const n=this.decisionToDFA[s];this.predictionState={input:e,startIndex:e.index,outerContext:i??void 0,dfa:n};const r=e.mark(),o=e.index;try{let s;if(s=n.isPrecedenceDfa?n.getPrecedenceStartState(this.parser.getPrecedence()):n.s0,!s){i||(i=U.empty),t.debug&&console.log("predictATN decision "+n.decision+" exec LA(1)=="+this.getLookaheadName(e)+", outerContext="+i.toString(this.parser.ruleNames));const r=!1;let o=this.computeStartState(n.atnStartState,U.empty,r);n.isPrecedenceDfa?(o=this.applyPrecedenceFilter(o),s=this.addDFAState(n,Ht.fromConfigs(o)),n.setPrecedenceStartState(this.parser.getPrecedence(),s)):(s=this.addDFAState(n,Ht.fromConfigs(o)),n.s0=s)}const r=this.execATN(n,s,e,o,i);return t.debug&&console.log("DFA after predictATN: "+n.toString(this.parser.vocabulary)),r}finally{this.predictionState.dfa=void 0,this.mergeCache=new ce,e.seek(o),e.release(r)}}execATN(e,s,i,r,o){let a;(t.debug||t.traceATNSimulator)&&console.log("execATN decision "+e.decision+", DFA state "+s+", LA(1)=="+this.getLookaheadName(i)+" line "+i.LT(1).line+":"+i.LT(1).column);let h=s,c=i.LA(1);for(;;){let s=this.getExistingTargetState(h,c);if(s||(s=this.computeTargetState(e,h,c)),s===Vt.ERROR){const t=this.noViableAlt(i,o,h.configs,r);if(i.seek(r),a=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(h.configs,o),a!==X.INVALID_ALT_NUMBER)return a;throw t}if(s.requiresFullContext&&this.predictionMode!==ue.SLL){let n=null;if(null!==s.predicates){t.debug&&console.log("DFA state has preds in DFA sim LL failover");const e=i.index;if(e!==r&&i.seek(r),n=this.evalSemanticContext(s.predicates,o,!0),1===n.length)return t.debug&&console.log("Full LL avoided"),n.nextSetBit(0);e!==r&&i.seek(e)}const h=!0,c=this.computeStartState(e.atnStartState,o,h);return this.reportAttemptingFullContext(e,n,s.configs,r,i.index),a=this.execATNWithFullContext(e,s,c,i,r,o),a}if(s.isAcceptState){if(null===s.predicates)return s.prediction;const t=i.index;i.seek(r);const n=this.evalSemanticContext(s.predicates,o,!0);if(0===n.length)throw this.noViableAlt(i,o,s.configs,r);return 1===n.length||this.reportAmbiguity(e,s,r,t,!1,n,s.configs),n.nextSetBit(0)}h=s,c!==n.EOF&&(i.consume(),c=i.LA(1))}}getExistingTargetState(t,e){return t.edges[e+1]}computeTargetState(e,s,i){const n=this.computeReachSet(s.configs,i,!1);if(null===n)return this.addDFAEdge(e,s,i,Vt.ERROR),Vt.ERROR;let r=Ht.fromConfigs(n);const o=t.getUniqueAlt(n);if(t.debug){const t=ue.getConflictingAltSubsets(n);console.log("SLL altSubSets="+E(t)+", configs="+n+", predict="+o+", allSubsetsConflict="+ue.allSubsetsConflict(t)+", conflictingAlts="+this.getConflictingAlts(n))}return o!==X.INVALID_ALT_NUMBER?(r.isAcceptState=!0,r.configs.uniqueAlt=o,r.prediction=o):ue.hasSLLConflictTerminatingPrediction(this.predictionMode,n)&&(r.configs.conflictingAlts=this.getConflictingAlts(n),r.requiresFullContext=!0,r.isAcceptState=!0,r.prediction=r.configs.conflictingAlts.nextSetBit(0)),r.isAcceptState&&r.configs.hasSemanticContext&&(this.predicateDFAState(r,this.atn.getDecisionState(e.decision)),null!==r.predicates&&(r.prediction=X.INVALID_ALT_NUMBER)),r=this.addDFAEdge(e,s,i,r),r}getRuleName(t){return null!==this.parser&&t>=0?this.parser.ruleNames[t]:"<rule "+t+">"}getTokenName(t){if(t===n.EOF)return"EOF";const e=(this.parser?.vocabulary??x.EMPTY_VOCABULARY).getDisplayName(t);return e===t.toString()?e:e+"<"+t+">"}getLookaheadName(t){return this.getTokenName(t.LA(1))}dumpDeadEndConfigs(t){console.log("dead end configs: ");const e=t.deadEndConfigs;for(const t of e){let e="no edges";if(t.state.transitions.length>0){const s=t.state.transitions[0];if(s instanceof pt)e="Atom "+this.getTokenName(s.labelValue);else if(s instanceof w){e=(s instanceof b?"~":"")+"Set "+s.label}}console.error(t.toString(this.parser,!0)+":"+e)}}predicateDFAState(t,e){const s=e.transitions.length,i=this.getConflictingAltsOrUniqueAlt(t.configs),n=this.getPredsForAmbigAlts(i,t.configs,s);null!==n?(t.predicates=this.getPredicatePredictions(i,n),t.prediction=X.INVALID_ALT_NUMBER):t.prediction=i.nextSetBit(0)}execATNWithFullContext(e,s,i,r,o,a){(t.debug||t.traceATNSimulator)&&console.log("execATNWithFullContext "+i);let h,c=!1,l=i;r.seek(o);let u=r.LA(1),d=-1;for(;;){if(h=this.computeReachSet(l,u,true),null===h){const t=this.noViableAlt(r,a,l,o);r.seek(o);const e=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(l,a);if(e!==X.INVALID_ALT_NUMBER)return e;throw t}const e=ue.getConflictingAltSubsets(h);if(t.debug&&console.log("LL altSubSets="+e+", predict="+ue.getUniqueAlt(e)+", resolvesToJustOneViableAlt="+ue.resolvesToJustOneViableAlt(e)),h.uniqueAlt=t.getUniqueAlt(h),h.uniqueAlt!==X.INVALID_ALT_NUMBER){d=h.uniqueAlt;break}if(this.predictionMode!==ue.LL_EXACT_AMBIG_DETECTION){if(d=ue.resolvesToJustOneViableAlt(e),d!==X.INVALID_ALT_NUMBER)break}else if(ue.allSubsetsConflict(e)&&ue.allSubsetsEqual(e)){c=!0,d=ue.getSingleViableAlt(e);break}l=h,u!==n.EOF&&(r.consume(),u=r.LA(1))}return h.uniqueAlt!==X.INVALID_ALT_NUMBER?(this.reportContextSensitivity(e,d,h,o,r.index),d):(this.reportAmbiguity(e,s,o,r.index,c,h.getAlts(),h),d)}computeReachSet(e,s,i){t.debug&&console.log("in computeReachSet, starting closure: "+e);const r=new J(i);let o=null;for(const a of e)if(t.debug&&console.log("testing "+this.getTokenName(s)+" at "+a),a.state instanceof rt)(i||s===n.EOF)&&(null===o&&(o=[]),o.push(a));else for(const t of a.state.transitions){const e=this.getReachableTarget(t,s);if(null!==e){const t=C.createWithConfig(e,a);r.add(t,this.mergeCache)}}let a=null;if(null===o&&s!==n.EOF&&(1===r.length||t.getUniqueAlt(r)!==X.INVALID_ALT_NUMBER)&&(a=r),null===a){a=new J(i);const t=new p,e=s===n.EOF;for(const s of r)this.closure(s,a,t,!1,i,e)}if(s===n.EOF&&(a=this.removeAllConfigsNotInRuleStopState(a,a===r)),!(null===o||i&&ue.hasConfigInRuleStopState(a)))for(const t of o)a.add(t,this.mergeCache);return 0===a.length?null:a}removeAllConfigsNotInRuleStopState(t,e){if(ue.allConfigsInRuleStopStates(t))return t;const s=new J(t.fullCtx);for(const i of t)if(i.state instanceof rt)s.add(i,this.mergeCache);else if(e&&i.state.epsilonOnlyTransitions){if(this.atn.nextTokens(i.state).contains(n.EPSILON)){const t=this.atn.ruleToStopState[i.state.ruleIndex];s.add(C.createWithConfig(t,i),this.mergeCache)}}return s}computeStartState(t,e,s){const i=z(this.atn,e),n=new J(s);for(let e=0;e<t.transitions.length;e++){const r=t.transitions[e].target,o=C.createWithContext(r,e+1,i),a=new p;this.closure(o,n,a,!0,s,!1)}return n}applyPrecedenceFilter(t){const e=[],s=new J(t.fullCtx);for(const i of t){if(1!==i.alt)continue;const t=i.semanticContext.evalPrecedence(this.parser,this.predictionState.outerContext);null!==t&&(e[i.state.stateNumber]=i.context,t!==i.semanticContext?s.add(C.duplicate(i,t),this.mergeCache):s.add(i,this.mergeCache))}for(const i of t)if(1!==i.alt){if(!i.precedenceFilterSuppressed){const t=e[i.state.stateNumber]||null;if(null!==t&&t.equals(i.context))continue}s.add(i,this.mergeCache)}return s}getReachableTarget(t,e){return t.matches(e,0,this.atn.maxTokenType)?t.target:null}getPredsForAmbigAlts(e,s,i){let n=[];for(const t of s)e.get(t.alt)&&(n[t.alt]=y.orContext(n[t.alt]??null,t.semanticContext));let r=0;for(let t=1;t<i+1;t++){const e=n[t]??null;null===e?n[t]=y.NONE:e!==y.NONE&&(r+=1)}return 0===r&&(n=null),t.debug&&console.log("getPredsForAmbigAlts result "+E(n)),n}getPredicatePredictions(t,e){const s=[];let i=!1;for(let n=1;n<e.length;n++){const r=e[n];t.get(n)&&s.push({pred:r,alt:n}),r!==y.NONE&&(i=!0)}return i?s:null}getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(t,e){const s=this.splitAccordingToSemanticValidity(t,e),i=s[0],n=s[1];let r=this.getAltThatFinishedDecisionEntryRule(i);return r!==X.INVALID_ALT_NUMBER||n.length>0&&(r=this.getAltThatFinishedDecisionEntryRule(n),r!==X.INVALID_ALT_NUMBER)?r:X.INVALID_ALT_NUMBER}getAltThatFinishedDecisionEntryRule(t){const e=[];for(const s of t)(s.reachesIntoOuterContext||s.state instanceof rt&&s.context.hasEmptyPath())&&e.indexOf(s.alt)<0&&e.push(s.alt);return 0===e.length?X.INVALID_ALT_NUMBER:Math.min(...e)}splitAccordingToSemanticValidity(t,e){const s=new J(t.fullCtx),i=new J(t.fullCtx);for(const n of t)if(n.semanticContext!==y.NONE){n.semanticContext.evaluate(this.parser,e)?s.add(n):i.add(n)}else s.add(n);return[s,i]}evalSemanticContext(e,s,i){const n=new c;for(const r of e){if(r.pred===y.NONE){if(n.set(r.alt),!i)break;continue}const e=r.pred.evaluate(this.parser,s);if((t.debug||t.dfaDebug)&&console.log("eval pred "+r+"="+e),e&&(n.set(r.alt),!i))break}return n}closure(t,e,s,i,n,r){this.closureCheckingStopState(t,e,s,i,n,0,r)}closureCheckingStopState(e,s,i,n,r,o,a){if(e.state instanceof rt){if(e.context&&!e.context.isEmpty()){for(let h=0;h<e.context.length;h++){if(e.context.getReturnState(h)===_.EMPTY_RETURN_STATE){if(r){s.add(C.createWithConfig(e.state,e,L.instance),this.mergeCache);continue}t.debug&&console.log("FALLING off rule "+this.getRuleName(e.state.ruleIndex)),this.closure_(e,s,i,n,r,o,a);continue}const c=this.atn.states[e.context.getReturnState(h)],l=e.context.getParent(h),u=C.createWithContext(c,e.alt,l,e.semanticContext);u.reachesIntoOuterContext=e.reachesIntoOuterContext,this.closureCheckingStopState(u,s,i,n,r,o-1,a)}return}if(r)return void s.add(e,this.mergeCache);t.debug&&console.log("FALLING off rule "+this.getRuleName(e.state.ruleIndex))}this.closure_(e,s,i,n,r,o,a)}closure_(e,s,i,n,r,o,a){const h=e.state;h.epsilonOnlyTransitions||s.add(e,this.mergeCache);for(let c=0;c<h.transitions.length;c++){if(0===c&&this.canDropLoopEntryEdgeInLeftRecursiveRule(e))continue;const l=h.transitions[c],u=n&&!(l instanceof ft),d=this.getEpsilonTarget(e,l,u,0===o,r,a);if(d){let n=o;if(e.state.constructor.stateType===R.RULE_STOP){if(this.predictionState.dfa&&this.predictionState?.dfa.isPrecedenceDfa){l.outermostPrecedenceReturn===this.predictionState?.dfa.atnStartState?.ruleIndex&&(d.precedenceFilterSuppressed=!0)}if(d.reachesIntoOuterContext=!0,i.getOrAdd(d)!==d)continue;s.dipsIntoOuterContext=!0,n-=1,t.debug&&console.log("dips into outer ctx: "+d)}else{if(!l.isEpsilon&&i.getOrAdd(d)!==d)continue;l instanceof gt&&n>=0&&(n+=1)}this.closureCheckingStopState(d,s,i,u,r,n,a)}}}canDropLoopEntryEdgeInLeftRecursiveRule(t){const e=t.state;if(e.constructor.stateType!==R.STAR_LOOP_ENTRY||!t.context)return!1;if(!e.precedenceRuleDecision||t.context.isEmpty()||t.context.hasEmptyPath())return!1;const s=t.context.length;for(let i=0;i<s;i++){if(this.atn.states[t.context.getReturnState(i)].ruleIndex!==e.ruleIndex)return!1}const i=e.transitions[0].target.endState.stateNumber,n=this.atn.states[i];for(let i=0;i<s;i++){const s=t.context.getReturnState(i),r=this.atn.states[s];if(1!==r.transitions.length||!r.transitions[0].isEpsilon)return!1;const o=r.transitions[0].target;if((r.constructor.stateType!==R.BLOCK_END||o!==e)&&(r!==n&&o!==n&&(o.constructor.stateType!==R.BLOCK_END||1!==o.transitions.length||!o.transitions[0].isEpsilon||o.transitions[0].target!==e)))return!1}return!0}getEpsilonTarget(e,s,i,r,o,a){switch(s.transitionType){case N.RULE:return this.ruleTransition(e,s);case N.PRECEDENCE:return this.precedenceTransition(e,s,i,r,o);case N.PREDICATE:return this.predTransition(e,s,i,r,o);case N.ACTION:if(t.debug){const t=s,e=-1===t.actionIndex?65535:t.actionIndex;console.log("ACTION edge "+t.ruleIndex+":"+e)}return C.createWithConfig(s.target,e);case N.EPSILON:return C.createWithConfig(s.target,e);case N.ATOM:case N.RANGE:case N.SET:return a&&s.matches(n.EOF,0,1)?C.createWithConfig(s.target,e):null;default:return null}}precedenceTransition(e,s,i,n,r){t.debug&&(console.log("PRED (collectPredicates="+i+") "+s.precedence+">=_p, ctx dependent=true"),null!==this.parser&&console.log("context surrounding pred is "+E(this.parser.getRuleInvocationStack())));let o=null;if(i&&n)if(r&&this.predictionState?.input){const t=this.predictionState.input.index;this.predictionState.input.seek(this.predictionState.startIndex);const i=s.getPredicate().evaluate(this.parser,this.predictionState.outerContext);this.predictionState.input.seek(t),i&&(o=C.createWithConfig(s.target,e))}else{const t=y.andContext(e.semanticContext,s.getPredicate());o=C.createWithSemanticContext(s.target,e,t)}else o=C.createWithConfig(s.target,e);return t.debug&&console.log("config from pred transition="+o),o}predTransition(e,s,i,n,r){t.debug&&(console.log("PRED (collectPredicates="+i+") "+s.ruleIndex+":"+s.predIndex+", ctx dependent="+s.isCtxDependent),null!==this.parser&&console.log("context surrounding pred is "+E(this.parser.getRuleInvocationStack())));let o=null;if(i&&(s.isCtxDependent&&n||!s.isCtxDependent))if(r&&this.predictionState?.input){const t=this.predictionState.input.index;this.predictionState.input.seek(this.predictionState.startIndex);const i=s.getPredicate().evaluate(this.parser,this.predictionState.outerContext);this.predictionState.input.seek(t),i&&(o=C.createWithConfig(s.target,e))}else{const t=y.andContext(e.semanticContext,s.getPredicate());o=C.createWithSemanticContext(s.target,e,t)}else o=C.createWithConfig(s.target,e);return t.debug&&console.log("config from pred transition="+o),o}ruleTransition(e,s){t.debug&&console.log("CALL rule "+this.getRuleName(s.target.ruleIndex)+", ctx="+e.context);const i=s.followState,n=V(e.context??void 0,i.stateNumber);return C.createWithConfig(s.target,e,n)}getConflictingAlts(t){const e=ue.getConflictingAltSubsets(t);return ue.getAlts(e)}getConflictingAltsOrUniqueAlt(t){let e;return t.uniqueAlt!==X.INVALID_ALT_NUMBER?(e=new c,e.set(t.uniqueAlt)):e=t.conflictingAlts,e}noViableAlt(t,e,s,i){return new he(this.parser,t,t.get(i),t.LT(1),s,e)}addDFAEdge(e,s,i,n){return t.debug&&console.log("EDGE "+s+" -> "+n+" upon "+this.getTokenName(i)),n=this.addDFAState(e,n),i<-1||i>this.atn.maxTokenType||(t.debug&&console.log("DFA=\n"+e.toString(null!=this.parser?this.parser.vocabulary:x.EMPTY_VOCABULARY)),s.edges[i+1]=n),n}addDFAState(t,e){if(e===Vt.ERROR)return e;const s=t.getState(e);return null!==s?s:(e.configs.readOnly||(e.configs.optimizeConfigs(this),e.configs.setReadonly(!0)),t.addState(e),e)}reportAttemptingFullContext(e,s,i,n,r){if(t.debug||t.retryDebug){const t=new g(n,r+1);console.log("reportAttemptingFullContext decision="+e.decision+":"+i+", input="+this.parser.tokenStream.getTextFromInterval(t))}this.parser.errorListenerDispatch.reportAttemptingFullContext(this.parser,e,n,r,s,i)}reportContextSensitivity(e,s,i,n,r){if(t.debug||t.retryDebug){const t=new g(n,r+1);console.log("reportContextSensitivity decision="+e.decision+":"+i+", input="+this.parser.tokenStream.getTextFromInterval(t))}this.parser.errorListenerDispatch.reportContextSensitivity(this.parser,e,n,r,s,i)}reportAmbiguity(e,s,i,n,r,o,a){if(t.debug||t.retryDebug){const t=new g(i,n+1);console.log("reportAmbiguity "+o+":"+a+", input="+this.parser.tokenStream.getTextFromInterval(t))}this.parser.errorListenerDispatch.reportAmbiguity(this.parser,e,i,n,r,o,a)}},pe=class{static{a(this,"PredictionContextCache")}cache=new P(u.instance);add(t){if(t===L.instance)return t;const e=this.cache.get(t);return e||(this.cache.set(t,t),t)}get(t){return this.cache.get(t)}get length(){return this.cache.size}},ge=class extends de{static{a(this,"ProfilingATNSimulator")}decisions;numDecisions=0;currentDecision=0;currentState;conflictingAltResolvedBySLL;sllStopIndex=0;llStopIndex=0;constructor(t){const e=t.interpreter.sharedContextCache;if(super(t,t.interpreter.atn,t.interpreter.decisionToDFA,e),e){this.numDecisions=this.atn.decisionToState.length,this.decisions=new Array(this.numDecisions);for(let t=0;t<this.numDecisions;t++)this.decisions[t]=new Wt(t)}}adaptivePredict(t,e,s){try{this.sllStopIndex=-1,this.llStopIndex=-1,this.currentDecision=e;const i=performance.now(),n=super.adaptivePredict(t,e,s),r=performance.now();this.decisions[e].timeInPrediction+=r-i,this.decisions[e].invocations++;const o=this.sllStopIndex-this.predictionState.startIndex+1;if(this.decisions[e].sllTotalLook+=o,this.decisions[e].sllMinLook=0===this.decisions[e].sllMinLook?o:Math.min(this.decisions[e].sllMinLook,o),o>this.decisions[e].sllMaxLook&&(this.decisions[e].sllMaxLook=o,this.decisions[e].sllMaxLookEvent={decision:e,configs:null,predictedAlt:n,input:t,startIndex:this.predictionState.startIndex,stopIndex:this.sllStopIndex,fullCtx:!1}),this.llStopIndex>=0){const s=this.llStopIndex-this.predictionState.startIndex+1;this.decisions[e].llTotalLook+=s,this.decisions[e].llMinLook=0===this.decisions[e].llMinLook?s:Math.min(this.decisions[e].llMinLook,s),s>this.decisions[e].llMaxLook&&(this.decisions[e].llMaxLook=s,this.decisions[e].llMaxLookEvent={decision:e,configs:null,predictedAlt:n,input:t,startIndex:this.predictionState.startIndex,stopIndex:this.llStopIndex,fullCtx:!0})}return n}finally{this.currentDecision=-1}}getExistingTargetState(t,e){this.sllStopIndex=this.predictionState.input.index;const s=super.getExistingTargetState(t,e);return void 0!==s&&(this.decisions[this.currentDecision].sllDFATransitions++,s===Vt.ERROR&&this.decisions[this.currentDecision].errors.push({decision:this.currentDecision,configs:t.configs,input:this.predictionState.input,startIndex:this.predictionState.startIndex,stopIndex:this.sllStopIndex,fullCtx:!1})),this.currentState=s,s}computeTargetState(t,e,s){const i=super.computeTargetState(t,e,s);return this.currentState=i,i}computeReachSet(t,e,s){s&&this.predictionState?.input&&(this.llStopIndex=this.predictionState.input.index);const i=super.computeReachSet(t,e,s);return this.predictionState?.input&&(s?(this.decisions[this.currentDecision].llATNTransitions++,null===i&&this.decisions[this.currentDecision].errors.push({decision:this.currentDecision,configs:t,input:this.predictionState.input,startIndex:this.predictionState.startIndex,stopIndex:this.sllStopIndex,fullCtx:!0})):(this.decisions[this.currentDecision].sllATNTransitions++,null===i&&this.decisions[this.currentDecision].errors.push({decision:this.currentDecision,configs:t,input:this.predictionState.input,startIndex:this.predictionState.startIndex,stopIndex:this.sllStopIndex,fullCtx:!1}))),i}reportAttemptingFullContext(t,e,s,i,n){this.conflictingAltResolvedBySLL=null!==e?e.nextSetBit(0):s.getAlts().nextSetBit(0),this.decisions[this.currentDecision].llFallback++,e&&super.reportAttemptingFullContext(t,e,s,i,n)}reportContextSensitivity(t,e,s,i,n){e!==this.conflictingAltResolvedBySLL&&this.predictionState.input&&this.decisions[this.currentDecision].contextSensitivities.push({decision:this.currentDecision,configs:s,input:this.predictionState.input,startIndex:i,stopIndex:n,fullCtx:!0}),super.reportContextSensitivity(t,e,s,i,n)}reportAmbiguity(t,e,s,i,n,r,o){let a;a=r?r.nextSetBit(0):o.getAlts().nextSetBit(0),this.predictionState?.input&&(o.fullCtx&&a!==this.conflictingAltResolvedBySLL&&this.decisions[this.currentDecision].contextSensitivities.push({decision:this.currentDecision,configs:o,input:this.predictionState.input,startIndex:s,stopIndex:i,fullCtx:!0}),this.decisions[this.currentDecision].ambiguities.push({ambigAlts:r,decision:this.currentDecision,configs:o,input:this.predictionState.input,startIndex:s,stopIndex:i,fullCtx:o.fullCtx})),super.reportAmbiguity(t,e,s,i,n,r,o)}getDecisionInfo(){return this.decisions}getCurrentState(){return this.currentState}};(zt||(zt={})).toString=a((t=>`(${t.pred}, ${t.alt})`),"toString");var xe=class extends Error{static{a(this,"ParseCancellationException")}constructor(t){super(),this.cause=t}};(class{static{a(this,"InterpreterDataReader")}static parseInterpreterData(t){const e=[],s=[],i=[],n=[],r=[],o=t.split("\n");let a=0,h=o[a++];if("token literal names:"!==h)throw new Error("Unexpected data entry");for(;;){if(h=o[a++],0===h.length)break;n.push("null"===h?null:h)}if(h=o[a++],"token symbolic names:"!==h)throw new Error("Unexpected data entry");for(;;){if(h=o[a++],0===h.length)break;r.push("null"===h?null:h)}if(h=o[a++],"rule names:"!==h)throw new Error("Unexpected data entry");for(;;){if(h=o[a++],0===h.length)break;e.push(h)}if(h=o[a++],"channel names:"===h){for(;;){if(h=o[a++],0===h.length)break;s.push(h)}if(h=o[a++],"mode names:"!==h)throw new Error("Unexpected data entry");for(;;){if(h=o[a++],0===h.length)break;i.push(h)}}if(h=o[a++],"atn:"!==h)throw new Error("Unexpected data entry");h=o[a++];const c=h.split(",");let l;const u=[];for(let t=0;t<c.length;++t){const e=c[t];l=e.startsWith("[")?Number(e.substring(1).trim()):e.endsWith("]")?Number(e.substring(0,e.length-1).trim()):Number(e.trim()),u[t]=l}return{atn:(new Mt).deserialize(u),vocabulary:new x(n,r,[]),ruleNames:e,channels:s.length>0?s:void 0,modes:i.length>0?i:void 0}}});var fe,me=class{static{a(this,"AbstractParseTreeVisitor")}visit(t){return t.accept(this)}visitChildren(t){let e=this.defaultResult();const s=t.getChildCount();for(let i=0;i<s&&this.shouldVisitNextChild(t,e);i++){const s=t.getChild(i);if(s){const t=s.accept(this);e=this.aggregateResult(e,t)}}return e}visitTerminal(t){return this.defaultResult()}visitErrorNode(t){return this.defaultResult()}defaultResult(){return null}shouldVisitNextChild(t,e){return!0}aggregateResult(t,e){return e}};(class t{static{a(this,"ParseTreeWalker")}static DEFAULT=new t;walk(t,e){if(e instanceof F)t.visitErrorNode(e);else if(e instanceof D)t.visitTerminal(e);else{const s=e;this.enterRule(t,s);for(let s=0;s<e.getChildCount();s++)this.walk(t,e.getChild(s));this.exitRule(t,s)}}enterRule(t,e){const s=e.ruleContext;t.enterEveryRule(s),s.enterRule(t)}exitRule(t,e){const s=e.ruleContext;s.exitRule(t),t.exitEveryRule(s)}}),(fe||(fe={})).fromString=a((t=>new Ee(t)),"fromString");var Ee=class{static{a(this,"CharStreamImpl")}name="";index=0;data;constructor(t){const e=[];for(const s of t)e.push(s.codePointAt(0));this.data=new Uint32Array(e)}reset(){this.index=0}consume(){if(this.index>=this.data.length)throw new Error("cannot consume EOF");this.index+=1}LA(t){if(0===t)return 0;t<0&&(t+=1);const e=this.index+t-1;return e<0||e>=this.data.length?n.EOF:this.data[e]}mark(){return-1}release(t){}seek(t){t<=this.index?this.index=t:this.index=Math.min(t,this.data.length)}getTextFromRange(t,e){return(e=e??this.data.length-1)>=this.data.length&&(e=this.data.length-1),t>=this.data.length?"":this.stringFromRange(t,e+1)}getTextFromInterval(t){const e=t.start;let s=t.stop;return s>=this.data.length&&(s=this.data.length-1),e>=this.data.length?"":this.stringFromRange(e,s+1)}toString(){return this.stringFromRange(0)}get size(){return this.data.length}getSourceName(){return this.name?this.name:s.UNKNOWN_SOURCE_NAME}stringFromRange(t,e){const s=this.data.slice(t,e);let i="";return s.forEach((t=>{i+=String.fromCodePoint(t)})),i}},Te=a((t=>void 0!==t.setText),"isWritableToken"),Se=class{static{a(this,"BufferedTokenStream")}tokenSource;tokens=[];p=-1;fetchedEOF=!1;constructor(t){this.tokenSource=t}mark(){return 0}release(t){}reset(){this.seek(0)}seek(t){this.lazyInit(),this.p=this.adjustSeekIndex(t)}get size(){return this.tokens.length}get index(){return this.p}get(t){return this.lazyInit(),this.tokens[t]}consume(){let t=!1;if(t=this.p>=0&&(this.fetchedEOF?this.p<this.tokens.length-1:this.p<this.tokens.length),!t&&this.LA(1)===n.EOF)throw new Error("cannot consume EOF");this.sync(this.p+1)&&(this.p=this.adjustSeekIndex(this.p+1))}sync(t){const e=t-this.tokens.length+1;if(e>0){return this.fetch(e)>=e}return!0}fetch(t){if(this.fetchedEOF)return 0;for(let e=0;e<t;e++){const t=this.tokenSource.nextToken();if(Te(t)&&(t.tokenIndex=this.tokens.length),this.tokens.push(t),t.type===n.EOF)return this.fetchedEOF=!0,e+1}return t}getTokens(t,e,s){if(this.lazyInit(),void 0===t&&void 0===e)return this.tokens;if(t??=0,void 0===e&&(e=this.tokens.length-1),t<0||e>=this.tokens.length||e<0||t>=this.tokens.length)throw new RangeError("start "+t+" or stop "+e+" not in 0.."+(this.tokens.length-1));if(t>e)return[];if(void 0===s)return this.tokens.slice(t,e+1);const i=[];e>=this.tokens.length&&(e=this.tokens.length-1);for(let r=t;r<e;r++){const t=this.tokens[r];if(t.type===n.EOF){i.push(t);break}s.has(t.type)&&i.push(t)}return i}LA(t){return this.LT(t)?.type??n.INVALID_TYPE}LB(t){return this.p-t<0?null:this.tokens[this.p-t]}LT(t){if(this.lazyInit(),0===t)return null;if(t<0)return this.LB(-t);const e=this.p+t-1;return this.sync(e),e>=this.tokens.length?this.tokens[this.tokens.length-1]:this.tokens[e]}adjustSeekIndex(t){return t}lazyInit(){-1===this.p&&this.setup()}setup(){this.sync(0),this.p=this.adjustSeekIndex(0)}setTokenSource(t){this.tokenSource=t,this.tokens=[],this.p=-1,this.fetchedEOF=!1}nextTokenOnChannel(t,e){if(this.sync(t),t>=this.tokens.length)return-1;let s=this.tokens[t];for(;s.channel!==e;){if(s.type===n.EOF)return-1;t+=1,this.sync(t),s=this.tokens[t]}return t}previousTokenOnChannel(t,e){if(t>=this.tokens.length)return this.tokens.length-1;for(;t>=0;){const s=this.tokens[t];if(s.type===n.EOF||s.channel===e)return t;--t}return t}getHiddenTokensToRight(t,e){if(void 0===e&&(e=-1),this.lazyInit(),t<0||t>=this.tokens.length)throw new Error(`${t} not in 0..${this.tokens.length-1}`);const s=this.nextTokenOnChannel(t+1,Jt.DEFAULT_TOKEN_CHANNEL),i=t+1,n=-1===s?this.tokens.length-1:s;return this.filterForChannel(i,n,e)}getHiddenTokensToLeft(t,e){if(void 0===e&&(e=-1),this.lazyInit(),t<0||t>=this.tokens.length)throw new Error(`${t} not in 0..${this.tokens.length-1}`);const s=this.previousTokenOnChannel(t-1,Jt.DEFAULT_TOKEN_CHANNEL);if(s===t-1)return;const i=s+1,n=t-1;return this.filterForChannel(i,n,e)}filterForChannel(t,e,s){const i=[];for(let n=t;n<e+1;n++){const t=this.tokens[n];-1===s?t.channel!==Jt.DEFAULT_TOKEN_CHANNEL&&i.push(t):t.channel===s&&i.push(t)}if(0!==i.length)return i}getSourceName(){return this.tokenSource.sourceName}getText(){return this.getTextFromInterval(g.of(0,this.size-1))}getTextFromInterval(t){const e=t.start;let s=t.stop;if(e<0||s<0)return"";this.sync(s),s>=this.tokens.length&&(s=this.tokens.length-1);let i="";for(let t=e;t<=s;++t){const e=this.tokens[t];if(e.type===n.EOF)break;i+=e.text}return i}getTextFromContext(t){return this.getTextFromInterval(t.getSourceInterval())}getTextFromRange(t,e){return null!==t&&null!==e?this.getTextFromInterval(g.of(t.tokenIndex,e.tokenIndex)):""}fill(){for(this.lazyInit();1e3===this.fetch(1e3););}setLine(t){this.tokenSource.line=t}setColumn(t){this.tokenSource.column=t}},Ae=class extends Se{static{a(this,"CommonTokenStream")}channel=n.DEFAULT_CHANNEL;constructor(t,e){super(t),this.channel=e??n.DEFAULT_CHANNEL}adjustSeekIndex(t){return this.nextTokenOnChannel(t,this.channel)}LB(t){if(0===t||this.index-t<0)return null;let e=this.index,s=1;for(;s<=t;)e=this.previousTokenOnChannel(e-1,this.channel),s+=1;return e<0?null:this.tokens[e]}LT(t){if(this.lazyInit(),0===t)return null;if(t<0)return this.LB(-t);let e=this.index,s=1;for(;s<t;)this.sync(e+1)&&(e=this.nextTokenOnChannel(e+1,this.channel)),s+=1;return this.tokens[e]}getNumberOfOnChannelTokens(){let t=0;this.fill();for(const e of this.tokens)if(e.channel===this.channel&&(t+=1),e.type===n.EOF)break;return t}},ye=class t extends Jt{static{a(this,"XPathLexer")}static TOKEN_REF=1;static RULE_REF=2;static ANYWHERE=3;static ROOT=4;static WILDCARD=5;static BANG=6;static ID=7;static STRING=8;static channelNames=["DEFAULT_TOKEN_CHANNEL","HIDDEN"];static literalNames=[null,null,null,"'//'","'/'","'*'","'!'"];static symbolicNames=[null,"TOKEN_REF","RULE_REF","ANYWHERE","ROOT","WILDCARD","BANG","ID","STRING"];static modeNames=["DEFAULT_MODE"];static ruleNames=["ANYWHERE","ROOT","WILDCARD","BANG","ID","NameChar","NameStartChar","STRING"];constructor(e){super(e),this.interpreter=new oe(this,t._ATN,t.decisionsToDFA,new pe)}get grammarFileName(){return"XPathLexer.g4"}get literalNames(){return t.literalNames}get symbolicNames(){return t.symbolicNames}get ruleNames(){return t.ruleNames}get serializedATN(){return t._serializedATN}get channelNames(){return t.channelNames}get modeNames(){return t.modeNames}action(t,e,s){if(4===e)this.ID_action(t,s)}ID_action(e,s){if(0===s){const e=this.text;e.charAt(0)===e.charAt(0).toUpperCase()?this.type=t.TOKEN_REF:this.type=t.RULE_REF}}static _serializedATN=[4,0,8,48,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,5,4,29,8,4,10,4,12,4,32,9,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,5,7,42,8,7,10,7,12,7,45,9,7,1,7,1,7,1,43,0,8,1,3,3,4,5,5,7,6,9,7,11,0,13,0,15,8,1,0,2,784,0,0,8,14,27,48,57,65,90,95,95,97,122,127,159,170,170,173,173,181,181,186,186,192,214,216,246,248,705,710,721,736,740,748,748,750,750,768,884,886,887,890,893,895,895,902,902,904,906,908,908,910,929,931,1013,1015,1153,1155,1159,1162,1327,1329,1366,1369,1369,1376,1416,1425,1469,1471,1471,1473,1474,1476,1477,1479,1479,1488,1514,1519,1522,1536,1541,1552,1562,1564,1564,1568,1641,1646,1747,1749,1757,1759,1768,1770,1788,1791,1791,1807,1866,1869,1969,1984,2037,2042,2042,2045,2045,2048,2093,2112,2139,2144,2154,2160,2183,2185,2190,2192,2193,2200,2403,2406,2415,2417,2435,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2492,2500,2503,2504,2507,2510,2519,2519,2524,2525,2527,2531,2534,2545,2556,2556,2558,2558,2561,2563,2565,2570,2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2620,2620,2622,2626,2631,2632,2635,2637,2641,2641,2649,2652,2654,2654,2662,2677,2689,2691,2693,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2748,2757,2759,2761,2763,2765,2768,2768,2784,2787,2790,2799,2809,2815,2817,2819,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,2869,2873,2876,2884,2887,2888,2891,2893,2901,2903,2908,2909,2911,2915,2918,2927,2929,2929,2946,2947,2949,2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,3001,3006,3010,3014,3016,3018,3021,3024,3024,3031,3031,3046,3055,3072,3084,3086,3088,3090,3112,3114,3129,3132,3140,3142,3144,3146,3149,3157,3158,3160,3162,3165,3165,3168,3171,3174,3183,3200,3203,3205,3212,3214,3216,3218,3240,3242,3251,3253,3257,3260,3268,3270,3272,3274,3277,3285,3286,3293,3294,3296,3299,3302,3311,3313,3315,3328,3340,3342,3344,3346,3396,3398,3400,3402,3406,3412,3415,3423,3427,3430,3439,3450,3455,3457,3459,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3530,3530,3535,3540,3542,3542,3544,3551,3558,3567,3570,3571,3585,3642,3648,3662,3664,3673,3713,3714,3716,3716,3718,3722,3724,3747,3749,3749,3751,3773,3776,3780,3782,3782,3784,3790,3792,3801,3804,3807,3840,3840,3864,3865,3872,3881,3893,3893,3895,3895,3897,3897,3902,3911,3913,3948,3953,3972,3974,3991,3993,4028,4038,4038,4096,4169,4176,4253,4256,4293,4295,4295,4301,4301,4304,4346,4348,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4744,4746,4749,4752,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4822,4824,4880,4882,4885,4888,4954,4957,4959,4992,5007,5024,5109,5112,5117,5121,5740,5743,5759,5761,5786,5792,5866,5870,5880,5888,5909,5919,5940,5952,5971,5984,5996,5998,6e3,6002,6003,6016,6099,6103,6103,6108,6109,6112,6121,6155,6169,6176,6264,6272,6314,6320,6389,6400,6430,6432,6443,6448,6459,6470,6509,6512,6516,6528,6571,6576,6601,6608,6617,6656,6683,6688,6750,6752,6780,6783,6793,6800,6809,6823,6823,6832,6845,6847,6862,6912,6988,6992,7001,7019,7027,7040,7155,7168,7223,7232,7241,7245,7293,7296,7304,7312,7354,7357,7359,7376,7378,7380,7418,7424,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,8203,8207,8234,8238,8255,8256,8276,8276,8288,8292,8294,8303,8305,8305,8319,8319,8336,8348,8400,8412,8417,8417,8421,8432,8450,8450,8455,8455,8458,8467,8469,8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8505,8508,8511,8517,8521,8526,8526,8544,8584,11264,11492,11499,11507,11520,11557,11559,11559,11565,11565,11568,11623,11631,11631,11647,11670,11680,11686,11688,11694,11696,11702,11704,11710,11712,11718,11720,11726,11728,11734,11736,11742,11744,11775,11823,11823,12293,12295,12321,12335,12337,12341,12344,12348,12353,12438,12441,12442,12445,12447,12449,12538,12540,12543,12549,12591,12593,12686,12704,12735,12784,12799,13312,19903,19968,42124,42192,42237,42240,42508,42512,42539,42560,42607,42612,42621,42623,42737,42775,42783,42786,42888,42891,42954,42960,42961,42963,42963,42965,42969,42994,43047,43052,43052,43072,43123,43136,43205,43216,43225,43232,43255,43259,43259,43261,43309,43312,43347,43360,43388,43392,43456,43471,43481,43488,43518,43520,43574,43584,43597,43600,43609,43616,43638,43642,43714,43739,43741,43744,43759,43762,43766,43777,43782,43785,43790,43793,43798,43808,43814,43816,43822,43824,43866,43868,43881,43888,44010,44012,44013,44016,44025,44032,55203,55216,55238,55243,55291,63744,64109,64112,64217,64256,64262,64275,64279,64285,64296,64298,64310,64312,64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65019,65024,65039,65056,65071,65075,65076,65101,65103,65136,65140,65142,65276,65279,65279,65296,65305,65313,65338,65343,65343,65345,65370,65382,65470,65474,65479,65482,65487,65490,65495,65498,65500,65529,65531,65536,65547,65549,65574,65576,65594,65596,65597,65599,65613,65616,65629,65664,65786,65856,65908,66045,66045,66176,66204,66208,66256,66272,66272,66304,66335,66349,66378,66384,66426,66432,66461,66464,66499,66504,66511,66513,66517,66560,66717,66720,66729,66736,66771,66776,66811,66816,66855,66864,66915,66928,66938,66940,66954,66956,66962,66964,66965,66967,66977,66979,66993,66995,67001,67003,67004,67072,67382,67392,67413,67424,67431,67456,67461,67463,67504,67506,67514,67584,67589,67592,67592,67594,67637,67639,67640,67644,67644,67647,67669,67680,67702,67712,67742,67808,67826,67828,67829,67840,67861,67872,67897,67968,68023,68030,68031,68096,68099,68101,68102,68108,68115,68117,68119,68121,68149,68152,68154,68159,68159,68192,68220,68224,68252,68288,68295,68297,68326,68352,68405,68416,68437,68448,68466,68480,68497,68608,68680,68736,68786,68800,68850,68864,68903,68912,68921,69248,69289,69291,69292,69296,69297,69373,69404,69415,69415,69424,69456,69488,69509,69552,69572,69600,69622,69632,69702,69734,69749,69759,69818,69821,69821,69826,69826,69837,69837,69840,69864,69872,69881,69888,69940,69942,69951,69956,69959,69968,70003,70006,70006,70016,70084,70089,70092,70094,70106,70108,70108,70144,70161,70163,70199,70206,70209,70272,70278,70280,70280,70282,70285,70287,70301,70303,70312,70320,70378,70384,70393,70400,70403,70405,70412,70415,70416,70419,70440,70442,70448,70450,70451,70453,70457,70459,70468,70471,70472,70475,70477,70480,70480,70487,70487,70493,70499,70502,70508,70512,70516,70656,70730,70736,70745,70750,70753,70784,70853,70855,70855,70864,70873,71040,71093,71096,71104,71128,71133,71168,71232,71236,71236,71248,71257,71296,71352,71360,71369,71424,71450,71453,71467,71472,71481,71488,71494,71680,71738,71840,71913,71935,71942,71945,71945,71948,71955,71957,71958,71960,71989,71991,71992,71995,72003,72016,72025,72096,72103,72106,72151,72154,72161,72163,72164,72192,72254,72263,72263,72272,72345,72349,72349,72368,72440,72704,72712,72714,72758,72760,72768,72784,72793,72818,72847,72850,72871,72873,72886,72960,72966,72968,72969,72971,73014,73018,73018,73020,73021,73023,73031,73040,73049,73056,73061,73063,73064,73066,73102,73104,73105,73107,73112,73120,73129,73440,73462,73472,73488,73490,73530,73534,73538,73552,73561,73648,73648,73728,74649,74752,74862,74880,75075,77712,77808,77824,78933,82944,83526,92160,92728,92736,92766,92768,92777,92784,92862,92864,92873,92880,92909,92912,92916,92928,92982,92992,92995,93008,93017,93027,93047,93053,93071,93760,93823,93952,94026,94031,94087,94095,94111,94176,94177,94179,94180,94192,94193,94208,100343,100352,101589,101632,101640,110576,110579,110581,110587,110589,110590,110592,110882,110898,110898,110928,110930,110933,110933,110948,110951,110960,111355,113664,113770,113776,113788,113792,113800,113808,113817,113821,113822,113824,113827,118528,118573,118576,118598,119141,119145,119149,119170,119173,119179,119210,119213,119362,119364,119808,119892,119894,119964,119966,119967,119970,119970,119973,119974,119977,119980,119982,119993,119995,119995,119997,120003,120005,120069,120071,120074,120077,120084,120086,120092,120094,120121,120123,120126,120128,120132,120134,120134,120138,120144,120146,120485,120488,120512,120514,120538,120540,120570,120572,120596,120598,120628,120630,120654,120656,120686,120688,120712,120714,120744,120746,120770,120772,120779,120782,120831,121344,121398,121403,121452,121461,121461,121476,121476,121499,121503,121505,121519,122624,122654,122661,122666,122880,122886,122888,122904,122907,122913,122915,122916,122918,122922,122928,122989,123023,123023,123136,123180,123184,123197,123200,123209,123214,123214,123536,123566,123584,123641,124112,124153,124896,124902,124904,124907,124909,124910,124912,124926,124928,125124,125136,125142,125184,125259,125264,125273,126464,126467,126469,126495,126497,126498,126500,126500,126503,126503,126505,126514,126516,126519,126521,126521,126523,126523,126530,126530,126535,126535,126537,126537,126539,126539,126541,126543,126545,126546,126548,126548,126551,126551,126553,126553,126555,126555,126557,126557,126559,126559,126561,126562,126564,126564,126567,126570,126572,126578,126580,126583,126585,126588,126590,126590,126592,126601,126603,126619,126625,126627,126629,126633,126635,126651,130032,130041,131072,173791,173824,177977,177984,178205,178208,183969,183984,191456,194560,195101,196608,201546,201552,205743,917505,917505,917536,917631,917760,917999,662,0,65,90,97,122,170,170,181,181,186,186,192,214,216,246,248,705,710,721,736,740,748,748,750,750,880,884,886,887,890,893,895,895,902,902,904,906,908,908,910,929,931,1013,1015,1153,1162,1327,1329,1366,1369,1369,1376,1416,1488,1514,1519,1522,1568,1610,1646,1647,1649,1747,1749,1749,1765,1766,1774,1775,1786,1788,1791,1791,1808,1808,1810,1839,1869,1957,1969,1969,1994,2026,2036,2037,2042,2042,2048,2069,2074,2074,2084,2084,2088,2088,2112,2136,2144,2154,2160,2183,2185,2190,2208,2249,2308,2361,2365,2365,2384,2384,2392,2401,2417,2432,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2493,2493,2510,2510,2524,2525,2527,2529,2544,2545,2556,2556,2565,2570,2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2649,2652,2654,2654,2674,2676,2693,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2749,2749,2768,2768,2784,2785,2809,2809,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,2869,2873,2877,2877,2908,2909,2911,2913,2929,2929,2947,2947,2949,2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,3001,3024,3024,3077,3084,3086,3088,3090,3112,3114,3129,3133,3133,3160,3162,3165,3165,3168,3169,3200,3200,3205,3212,3214,3216,3218,3240,3242,3251,3253,3257,3261,3261,3293,3294,3296,3297,3313,3314,3332,3340,3342,3344,3346,3386,3389,3389,3406,3406,3412,3414,3423,3425,3450,3455,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3585,3632,3634,3635,3648,3654,3713,3714,3716,3716,3718,3722,3724,3747,3749,3749,3751,3760,3762,3763,3773,3773,3776,3780,3782,3782,3804,3807,3840,3840,3904,3911,3913,3948,3976,3980,4096,4138,4159,4159,4176,4181,4186,4189,4193,4193,4197,4198,4206,4208,4213,4225,4238,4238,4256,4293,4295,4295,4301,4301,4304,4346,4348,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4744,4746,4749,4752,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4822,4824,4880,4882,4885,4888,4954,4992,5007,5024,5109,5112,5117,5121,5740,5743,5759,5761,5786,5792,5866,5870,5880,5888,5905,5919,5937,5952,5969,5984,5996,5998,6e3,6016,6067,6103,6103,6108,6108,6176,6264,6272,6276,6279,6312,6314,6314,6320,6389,6400,6430,6480,6509,6512,6516,6528,6571,6576,6601,6656,6678,6688,6740,6823,6823,6917,6963,6981,6988,7043,7072,7086,7087,7098,7141,7168,7203,7245,7247,7258,7293,7296,7304,7312,7354,7357,7359,7401,7404,7406,7411,7413,7414,7418,7418,7424,7615,7680,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,8305,8305,8319,8319,8336,8348,8450,8450,8455,8455,8458,8467,8469,8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8505,8508,8511,8517,8521,8526,8526,8544,8584,11264,11492,11499,11502,11506,11507,11520,11557,11559,11559,11565,11565,11568,11623,11631,11631,11648,11670,11680,11686,11688,11694,11696,11702,11704,11710,11712,11718,11720,11726,11728,11734,11736,11742,11823,11823,12293,12295,12321,12329,12337,12341,12344,12348,12353,12438,12445,12447,12449,12538,12540,12543,12549,12591,12593,12686,12704,12735,12784,12799,13312,19903,19968,42124,42192,42237,42240,42508,42512,42527,42538,42539,42560,42606,42623,42653,42656,42735,42775,42783,42786,42888,42891,42954,42960,42961,42963,42963,42965,42969,42994,43009,43011,43013,43015,43018,43020,43042,43072,43123,43138,43187,43250,43255,43259,43259,43261,43262,43274,43301,43312,43334,43360,43388,43396,43442,43471,43471,43488,43492,43494,43503,43514,43518,43520,43560,43584,43586,43588,43595,43616,43638,43642,43642,43646,43695,43697,43697,43701,43702,43705,43709,43712,43712,43714,43714,43739,43741,43744,43754,43762,43764,43777,43782,43785,43790,43793,43798,43808,43814,43816,43822,43824,43866,43868,43881,43888,44002,44032,55203,55216,55238,55243,55291,63744,64109,64112,64217,64256,64262,64275,64279,64285,64285,64287,64296,64298,64310,64312,64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65019,65136,65140,65142,65276,65313,65338,65345,65370,65382,65470,65474,65479,65482,65487,65490,65495,65498,65500,65536,65547,65549,65574,65576,65594,65596,65597,65599,65613,65616,65629,65664,65786,65856,65908,66176,66204,66208,66256,66304,66335,66349,66378,66384,66421,66432,66461,66464,66499,66504,66511,66513,66517,66560,66717,66736,66771,66776,66811,66816,66855,66864,66915,66928,66938,66940,66954,66956,66962,66964,66965,66967,66977,66979,66993,66995,67001,67003,67004,67072,67382,67392,67413,67424,67431,67456,67461,67463,67504,67506,67514,67584,67589,67592,67592,67594,67637,67639,67640,67644,67644,67647,67669,67680,67702,67712,67742,67808,67826,67828,67829,67840,67861,67872,67897,67968,68023,68030,68031,68096,68096,68112,68115,68117,68119,68121,68149,68192,68220,68224,68252,68288,68295,68297,68324,68352,68405,68416,68437,68448,68466,68480,68497,68608,68680,68736,68786,68800,68850,68864,68899,69248,69289,69296,69297,69376,69404,69415,69415,69424,69445,69488,69505,69552,69572,69600,69622,69635,69687,69745,69746,69749,69749,69763,69807,69840,69864,69891,69926,69956,69956,69959,69959,69968,70002,70006,70006,70019,70066,70081,70084,70106,70106,70108,70108,70144,70161,70163,70187,70207,70208,70272,70278,70280,70280,70282,70285,70287,70301,70303,70312,70320,70366,70405,70412,70415,70416,70419,70440,70442,70448,70450,70451,70453,70457,70461,70461,70480,70480,70493,70497,70656,70708,70727,70730,70751,70753,70784,70831,70852,70853,70855,70855,71040,71086,71128,71131,71168,71215,71236,71236,71296,71338,71352,71352,71424,71450,71488,71494,71680,71723,71840,71903,71935,71942,71945,71945,71948,71955,71957,71958,71960,71983,71999,71999,72001,72001,72096,72103,72106,72144,72161,72161,72163,72163,72192,72192,72203,72242,72250,72250,72272,72272,72284,72329,72349,72349,72368,72440,72704,72712,72714,72750,72768,72768,72818,72847,72960,72966,72968,72969,72971,73008,73030,73030,73056,73061,73063,73064,73066,73097,73112,73112,73440,73458,73474,73474,73476,73488,73490,73523,73648,73648,73728,74649,74752,74862,74880,75075,77712,77808,77824,78895,78913,78918,82944,83526,92160,92728,92736,92766,92784,92862,92880,92909,92928,92975,92992,92995,93027,93047,93053,93071,93760,93823,93952,94026,94032,94032,94099,94111,94176,94177,94179,94179,94208,100343,100352,101589,101632,101640,110576,110579,110581,110587,110589,110590,110592,110882,110898,110898,110928,110930,110933,110933,110948,110951,110960,111355,113664,113770,113776,113788,113792,113800,113808,113817,119808,119892,119894,119964,119966,119967,119970,119970,119973,119974,119977,119980,119982,119993,119995,119995,119997,120003,120005,120069,120071,120074,120077,120084,120086,120092,120094,120121,120123,120126,120128,120132,120134,120134,120138,120144,120146,120485,120488,120512,120514,120538,120540,120570,120572,120596,120598,120628,120630,120654,120656,120686,120688,120712,120714,120744,120746,120770,120772,120779,122624,122654,122661,122666,122928,122989,123136,123180,123191,123197,123214,123214,123536,123565,123584,123627,124112,124139,124896,124902,124904,124907,124909,124910,124912,124926,124928,125124,125184,125251,125259,125259,126464,126467,126469,126495,126497,126498,126500,126500,126503,126503,126505,126514,126516,126519,126521,126521,126523,126523,126530,126530,126535,126535,126537,126537,126539,126539,126541,126543,126545,126546,126548,126548,126551,126551,126553,126553,126555,126555,126557,126557,126559,126559,126561,126562,126564,126564,126567,126570,126572,126578,126580,126583,126585,126588,126590,126590,126592,126601,126603,126619,126625,126627,126629,126633,126635,126651,131072,173791,173824,177977,177984,178205,178208,183969,183984,191456,194560,195101,196608,201546,201552,205743,47,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,15,1,0,0,0,1,17,1,0,0,0,3,20,1,0,0,0,5,22,1,0,0,0,7,24,1,0,0,0,9,26,1,0,0,0,11,35,1,0,0,0,13,37,1,0,0,0,15,39,1,0,0,0,17,18,5,47,0,0,18,19,5,47,0,0,19,2,1,0,0,0,20,21,5,47,0,0,21,4,1,0,0,0,22,23,5,42,0,0,23,6,1,0,0,0,24,25,5,33,0,0,25,8,1,0,0,0,26,30,3,13,6,0,27,29,3,11,5,0,28,27,1,0,0,0,29,32,1,0,0,0,30,28,1,0,0,0,30,31,1,0,0,0,31,33,1,0,0,0,32,30,1,0,0,0,33,34,6,4,0,0,34,10,1,0,0,0,35,36,7,0,0,0,36,12,1,0,0,0,37,38,7,1,0,0,38,14,1,0,0,0,39,43,5,39,0,0,40,42,9,0,0,0,41,40,1,0,0,0,42,45,1,0,0,0,43,44,1,0,0,0,43,41,1,0,0,0,44,46,1,0,0,0,45,43,1,0,0,0,46,47,5,39,0,0,47,16,1,0,0,0,3,0,30,43,1,1,4,0];static __ATN;static get _ATN(){return t.__ATN||(t.__ATN=(new Mt).deserialize(t._serializedATN)),t.__ATN}static vocabulary=new x(t.literalNames,t.symbolicNames,[]);get vocabulary(){return t.vocabulary}static decisionsToDFA=t._ATN.decisionToState.map(((t,e)=>new ee(t,e)))},ke=class extends $t{static{a(this,"XPathLexerErrorListener")}syntaxError(t,e,s,i,n,r){}},ve=class{static{a(this,"XPathElement")}invert;nodeName;constructor(t){this.nodeName=t,this.invert=!1}toString(){return"XPathElement["+(this.invert?"!":"")+this.nodeName+"]"}},Ce=class extends ve{static{a(this,"XPathRuleAnywhereElement")}ruleIndex;constructor(t,e){super(t),this.ruleIndex=e}evaluate(t){return M.findAllRuleNodes(t,this.ruleIndex)}toString(){return"XPathRuleAnywhereElement["+(this.invert?"!":"")+this.nodeName+"]"}},Re=class extends ve{static{a(this,"XPathRuleElement")}ruleIndex;constructor(t,e){super(t),this.ruleIndex=e}evaluate(t){const e=[];for(const s of M.getChildren(t))s instanceof U&&(s.ruleIndex===this.ruleIndex&&!this.invert||s.ruleIndex!==this.ruleIndex&&this.invert)&&e.push(s);return e}toString(){return"XPathRuleElement["+(this.invert?"!":"")+this.nodeName+"]"}},_e=class extends ve{static{a(this,"XPathTokenAnywhereElement")}tokenType;constructor(t,e){super(t),this.tokenType=e}evaluate(t){return M.findAllTokenNodes(t,this.tokenType)}toString(){return"XPathTokenAnywhereElement["+(this.invert?"!":"")+this.nodeName+"]"}},Ie=class extends ve{static{a(this,"XPathTokenElement")}tokenType;constructor(t,e){super(t),this.tokenType=e}evaluate(t){const e=[];for(const s of M.getChildren(t))s instanceof D&&s.symbol&&(s.symbol.type===this.tokenType&&!this.invert||s.symbol.type!==this.tokenType&&this.invert)&&e.push(s);return e}toString(){return"XPathTokenElement["+(this.invert?"!":"")+this.nodeName+"]"}},Le=class extends ve{static{a(this,"XPathWildcardAnywhereElement")}constructor(){super(we.WILDCARD)}evaluate(t){return this.invert?[]:M.descendants(t)}toString(){return"XPathWildcardAnywhereElement["+(this.invert?"!":"")+this.nodeName+"]"}},Ne=class extends ve{static{a(this,"XPathWildcardElement")}constructor(){super(we.WILDCARD)}evaluate(t){const e=[];if(this.invert)return e;for(const s of M.getChildren(t))e.push(s);return e}toString(){return"XPathWildcardElement["+(this.invert?"!":"")+this.nodeName+"]"}},we=class t{static{a(this,"XPath")}static WILDCARD="*";static NOT="!";path;elements;parser;constructor(t,e){this.parser=t,this.path=e,this.elements=this.split(e)}static findAll(e,s,i){return new t(i,s).evaluate(e)}split(t){const e=new ye(fe.fromString(t));e.recover=t=>{throw t},e.removeErrorListeners(),e.addErrorListener(new ke);const s=new Ae(e);try{s.fill()}catch(s){if(s instanceof Zt){const i="Invalid tokens or characters at index "+e.column+" in path '"+t+"' -- "+s.message;throw new RangeError(i)}throw s}const i=s.getTokens(),r=[],o=i.length;let a=0;t:for(;a<o;){const t=i[a];let e;switch(t.type){case ye.ROOT:case ye.ANYWHERE:const s=t.type===ye.ANYWHERE;a++,e=i[a];const o=e.type===ye.BANG;o&&(a++,e=i[a]);const h=this.getXPathElement(e,s);h.invert=o,r.push(h),a++;break;case ye.TOKEN_REF:case ye.RULE_REF:case ye.WILDCARD:r.push(this.getXPathElement(t,!1)),++a;break;case n.EOF:break t;default:throw new Error("Unknown path element "+t)}}return r}evaluate(t){const e=new U(null);e.addChild(t);let s=new Set([e]),i=0;for(;i<this.elements.length;){const t=new Set;for(const e of s)if(e.getChildCount()>0){this.elements[i].evaluate(e).forEach((e=>{t.add(e)}),t)}i++,s=t}return s}getXPathElement(t,e){if(t.type===n.EOF)throw new Error("Missing path element at end of path");const s=t.text;if(null==s)throw new Error("Expected wordToken to have text content.");const i=this.parser.getTokenType(s),r=this.parser.getRuleIndex(s);switch(t.type){case ye.WILDCARD:return e?new Le:new Ne;case ye.TOKEN_REF:case ye.STRING:if(i===n.INVALID_TYPE)throw new Error(s+" at index "+t.start+" isn't a valid token name");return e?new _e(s,i):new Ie(s,i);default:if(-1===r)throw new Error(s+" at index "+t.start+" isn't a valid rule name");return e?new Ce(s,r):new Re(s,r)}}},be=class{static{a(this,"Chunk")}},Oe=class{static{a(this,"ParseTreeMatch")}tree;pattern;labels;mismatchedNode;constructor(t,e,s,i){this.tree=t,this.pattern=e,this.labels=s,this.mismatchedNode=i}get(t){const e=this.labels.get(t);return e&&0!==e.length?e[e.length-1]:null}getAll(t){return this.labels.get(t)??[]}getLabels(){return this.labels}getMismatchedNode(){return this.mismatchedNode}succeeded(){return!this.mismatchedNode}getPattern(){return this.pattern}getTree(){return this.tree}toString(){return`Match ${this.succeeded()?"succeeded":"failed"}; found ${this.getLabels().size} labels`}},Pe=class{static{a(this,"ParseTreePattern")}patternRuleIndex;pattern;patternTree;matcher;constructor(t,e,s,i){this.matcher=t,this.patternRuleIndex=s,this.pattern=e,this.patternTree=i}match(t){return this.matcher.match(t,this)}matches(t){return this.matcher.match(t,this).succeeded()}findAll(t,e){const s=we.findAll(t,e,this.matcher.getParser()),i=new Array;for(const t of s){const e=this.match(t);e.succeeded()&&i.push(e)}return i}getMatcher(){return this.matcher}getPattern(){return this.pattern}getPatternRuleIndex(){return this.patternRuleIndex}getPatternTree(){return this.patternTree}},De=class extends Xt{static{a(this,"InputMismatchException")}constructor(t){super({message:"",recognizer:t,input:t.inputStream,ctx:t.context}),this.offendingToken=t.getCurrentToken()}},Fe=class extends Xt{static{a(this,"FailedPredicateException")}ruleIndex=0;predicateIndex=0;predicate;constructor(t,e,s=null){super({message:Be(e??"no predicate",s??null),recognizer:t,input:t.inputStream,ctx:t.context});const i=t.atn.states[t.state].transitions[0];i instanceof St?(this.ruleIndex=i.ruleIndex,this.predicateIndex=i.predIndex):(this.ruleIndex=0,this.predicateIndex=0),this.predicate=e,this.offendingToken=t.getCurrentToken()}},Be=a(((t,e)=>null!==e?e:"failed predicate: {"+t+"}?"),"formatMessage"),Me=class{static{a(this,"DefaultErrorStrategy")}errorRecoveryMode=!1;lastErrorIndex=-1;lastErrorStates=new f;nextTokensContext=null;nextTokenState=0;reset(t){this.endErrorCondition(t)}beginErrorCondition(t){this.errorRecoveryMode=!0}inErrorRecoveryMode(t){return this.errorRecoveryMode}endErrorCondition(t){this.errorRecoveryMode=!1,this.lastErrorStates=new f,this.lastErrorIndex=-1}reportMatch(t){this.endErrorCondition(t)}reportError(t,e){this.inErrorRecoveryMode(t)||(this.beginErrorCondition(t),e instanceof he?this.reportNoViableAlternative(t,e):e instanceof De?this.reportInputMismatch(t,e):e instanceof Fe?this.reportFailedPredicate(t,e):t.notifyErrorListeners(e.message,e.offendingToken,e))}recover(t,e){this.lastErrorIndex===t.inputStream?.index&&this.lastErrorStates.contains(t.state)&&t.consume(),this.lastErrorIndex=t.inputStream?.index??0,this.lastErrorStates.addOne(t.state);const s=this.getErrorRecoverySet(t);this.consumeUntil(t,s)}sync(t){if(this.inErrorRecoveryMode(t))return;const e=t.atn.states[t.state],s=t.tokenStream.LA(1),i=t.atn.nextTokens(e);if(i.contains(s))return this.nextTokensContext=null,void(this.nextTokenState=R.INVALID_STATE_NUMBER);if(i.contains(n.EPSILON))null===this.nextTokensContext&&(this.nextTokensContext=t.context,this.nextTokenState=t.state);else switch(e.constructor.stateType){case R.BLOCK_START:case R.STAR_BLOCK_START:case R.PLUS_BLOCK_START:case R.STAR_LOOP_ENTRY:if(null!==this.singleTokenDeletion(t))return;throw new De(t);case R.PLUS_LOOP_BACK:case R.STAR_LOOP_BACK:{this.reportUnwantedToken(t);const e=new f;e.addSet(t.getExpectedTokens());const s=e.addSet(this.getErrorRecoverySet(t));this.consumeUntil(t,s);break}}}reportNoViableAlternative(t,e){if(e.message.length>0)return void t.notifyErrorListeners(e.message,e.offendingToken,e);const s=t.tokenStream;let i;i=null!==s&&e.startToken?e.startToken.type===n.EOF?"<EOF>":s.getTextFromRange(e.startToken,e.offendingToken):"<unknown input>";const r="no viable alternative at input "+this.escapeWSAndQuote(i);t.notifyErrorListeners(r,e.offendingToken,e)}reportInputMismatch(t,e){if(e.message.length>0)return void t.notifyErrorListeners(e.message,e.offendingToken,e);const s="mismatched input "+this.getTokenErrorDisplay(e.offendingToken)+" expecting "+e.getExpectedTokens().toStringWithVocabulary(t.vocabulary);t.notifyErrorListeners(s,e.offendingToken,e)}reportFailedPredicate(t,e){const s="rule "+t.ruleNames[t.context.ruleIndex]+" "+e.message;t.notifyErrorListeners(s,e.offendingToken,e)}reportUnwantedToken(t){if(this.inErrorRecoveryMode(t))return;this.beginErrorCondition(t);const e=t.getCurrentToken(),s="extraneous input "+this.getTokenErrorDisplay(e)+" expecting "+this.getExpectedTokens(t).toStringWithVocabulary(t.vocabulary);t.notifyErrorListeners(s,e,null)}reportMissingToken(t){if(this.inErrorRecoveryMode(t))return;this.beginErrorCondition(t);const e=t.getCurrentToken(),s="missing "+this.getExpectedTokens(t).toStringWithVocabulary(t.vocabulary)+" at "+this.getTokenErrorDisplay(e);t.notifyErrorListeners(s,e,null)}recoverInline(t){const e=this.singleTokenDeletion(t);if(e)return t.consume(),e;if(this.singleTokenInsertion(t))return this.getMissingSymbol(t);throw new De(t)}singleTokenInsertion(t){const e=t.tokenStream?.LA(1)??-1,s=t.atn,i=s.states[t.state].transitions[0].target;return!!s.nextTokens(i,t.context??void 0).contains(e)&&(this.reportMissingToken(t),!0)}singleTokenDeletion(t){const e=t.tokenStream?.LA(2)??-1;if(this.getExpectedTokens(t).contains(e)){this.reportUnwantedToken(t),t.consume();const e=t.getCurrentToken();return this.reportMatch(t),e}return null}getMissingSymbol(t){const e=t.getCurrentToken(),s=this.getExpectedTokens(t);let i,r=n.INVALID_TYPE;0!==s.length&&(r=s.minElement),i=r===n.EOF?"<missing EOF>":"<missing "+t.vocabulary.getDisplayName(r)+">";let o=e;const a=t.tokenStream?.LT(-1);return o.type===n.EOF&&null!==a&&(o=a),t.getTokenFactory().create(o.source,r,i,n.DEFAULT_CHANNEL,-1,-1,o.line,o.column)}getExpectedTokens(t){return t.getExpectedTokens()}getTokenErrorDisplay(t){if(null===t)return"<no token>";let e=t.text;return e||(e=t.type===n.EOF?"<EOF>":"<"+t.type+">"),this.escapeWSAndQuote(e)}escapeWSAndQuote(t){return"'"+(t=(t=(t=t.replace(/\n/g,"\\n")).replace(/\r/g,"\\r")).replace(/\t/g,"\\t"))+"'"}getErrorRecoverySet(t){const e=t.atn;let s=t.context;const i=new f;for(;null!==s&&s.invokingState>=0;){const t=e.states[s.invokingState].transitions[0],n=e.nextTokens(t.followState);i.addSet(n),s=s.parent}return i.removeOne(n.EPSILON),i}consumeUntil(t,e){let s=t.tokenStream?.LA(1)??-1;for(;s!==n.EOF&&!e.contains(s);)t.consume(),s=t.tokenStream?.LA(1)??-1}},Ue=class extends Me{static{a(this,"BailErrorStrategy")}recover(t,e){throw new xe(e)}recoverInline(t){const e=new De(t);throw new xe(e)}sync(t){}},He=class{static{a(this,"ListTokenSource")}sourceName;tokenFactory=jt.DEFAULT;tokens=[];i=0;eofToken=null;constructor(t,e){this.tokens=t,this.sourceName=e??""}get column(){if(this.i<this.tokens.length)return this.tokens[this.i].column;if(null!==this.eofToken)return this.eofToken.column;if(this.tokens.length>0){const t=this.tokens[this.tokens.length-1],e=t.text;if(e){const t=e.lastIndexOf("\n");if(t>=0)return e.length-t-1}return t.column+t.stop-t.start+1}return 0}nextToken(){if(this.i>=this.tokens.length){if(null===this.eofToken){let t=-1;if(this.tokens.length>0){const e=this.tokens[this.tokens.length-1].stop;-1!==e&&(t=e+1)}const e=Math.max(-1,t-1);this.eofToken=this.tokenFactory.create([this,this.inputStream],n.EOF,"EOF",n.DEFAULT_CHANNEL,t,e,this.line,this.column)}return this.eofToken}const t=this.tokens[this.i];return this.i===this.tokens.length-1&&t.type===n.EOF&&(this.eofToken=t),this.i++,t}get line(){if(this.i<this.tokens.length)return this.tokens[this.i].line;if(null!==this.eofToken)return this.eofToken.line;if(this.tokens.length>0){const t=this.tokens[this.tokens.length-1];let e=t.line;const s=t.text;if(s)for(const t of s)"\n"===t&&e++;return e}return 1}get inputStream(){return this.i<this.tokens.length?this.tokens[this.i].inputStream:null!==this.eofToken?this.eofToken.inputStream:this.tokens.length>0?this.tokens[this.tokens.length-1].inputStream:null}getSourceName(){if(null!==this.sourceName)return this.sourceName;const t=this.inputStream;return null!==t?t.getSourceName():"List"}},Ve=class extends U{static{a(this,"InterpreterRuleContext")}#h;constructor(t,e,s){super(e,s),this.#h=t}get ruleIndex(){return this.#h}},ze=class{static{a(this,"TraceListener")}parser;constructor(t){this.parser=t}enterEveryRule(t){console.log("enter   "+this.parser.ruleNames[t.ruleIndex]+", LT(1)="+this.parser.inputStream?.LT(1)?.text)}visitTerminal(t){console.log("consume "+t.getSymbol()+" rule "+this.parser.ruleNames[this.parser.context.ruleIndex])}exitEveryRule(t){console.log("exit    "+this.parser.ruleNames[t.ruleIndex]+", LT(1)="+this.parser.inputStream?.LT(1)?.text)}visitErrorNode(t){}},We=class extends Gt{static{a(this,"Parser")}printer=null;buildParseTrees=!0;errorHandler=new Me;context=null;precedenceStack=[];parseListeners=null;syntaxErrors=0;matchedEOF=!1;tracer=null;bypassAltsAtnCache=null;#c;constructor(t){super(),this.precedenceStack.push(0),this.syntaxErrors=0,this.#c=t}reset(t=!0){t&&this.inputStream.seek(0),this.errorHandler.reset(this),this.context=null,this.syntaxErrors=0,this.matchedEOF=!1,this.setTrace(!1),this.precedenceStack=[],this.precedenceStack.push(0),this.interpreter&&this.interpreter.reset()}match(t){let e=this.getCurrentToken();return e.type===t?(t===n.EOF&&(this.matchedEOF=!0),this.errorHandler.reportMatch(this),this.consume()):(e=this.errorHandler.recoverInline(this),this.buildParseTrees&&-1===e.tokenIndex&&this.context.addErrorNode(this.createErrorNode(this.context,e))),e}matchWildcard(){let t=this.getCurrentToken();return t.type>0?(this.errorHandler.reportMatch(this),this.consume()):(t=this.errorHandler.recoverInline(this),this.buildParseTrees&&-1===t.tokenIndex&&this.context.addErrorNode(this.createErrorNode(this.context,t))),t}getParseListeners(){return this.parseListeners??[]}addParseListener(t){if(null===t)throw new Error("listener");null===this.parseListeners&&(this.parseListeners=[]),this.parseListeners.push(t)}removeParseListener(t){if(null!==this.parseListeners&&null!==t){const e=this.parseListeners.indexOf(t);e>=0&&this.parseListeners.splice(e,1),0===this.parseListeners.length&&(this.parseListeners=null)}}removeParseListeners(){this.parseListeners=null}triggerEnterRuleEvent(){if(null!==this.parseListeners){const t=this.context;this.parseListeners.forEach((e=>{e.enterEveryRule(t),t.enterRule(e)}))}}triggerExitRuleEvent(){if(null!==this.parseListeners){const t=this.context;this.parseListeners.slice(0).reverse().forEach((e=>{t.exitRule(e),e.exitEveryRule(t)}))}}getTokenFactory(){return this.inputStream.tokenSource.tokenFactory}setTokenFactory(t){this.inputStream.tokenSource.tokenFactory=t}compileParseTreePattern(t,e,s){if(!s&&null!==this.tokenStream){const t=this.tokenStream.tokenSource;t instanceof Jt&&(s=t)}if(!s)throw new Error("Parser can't discover a lexer to use");return new Je(s,this).compile(t,e)}getATNWithBypassAlts(){const t=this.serializedATN;if(null===t)throw new Error("The current parser does not support an ATN with bypass alternatives.");if(null!==this.bypassAltsAtnCache)return this.bypassAltsAtnCache;return this.bypassAltsAtnCache=new Mt({readOnly:!1,verifyATN:!0,generateRuleBypassTransitions:!0}).deserialize(t),this.bypassAltsAtnCache}get numberOfSyntaxErrors(){return this.syntaxErrors}get inputStream(){return this.#c}set inputStream(t){this.tokenStream=t}get tokenStream(){return this.#c}set tokenStream(t){this.reset(!1),this.#c=t}getCurrentToken(){return this.inputStream.LT(1)}notifyErrorListeners(t,e,s){s=s??null,null===(e=e??null)&&(e=this.getCurrentToken()),this.syntaxErrors+=1;const i=e.line,n=e.column;this.errorListenerDispatch.syntaxError(this,e,i,n,t,s)}consume(){const t=this.getCurrentToken();t.type!==n.EOF&&this.tokenStream.consume();const e=null!==this.parseListeners&&this.parseListeners.length>0;if(this.buildParseTrees||e){let s;s=this.errorHandler.inErrorRecoveryMode(this)?this.context.addErrorNode(this.createErrorNode(this.context,t)):this.context.addTokenNode(t),e&&this.parseListeners.forEach((t=>{s instanceof F?t.visitErrorNode(s):t.visitTerminal(s)}))}return t}addContextToParseTree(){this.context?.parent&&this.context.parent.addChild(this.context)}enterRule(t,e,s){this.state=e,this.context=t,this.context.start=this.inputStream.LT(1),this.buildParseTrees&&this.addContextToParseTree(),this.triggerEnterRuleEvent()}exitRule(){this.matchedEOF?this.context.stop=this.inputStream.LT(1):this.context.stop=this.inputStream.LT(-1),this.triggerExitRuleEvent(),this.state=this.context.invokingState,this.context=this.context.parent}enterOuterAlt(t,e){t.setAltNumber(e),this.buildParseTrees&&this.context!==t&&this.context?.parent&&(this.context.parent.removeLastChild(),this.context.parent.addChild(t)),this.context=t}getPrecedence(){return 0===this.precedenceStack.length?-1:this.precedenceStack[this.precedenceStack.length-1]}enterRecursionRule(t,e,s,i){this.state=e,this.precedenceStack.push(i),this.context=t,this.context.start=this.inputStream.LT(1),this.triggerEnterRuleEvent()}pushNewRecursionContext(t,e,s){const i=this.context;i.parent=t,i.invokingState=e,i.stop=this.inputStream.LT(-1),this.context=t,this.context.start=i.start,this.buildParseTrees&&this.context.addChild(i),this.triggerEnterRuleEvent()}unrollRecursionContexts(t){this.precedenceStack.pop(),this.context.stop=this.inputStream.LT(-1);const e=this.context,s=this.getParseListeners();if(null!==s&&s.length>0)for(;this.context!==t;)this.triggerExitRuleEvent(),this.context=this.context.parent;else this.context=t;e.parent=t,this.buildParseTrees&&null!==t&&t.addChild(e)}getInvokingContext(t){let e=this.context;for(;null!==e;){if(e.ruleIndex===t)return e;e=e.parent}return null}precpred(t,e){return e>=this.precedenceStack[this.precedenceStack.length-1]}isExpectedToken(t){const e=this.interpreter.atn;let s=this.context;const i=e.states[this.state];let r=e.nextTokens(i);if(r.contains(t))return!0;if(!r.contains(n.EPSILON))return!1;for(;null!==s&&s.invokingState>=0&&r.contains(n.EPSILON);){const i=e.states[s.invokingState].transitions[0];if(r=e.nextTokens(i.followState),r.contains(t))return!0;s=s.parent}return!(!r.contains(n.EPSILON)||t!==n.EOF)}getExpectedTokens(){return this.interpreter.atn.getExpectedTokens(this.state,this.context)}getExpectedTokensWithinCurrentRule(){const t=this.interpreter.atn,e=t.states[this.state];return t.nextTokens(e)}getRuleIndex(t){return this.getRuleIndexMap().get(t)??-1}getRuleInvocationStack(t){null===(t=t??null)&&(t=this.context);const e=[];for(;null!==t;){const s=t.ruleIndex;s<0?e.push("n/a"):e.push(this.ruleNames[s]),t=t.parent}return e}getDFAStrings(){return this.interpreter.decisionToDFA.toString()}dumpDFA(){let t=!1;for(const e of this.interpreter.decisionToDFA)e.length>0&&(t&&console.log(),this.printer&&(this.printer.println("Decision "+e.decision+":"),this.printer.print(e.toString(this.vocabulary))),t=!0)}getSourceName(){return this.inputStream.getSourceName()}getParseInfo(){const t=this.interpreter;if(t instanceof ge)return new ae(t)}setProfile(t){const e=this.interpreter,s=e.predictionMode;if(t)e instanceof ge||(this.interpreter=new ge(this));else if(e instanceof ge){const t=e.sharedContextCache;if(t){const s=new de(this,this.atn,e.decisionToDFA,t);this.interpreter=s}}this.interpreter.predictionMode=s}setTrace(t){t?(null!==this.tracer&&this.removeParseListener(this.tracer),this.tracer=new ze(this),this.addParseListener(this.tracer)):(this.removeParseListener(this.tracer),this.tracer=null)}createTerminalNode(t,e){return new D(e)}createErrorNode(t,e){return new F(e)}},qe=class extends We{static{a(this,"ParserInterpreter")}rootContext;overrideDecisionRoot=null;parentContextStack=[];overrideDecisionAlt=-1;overrideDecisionReached=!1;decisionToDFA;sharedContextCache=new pe;pushRecursionContextStates;#l=-1;#u=-1;#d;#p;#g;#x;constructor(t,e,s,i,n){super(n),this.#d=t,this.#p=i,this.#g=s.slice(0),this.#x=e,this.pushRecursionContextStates=new c;for(const t of i.states)t instanceof ct&&t.precedenceRuleDecision&&this.pushRecursionContextStates.set(t.stateNumber);this.decisionToDFA=i.decisionToState.map(((t,e)=>new ee(t,e))),this.interpreter=new de(this,i,this.decisionToDFA,this.sharedContextCache)}reset(){super.reset(),this.overrideDecisionReached=!1,this.overrideDecisionRoot=null}get atn(){return this.#p}get vocabulary(){return this.#x}get ruleNames(){return this.#g}get grammarFileName(){return this.#d}get atnState(){return this.#p.states[this.state]}parse(t){const e=this.#p.ruleToStartState[t];for(this.rootContext=this.createInterpreterRuleContext(null,R.INVALID_STATE_NUMBER,t),e.isLeftRecursiveRule?this.enterRecursionRule(this.rootContext,e.stateNumber,t,0):this.enterRule(this.rootContext,e.stateNumber,t);;){const t=this.atnState;if(t.constructor.stateType===R.RULE_STOP){if(this.context?.isEmpty()){if(e.isLeftRecursiveRule){const t=this.context,e=this.parentContextStack.pop();return this.unrollRecursionContexts(e[0]),t}return this.exitRule(),this.rootContext}this.visitRuleStopState(t)}else try{this.visitState(t)}catch(e){if(!(e instanceof Xt))throw e;this.state=this.#p.ruleToStopState[t.ruleIndex].stateNumber,this.errorHandler.reportError(this,e),this.recover(e)}}}addDecisionOverride(t,e,s){this.#l=t,this.#u=e,this.overrideDecisionAlt=s}get overrideDecision(){return this.#l}get overrideDecisionInputIndex(){return this.#u}enterRecursionRule(t,e,s,i){this.parentContextStack.push([this.context,t.invokingState]),super.enterRecursionRule(t,e,s,i)}get serializedATN(){throw new Error("The ParserInterpreter does not support the serializedATN property.")}visitState(t){let e=1;t instanceof tt&&(e=this.visitDecisionState(t));const s=t.transitions[e-1];switch(s.transitionType){case N.EPSILON:if(this.pushRecursionContextStates.get(t.stateNumber)&&s.target.constructor.stateType!==R.LOOP_END){const e=this.parentContextStack[this.parentContextStack.length-1],s=this.createInterpreterRuleContext(e[0],e[1],this.context.ruleIndex);this.pushNewRecursionContext(s,this.#p.ruleToStartState[t.ruleIndex].stateNumber,this.context.ruleIndex)}break;case N.ATOM:this.match(s.label.minElement);break;case N.RANGE:case N.SET:case N.NOT_SET:s.matches(this.inputStream.LA(1),n.MIN_USER_TOKEN_TYPE,65535)||this.recoverInline(),this.matchWildcard();break;case N.WILDCARD:this.matchWildcard();break;case N.RULE:const e=s.target,i=e.ruleIndex,r=this.createInterpreterRuleContext(this.context,t.stateNumber,i);e.isLeftRecursiveRule?this.enterRecursionRule(r,e.stateNumber,i,s.precedence):this.enterRule(r,s.target.stateNumber,i);break;case N.PREDICATE:const o=s;if(!this.sempred(this.context,o.ruleIndex,o.predIndex))throw new Fe(this);break;case N.ACTION:const a=s;this.action(this.context,a.ruleIndex,a.actionIndex);break;case N.PRECEDENCE:if(!this.precpred(this.context,s.precedence)){const t=s.precedence;throw new Fe(this,`precpred(_ctx, ${t})`)}break;default:throw new Error("UnsupportedOperationException: Unrecognized ATN transition type.")}this.state=s.target.stateNumber}visitDecisionState(t){let e=1;if(t.transitions.length>1){this.errorHandler.sync(this);const s=t.decision;s!==this.#l||this.inputStream.index!==this.#u||this.overrideDecisionReached?e=this.interpreter.adaptivePredict(this.inputStream,s,this.context):(e=this.overrideDecisionAlt,this.overrideDecisionReached=!0)}return e}createInterpreterRuleContext(t,e,s){return new Ve(s,t,e)}visitRuleStopState(t){if(this.#p.ruleToStartState[t.ruleIndex].isLeftRecursiveRule){const[t,e]=this.parentContextStack.pop();this.unrollRecursionContexts(t),this.state=e}else this.exitRule();const e=this.#p.states[this.state].transitions[0];this.state=e.followState.stateNumber}recover(t){const e=this.inputStream.index;if(this.errorHandler.recover(this,t),this.inputStream.index===e){const e=t.offendingToken;if(!e)throw new Error("Expected exception to have an offending token");const s=e.tokenSource,i=[s,s?.inputStream??null];if(t instanceof De){const s=t.getExpectedTokens();if(!s)throw new Error("Expected the exception to provide expected tokens");let r=n.INVALID_TYPE;0!==s.length&&(r=s.minElement);const o=this.getTokenFactory().create(i,r,e.text,n.DEFAULT_CHANNEL,-1,-1,e.line,e.column);this.context.addErrorNode(this.createErrorNode(this.context,o))}else{const t=this.getTokenFactory().create(i,n.INVALID_TYPE,e.text,n.DEFAULT_CHANNEL,-1,-1,e.line,e.column);this.context.addErrorNode(this.createErrorNode(this.context,t))}}}recoverInline(){return this.errorHandler.recoverInline(this)}},$e=class extends Map{static{a(this,"MultiMap")}map(t,e){let s=this.get(t);s||(s=new Array,this.set(t,s)),s.push(e)}getPairs(){const t=new Array;for(const e of this.keys()){const s=this.get(e)??[];for(const i of s)t.push([e,i])}return t}toString(){const t=[];return this.forEach(((e,s)=>{t.push(`${s}=[${e.join(", ")}]`)})),`{${t.join(", ")}}`}},Ye=class extends Error{static{a(this,"CannotInvokeStartRuleError")}constructor(t){super(),this.cause=t}},Ke=class{static{a(this,"RuleTagToken")}label;ruleName;bypassTokenType;constructor(t,e,s){this.ruleName=t,this.bypassTokenType=e,this.label=s}get channel(){return n.DEFAULT_CHANNEL}get text(){return void 0!==this.label?"<"+this.label+":"+this.ruleName+">":"<"+this.ruleName+">"}get type(){return this.bypassTokenType}get line(){return 0}get column(){return-1}get tokenIndex(){return-1}get start(){return-1}get stop(){return-1}get tokenSource(){return null}get inputStream(){return null}toString(){return this.ruleName+":"+this.bypassTokenType}},Ge=class extends Error{static{a(this,"StartRuleDoesNotConsumeFullPatternError")}},je=class extends be{static{a(this,"TagChunk")}tag;label;constructor(...t){let e,s;if(1===t.length?s=t[0]:(e=t[0],s=t[1]),super(),!s)throw new Error("tag cannot be null or empty");this.label=e,this.tag=s}toString(){return void 0!==this.label?this.label+":"+this.tag:this.tag}},Xe=class extends be{static{a(this,"TextChunk")}text;constructor(t){super(),this.text=t}toString(){return"'"+this.text+"'"}},Ze=class extends B{static{a(this,"TokenTagToken")}tokenName;label;constructor(t,e,s){super({type:e,source:B.EMPTY_SOURCE}),this.tokenName=t,this.label=s}get text(){return void 0!==this.label?"<"+this.label+":"+this.tokenName+">":"<"+this.tokenName+">"}toString(){return this.tokenName+":"+this.type}},Je=class{static{a(this,"ParseTreePatternMatcher")}start="<";stop=">";escape="\\";lexer;parser;constructor(t,e){this.lexer=t,this.parser=e}setDelimiters(t,e,s){if(null===t||0===t.length)throw new Error("start cannot be null or empty");if(null===e||0===e.length)throw new Error("stop cannot be null or empty");this.start=t,this.stop=e,this.escape=s}matches(...t){switch(t.length){case 2:{const[e,s]=t,i=new $e;return null===this.matchImpl(e,s.getPatternTree(),i)}case 3:{const[e,s,i]=t,n=this.compile(s,i);return this.matches(e,n)}default:throw new Error("Invalid number of arguments")}}match(...t){switch(t.length){case 2:{const[e,s]=t,i=new $e,n=this.matchImpl(e,s.getPatternTree(),i);return new Oe(e,s,i,n)}case 3:{const[e,s,i]=t,n=this.compile(s,i);return this.match(e,n)}default:throw new Error("Invalid number of arguments")}}compile(t,e){const s=this.tokenize(t),i=new He(s),r=new Ae(i),o=new qe(this.parser.grammarFileName,this.parser.vocabulary,this.parser.ruleNames,this.parser.getATNWithBypassAlts(),r);o.removeErrorListeners();let a=null;try{o.errorHandler=new Ue,a=o.parse(e)}catch(t){throw t instanceof xe?t.cause:t instanceof Xt?t:t instanceof Error?new Ye(t):t}if(r.LA(1)!==n.EOF)throw new Ge;return new Pe(this,t,e,a)}getLexer(){return this.lexer}getParser(){return this.parser}tokenize(t){const e=this.split(t),s=new Array;for(const i of e)if(i instanceof je){const e=i,r=e.tag[0];if(r===r.toUpperCase()){const i=this.parser.getTokenType(e.tag);if(i===n.INVALID_TYPE)throw new Error("Unknown token "+e.tag+" in pattern: "+t);const r=new Ze(e.tag,i,e.label);s.push(r)}else{if(r!==r.toLowerCase())throw new Error("invalid tag: "+e.tag+" in pattern: "+t);{const i=this.parser.getRuleIndex(e.tag);if(-1===i)throw new Error("Unknown rule "+e.tag+" in pattern: "+t);const n=this.parser.getATNWithBypassAlts().ruleToTokenType[i];s.push(new Ke(e.tag,n,e.label))}}}else{const t=i,e=fe.fromString(t.text);this.lexer.inputStream=e;let r=this.lexer.nextToken();for(;r.type!==n.EOF;)s.push(r),r=this.lexer.nextToken()}return s}split(t){let e=0;const s=t.length,i=new Array,n=new Array,r=new Array;for(;e<s;)e===t.indexOf(this.escape+this.start,e)?e+=this.escape.length+this.start.length:e===t.indexOf(this.escape+this.stop,e)?e+=this.escape.length+this.stop.length:e===t.indexOf(this.start,e)?(n.push(e),e+=this.start.length):e===t.indexOf(this.stop,e)?(r.push(e),e+=this.stop.length):e++;if(n.length>r.length)throw new Error("unterminated tag in pattern: "+t);if(n.length<r.length)throw new Error("missing start tag in pattern: "+t);const o=n.length;for(let e=0;e<o;e++)if(n[e]>=r[e])throw new Error("tag delimiters out of order in pattern: "+t);if(0===o){const e=t.substring(0,s);i.push(new Xe(e))}if(o>0&&n[0]>0){const e=t.substring(0,n[0]);i.push(new Xe(e))}for(let e=0;e<o;e++){const s=t.substring(n[e]+this.start.length,r[e]);let a,h=s;const c=s.indexOf(":");if(c>=0&&(a=s.substring(0,c),h=s.substring(c+1,s.length)),i.push(new je(a,h)),e+1<o){const s=t.substring(r[e]+this.stop.length,n[e+1]);i.push(new Xe(s))}}if(o>0){const e=r[o-1]+this.stop.length;if(e<s){const n=t.substring(e,s);i.push(new Xe(n))}}for(let t=0;t<i.length;t++){const e=i[t];if(e instanceof Xe){const s=e,n=s.text.replaceAll(this.escape,"");n.length<s.text.length&&(i[t]=new Xe(n))}}return i}matchImpl(t,e,s){if(t instanceof D&&e instanceof D){const i=t,n=e;let r;if(i.getSymbol().type===n.getSymbol().type)if(n.getSymbol()instanceof Ze){const e=n.getSymbol();s.map(e.tokenName,t),void 0!==e.label&&s.map(e.label,t)}else i.getText()===n.getText()||r||(r=i);else r||(r=i);return r}if(t instanceof U&&e instanceof U){let i;const n=this.getRuleTagToken(e);if(n)return t.ruleIndex===e.ruleIndex?(s.map(n.ruleName,t),n.label&&s.map(n.label,t)):i||(i=t),i;if(t.getChildCount()!==e.getChildCount())return i||(i=t),i;const r=t.getChildCount();for(let i=0;i<r;i++){const n=this.matchImpl(t.getChild(i),e.getChild(i),s);if(n)return n}return i}return t}getRuleTagToken(t){if(t instanceof U&&1===t.getChildCount()&&t.getChild(0)instanceof D){const e=t.getChild(0);if(e.getSymbol()instanceof Ke)return e.getSymbol()}}};(class extends $t{static{a(this,"DiagnosticErrorListener")}exactOnly;constructor(t){super(),this.exactOnly=t??!0}reportAmbiguity=a(((t,e,s,i,n,r,o)=>{if(this.exactOnly&&!n)return;const a=this.getDecisionDescription(t,e),h=this.getConflictingAlts(r,o),c=t.tokenStream?.getTextFromInterval(g.of(s,i)),l=`reportAmbiguity d=${a}: ambigAlts=${h}, input='${c}'`;t.notifyErrorListeners(l,null,null)}),"reportAmbiguity");reportAttemptingFullContext=a(((t,e,s,i,n,r)=>{const o=this.getDecisionDescription(t,e),a=t.tokenStream?.getTextFromInterval(g.of(s,i)),h=`reportAttemptingFullContext d=${o}, input='${a}'`;t.notifyErrorListeners(h,null,null)}),"reportAttemptingFullContext");reportContextSensitivity=a(((t,e,s,i,n,r)=>{const o=this.getDecisionDescription(t,e),a=t.tokenStream?.getTextFromInterval(g.of(s,i)),h=`reportContextSensitivity d=${o}, input='${a}'`;t.notifyErrorListeners(h,null,null)}),"reportContextSensitivity");getDecisionDescription=a(((t,e)=>{const s=e.decision,i=e.atnStartState.ruleIndex,n=t.ruleNames;if(i<0||i>=n.length)return s.toString();const r=n[i];return 0===r.length?s.toString():`${s} (${r})`}),"getDecisionDescription");getConflictingAlts=a(((t,e)=>{if(t)return t;const s=new c;for(let t=0;t<e.configs.length;t++)s.set(e.configs[t].alt);return s}),"getConflictingAlts")}),class extends Jt{static{a(this,"LexerInterpreter")}decisionToDFA;sharedContextCache=new pe;#d;#p;#g;#f;#m;#x;constructor(t,e,s,i,n,r,o){if(super(o),r.grammarType!==X.LEXER)throw new Error("IllegalArgumentException: The ATN must be a lexer ATN.");this.#d=t,this.#p=r,this.#g=s.slice(0),this.#f=i.slice(0),this.#m=n.slice(0),this.#x=e,this.decisionToDFA=r.decisionToState.map(((t,e)=>new ee(t,e))),this.interpreter=new oe(this,r,this.decisionToDFA,this.sharedContextCache)}get atn(){return this.#p}get grammarFileName(){return this.#d}get ruleNames(){return this.#g}get channelNames(){return this.#f}get modeNames(){return this.#m}get vocabulary(){return this.#x}get serializedATN(){throw new Error("The LexerInterpreter does not support the serializedATN property.")}},class t{static{a(this,"RuntimeMetaData")}static VERSION="4.13.1";static getRuntimeVersion(){return t.VERSION}static checkVersion(e,s){const i=t.VERSION;let n=!1,r=!1;n=i!==e&&t.getMajorMinorVersion(i)!==t.getMajorMinorVersion(e),r=i!==s&&t.getMajorMinorVersion(i)!==t.getMajorMinorVersion(s),n&&console.error(`ANTLR Tool version ${e} used for code generation does not match the current runtime version ${i}`),r&&console.error(`ANTLR Runtime version ${s} used for parser compilation does not match the current runtime version ${i}`)}static getMajorMinorVersion(t){const e=t.indexOf("."),s=e>=0?t.indexOf(".",e+1):-1,i=t.indexOf("-");let n=t.length;return s>=0&&(n=Math.min(n,s)),i>=0&&(n=Math.min(n,i)),t.substring(0,n)}},class t{static{a(this,"TokenStreamRewriter")}static DEFAULT_PROGRAM_NAME="default";static PROGRAM_INIT_SIZE=100;static MIN_TOKEN_INDEX=0;tokens;programs=new Map;lastRewriteTokenIndexes;constructor(t){this.tokens=t}getTokenStream(){return this.tokens}insertAfter(e,s,i=t.DEFAULT_PROGRAM_NAME){let n;n="number"==typeof e?e:e.tokenIndex;const r=this.getProgram(i),o=new es(this.tokens,n,r.length,s);r.push(o)}insertBefore(e,s,i=t.DEFAULT_PROGRAM_NAME){let n;n="number"==typeof e?e:e.tokenIndex;const r=this.getProgram(i),o=new ts(this.tokens,n,r.length,s);r.push(o)}replaceSingle(e,s,i=t.DEFAULT_PROGRAM_NAME){this.replace(e,e,s,i)}replace(e,s,i,n=t.DEFAULT_PROGRAM_NAME){if("number"!=typeof e&&(e=e.tokenIndex),"number"!=typeof s&&(s=s.tokenIndex),e>s||e<0||s<0||s>=this.tokens.size)throw new RangeError(`replace: range invalid: ${e}..${s}(size=${this.tokens.size})`);const r=this.getProgram(n),o=new ss(this.tokens,e,s,r.length,i);r.push(o)}delete(e,s,i=t.DEFAULT_PROGRAM_NAME){null==s&&(s=e),this.replace(e,s,null,i)}getProgram(t){let e=this.programs.get(t);return null==e&&(e=this.initializeProgram(t)),e}initializeProgram(t){const e=[];return this.programs.set(t,e),e}getText(e,s=t.DEFAULT_PROGRAM_NAME){let i;i=e instanceof g?e:new g(0,this.tokens.size-1),"string"==typeof e&&(s=e);const r=this.programs.get(s);let o=i.start,a=i.stop;if(a>this.tokens.size-1&&(a=this.tokens.size-1),o<0&&(o=0),null==r||0===r.length)return this.tokens.getTextFromInterval(new g(o,a));const h=[],c=this.reduceToSingleOperationPerIndex(r);let l=o;for(;l<=a&&l<this.tokens.size;){const t=c.get(l);c.delete(l);const e=this.tokens.get(l);null==t?(e.type!==n.EOF&&h.push(String(e.text)),l++):l=t.execute(h)}if(a===this.tokens.size-1)for(const t of c.values())t&&t.index>=this.tokens.size-1&&h.push(String(t.text));return h.join("")}reduceToSingleOperationPerIndex(t){for(let e=0;e<t.length;e++){const s=t[e];if(null==s)continue;if(!(s instanceof ss))continue;const i=s,n=this.getKindOfOps(t,ts,e);for(const e of n)e.index===i.index?(t[e.instructionIndex]=null,i.text=String(e.text)+(null!=i.text?i.text.toString():"")):e.index>i.index&&e.index<=i.lastIndex&&(t[e.instructionIndex]=null);const r=this.getKindOfOps(t,ss,e);for(const e of r){if(e.index>=i.index&&e.lastIndex<=i.lastIndex){t[e.instructionIndex]=null;continue}const s=e.lastIndex<i.index||e.index>i.lastIndex;if(null!=e.text||null!=i.text||s){if(!s)throw new Error(`replace op boundaries of ${i} overlap with previous ${e}`)}else t[e.instructionIndex]=null,i.index=Math.min(e.index,i.index),i.lastIndex=Math.max(e.lastIndex,i.lastIndex)}}for(let e=0;e<t.length;e++){const s=t[e];if(null==s)continue;if(!(s instanceof ts))continue;const i=s,n=this.getKindOfOps(t,ts,e);for(const e of n)e.index===i.index&&(e instanceof es?(i.text=this.catOpText(e.text,i.text),t[e.instructionIndex]=null):e instanceof ts&&(i.text=this.catOpText(i.text,e.text),t[e.instructionIndex]=null));const r=this.getKindOfOps(t,ss,e);for(const s of r)if(i.index!==s.index){if(i.index>=s.index&&i.index<=s.lastIndex)throw new Error(`insert op ${i} within boundaries of previous ${s}`)}else s.text=this.catOpText(i.text,s.text),t[e]=null}const e=new Map;for(const s of t)if(null!=s){if(null!=e.get(s.index))throw new Error("should only be one op per index");e.set(s.index,s)}return e}catOpText(t,e){let s="",i="";return null!=t&&(s=t.toString()),null!=e&&(i=e.toString()),s+i}getKindOfOps(t,e,s){return t.slice(0,s).filter((t=>t&&t instanceof e))}};var Qe=class{static{a(this,"RewriteOperation")}instructionIndex;index;text;tokens;constructor(t,e,s,i){this.tokens=t,this.instructionIndex=s,this.index=e,this.text=void 0===i?"":i}execute(t){return this.index}toString(){return"<RewriteOperation@"+this.tokens.get(this.index)+':"'+this.text+'">'}},ts=class extends Qe{static{a(this,"InsertBeforeOp")}constructor(t,e,s,i){super(t,e,s,i)}execute(t){return this.text&&t.push(this.text.toString()),this.tokens.get(this.index).type!==n.EOF&&t.push(String(this.tokens.get(this.index).text)),this.index+1}toString(){return"<InsertBeforeOp@"+this.tokens.get(this.index)+':"'+this.text+'">'}},es=class extends ts{static{a(this,"InsertAfterOp")}constructor(t,e,s,i){super(t,e+1,s,i)}toString(){return"<InsertAfterOp@"+this.tokens.get(this.index)+':"'+this.text+'">'}},ss=class extends Qe{static{a(this,"ReplaceOp")}lastIndex;constructor(t,e,s,i,n){super(t,e,i,n),this.lastIndex=s}execute(t){return this.text&&t.push(this.text.toString()),this.lastIndex+1}toString(){return null==this.text?"<DeleteOp@"+this.tokens.get(this.index)+".."+this.tokens.get(this.lastIndex)+">":"<ReplaceOp@"+this.tokens.get(this.index)+".."+this.tokens.get(this.lastIndex)+':"'+this.text+'">'}};(class{static{a(this,"UnbufferedTokenStream")}tokenSource;tokens;n;p=0;numMarkers=0;lastToken;lastTokenBufferStart;currentTokenIndex=0;constructor(t,e){this.tokenSource=t,e=e??256,this.tokens=new Array(e),this.n=0,this.fill(1)}get(t){const e=this.getBufferStartIndex();if(t<e||t>=e+this.n)throw new Error("get("+t+") outside buffer: "+e+".."+(e+this.n));return this.tokens[t-e]}LT(t){if(-1===t)return this.lastToken;this.sync(t);const e=this.p+t-1;if(e<0)throw new Error("LT("+t+") gives negative index");return e>=this.n?this.tokens[this.n-1]:this.tokens[e]}LA(t){return this.LT(t).type}getText(){return""}getTextFromContext(t){return this.getTextFromInterval(t.getSourceInterval())}getTextFromInterval(t){const e=this.getBufferStartIndex(),s=e+this.tokens.length-1,i=t.start,n=t.stop;if(i<e||n>s)throw new Error("interval "+t+" not in token buffer window: "+e+".."+s);const r=n-e;let o="";for(let t=i-e;t<=r;t++){o+=this.tokens[t].text}return o}getTextFromRange(t,e){return this.getTextFromInterval(g.of(t.tokenIndex,e.tokenIndex))}consume(){if(this.LA(1)===n.EOF)throw new Error("cannot consume EOF");this.lastToken=this.tokens[this.p],this.p===this.n-1&&0===this.numMarkers&&(this.n=0,this.p=-1,this.lastTokenBufferStart=this.lastToken),this.p++,this.currentTokenIndex++,this.sync(1)}mark(){0===this.numMarkers&&(this.lastTokenBufferStart=this.lastToken);const t=-this.numMarkers-1;return this.numMarkers++,t}release(t){if(t!==-this.numMarkers)throw new Error("release() called with an invalid marker.");this.numMarkers--,0===this.numMarkers&&(this.p>0&&(this.tokens.copyWithin(0,this.p,this.n),this.n=this.n-this.p,this.p=0),this.lastTokenBufferStart=this.lastToken)}get index(){return this.currentTokenIndex}seek(t){if(t===this.currentTokenIndex)return;t>this.currentTokenIndex&&(this.sync(t-this.currentTokenIndex),t=Math.min(t,this.getBufferStartIndex()+this.n-1));const e=this.getBufferStartIndex(),s=t-e;if(s<0)throw new Error("cannot seek to negative index "+t);if(s>=this.n)throw new Error("seek to index outside buffer: "+t+" not in "+e+".."+(e+this.n));this.p=s,this.currentTokenIndex=t,0===this.p?this.lastToken=this.lastTokenBufferStart:this.lastToken=this.tokens[this.p-1]}get size(){throw new Error("Unbuffered stream cannot know its size")}getSourceName(){return this.tokenSource.sourceName}setLine(t){this.tokenSource.line=t}setColumn(t){this.tokenSource.column=t}sync(t){const e=this.p+t-1-this.n+1;e>0&&this.fill(e)}fill(t){for(let e=0;e<t;e++){if(this.n>0&&this.tokens[this.n-1].type===n.EOF)return e;const t=this.tokenSource.nextToken();this.add(t)}return t}add(t){this.n>=this.tokens.length&&(this.tokens.length=2*this.tokens.length),Te(t)&&t.setTokenIndex(this.getBufferStartIndex()+this.n),this.tokens[this.n++]=t}getBufferStartIndex(){return this.currentTokenIndex-this.p}});class is extends Jt{static T__0=1;static T__1=2;static T__2=3;static T__3=4;static T__4=5;static T__5=6;static T__6=7;static T__7=8;static T__8=9;static T__9=10;static T__10=11;static T__11=12;static T__12=13;static T__13=14;static T__14=15;static T__15=16;static T__16=17;static T__17=18;static T__18=19;static T__19=20;static T__20=21;static T__21=22;static T__22=23;static T__23=24;static T__24=25;static T__25=26;static T__26=27;static T__27=28;static T__28=29;static T__29=30;static T__30=31;static T__31=32;static T__32=33;static T__33=34;static INT=35;static BOOL=36;static TYPE=37;static IDENTIFIER=38;static WS=39;static channelNames=["DEFAULT_TOKEN_CHANNEL","HIDDEN"];static literalNames=[null,"'mut'","';'","'let'","':'","'='","'('","')'","'-'","'!'","'*'","'&'","'||'","'&&'","'<'","'<='","'>'","'>='","'=='","'!='","'+'","'/'","'%'","'{'","'}'","'if'","'else'","'while'","'break'","'continue'","'|'","'->'","'fn'","','","'return'"];static symbolicNames=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"INT","BOOL","TYPE","IDENTIFIER","WS"];static modeNames=["DEFAULT_MODE"];static ruleNames=["T__0","T__1","T__2","T__3","T__4","T__5","T__6","T__7","T__8","T__9","T__10","T__11","T__12","T__13","T__14","T__15","T__16","T__17","T__18","T__19","T__20","T__21","T__22","T__23","T__24","T__25","T__26","T__27","T__28","T__29","T__30","T__31","T__32","T__33","INT","BOOL","TYPE","IDENTIFIER","WS"];constructor(t){super(t),this.interpreter=new oe(this,is._ATN,is.decisionsToDFA,new pe)}get grammarFileName(){return"SimpleLang.g4"}get literalNames(){return is.literalNames}get symbolicNames(){return is.symbolicNames}get ruleNames(){return is.ruleNames}get serializedATN(){return is._serializedATN}get channelNames(){return is.channelNames}get modeNames(){return is.modeNames}static _serializedATN=[4,0,39,222,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,4,34,185,8,34,11,34,12,34,186,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,3,35,198,8,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,3,36,207,8,36,1,37,1,37,5,37,211,8,37,10,37,12,37,214,9,37,1,38,4,38,217,8,38,11,38,12,38,218,1,38,1,38,0,0,39,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,1,0,4,1,0,48,57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,226,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,1,79,1,0,0,0,3,83,1,0,0,0,5,85,1,0,0,0,7,89,1,0,0,0,9,91,1,0,0,0,11,93,1,0,0,0,13,95,1,0,0,0,15,97,1,0,0,0,17,99,1,0,0,0,19,101,1,0,0,0,21,103,1,0,0,0,23,105,1,0,0,0,25,108,1,0,0,0,27,111,1,0,0,0,29,113,1,0,0,0,31,116,1,0,0,0,33,118,1,0,0,0,35,121,1,0,0,0,37,124,1,0,0,0,39,127,1,0,0,0,41,129,1,0,0,0,43,131,1,0,0,0,45,133,1,0,0,0,47,135,1,0,0,0,49,137,1,0,0,0,51,140,1,0,0,0,53,145,1,0,0,0,55,151,1,0,0,0,57,157,1,0,0,0,59,166,1,0,0,0,61,168,1,0,0,0,63,171,1,0,0,0,65,174,1,0,0,0,67,176,1,0,0,0,69,184,1,0,0,0,71,197,1,0,0,0,73,206,1,0,0,0,75,208,1,0,0,0,77,216,1,0,0,0,79,80,5,109,0,0,80,81,5,117,0,0,81,82,5,116,0,0,82,2,1,0,0,0,83,84,5,59,0,0,84,4,1,0,0,0,85,86,5,108,0,0,86,87,5,101,0,0,87,88,5,116,0,0,88,6,1,0,0,0,89,90,5,58,0,0,90,8,1,0,0,0,91,92,5,61,0,0,92,10,1,0,0,0,93,94,5,40,0,0,94,12,1,0,0,0,95,96,5,41,0,0,96,14,1,0,0,0,97,98,5,45,0,0,98,16,1,0,0,0,99,100,5,33,0,0,100,18,1,0,0,0,101,102,5,42,0,0,102,20,1,0,0,0,103,104,5,38,0,0,104,22,1,0,0,0,105,106,5,124,0,0,106,107,5,124,0,0,107,24,1,0,0,0,108,109,5,38,0,0,109,110,5,38,0,0,110,26,1,0,0,0,111,112,5,60,0,0,112,28,1,0,0,0,113,114,5,60,0,0,114,115,5,61,0,0,115,30,1,0,0,0,116,117,5,62,0,0,117,32,1,0,0,0,118,119,5,62,0,0,119,120,5,61,0,0,120,34,1,0,0,0,121,122,5,61,0,0,122,123,5,61,0,0,123,36,1,0,0,0,124,125,5,33,0,0,125,126,5,61,0,0,126,38,1,0,0,0,127,128,5,43,0,0,128,40,1,0,0,0,129,130,5,47,0,0,130,42,1,0,0,0,131,132,5,37,0,0,132,44,1,0,0,0,133,134,5,123,0,0,134,46,1,0,0,0,135,136,5,125,0,0,136,48,1,0,0,0,137,138,5,105,0,0,138,139,5,102,0,0,139,50,1,0,0,0,140,141,5,101,0,0,141,142,5,108,0,0,142,143,5,115,0,0,143,144,5,101,0,0,144,52,1,0,0,0,145,146,5,119,0,0,146,147,5,104,0,0,147,148,5,105,0,0,148,149,5,108,0,0,149,150,5,101,0,0,150,54,1,0,0,0,151,152,5,98,0,0,152,153,5,114,0,0,153,154,5,101,0,0,154,155,5,97,0,0,155,156,5,107,0,0,156,56,1,0,0,0,157,158,5,99,0,0,158,159,5,111,0,0,159,160,5,110,0,0,160,161,5,116,0,0,161,162,5,105,0,0,162,163,5,110,0,0,163,164,5,117,0,0,164,165,5,101,0,0,165,58,1,0,0,0,166,167,5,124,0,0,167,60,1,0,0,0,168,169,5,45,0,0,169,170,5,62,0,0,170,62,1,0,0,0,171,172,5,102,0,0,172,173,5,110,0,0,173,64,1,0,0,0,174,175,5,44,0,0,175,66,1,0,0,0,176,177,5,114,0,0,177,178,5,101,0,0,178,179,5,116,0,0,179,180,5,117,0,0,180,181,5,114,0,0,181,182,5,110,0,0,182,68,1,0,0,0,183,185,7,0,0,0,184,183,1,0,0,0,185,186,1,0,0,0,186,184,1,0,0,0,186,187,1,0,0,0,187,70,1,0,0,0,188,189,5,116,0,0,189,190,5,114,0,0,190,191,5,117,0,0,191,198,5,101,0,0,192,193,5,102,0,0,193,194,5,97,0,0,194,195,5,108,0,0,195,196,5,115,0,0,196,198,5,101,0,0,197,188,1,0,0,0,197,192,1,0,0,0,198,72,1,0,0,0,199,200,5,98,0,0,200,201,5,111,0,0,201,202,5,111,0,0,202,207,5,108,0,0,203,204,5,102,0,0,204,205,5,54,0,0,205,207,5,52,0,0,206,199,1,0,0,0,206,203,1,0,0,0,207,74,1,0,0,0,208,212,7,1,0,0,209,211,7,2,0,0,210,209,1,0,0,0,211,214,1,0,0,0,212,210,1,0,0,0,212,213,1,0,0,0,213,76,1,0,0,0,214,212,1,0,0,0,215,217,7,3,0,0,216,215,1,0,0,0,217,218,1,0,0,0,218,216,1,0,0,0,218,219,1,0,0,0,219,220,1,0,0,0,220,221,6,38,0,0,221,78,1,0,0,0,6,0,186,197,206,212,218,1,6,0,0];static __ATN;static get _ATN(){return is.__ATN||(is.__ATN=(new Mt).deserialize(is._serializedATN)),is.__ATN}static vocabulary=new x(is.literalNames,is.symbolicNames,[]);get vocabulary(){return is.vocabulary}static decisionsToDFA=is._ATN.decisionToState.map(((t,e)=>new ee(t,e)))}class ns extends We{static T__0=1;static T__1=2;static T__2=3;static T__3=4;static T__4=5;static T__5=6;static T__6=7;static T__7=8;static T__8=9;static T__9=10;static T__10=11;static T__11=12;static T__12=13;static T__13=14;static T__14=15;static T__15=16;static T__16=17;static T__17=18;static T__18=19;static T__19=20;static T__20=21;static T__21=22;static T__22=23;static T__23=24;static T__24=25;static T__25=26;static T__26=27;static T__27=28;static T__28=29;static T__29=30;static T__30=31;static T__31=32;static T__32=33;static T__33=34;static INT=35;static BOOL=36;static TYPE=37;static IDENTIFIER=38;static WS=39;static RULE_prog=0;static RULE_mutable=1;static RULE_statement=2;static RULE_emptyStatement=3;static RULE_item=4;static RULE_letStatement=5;static RULE_expressionStatement=6;static RULE_expression=7;static RULE_expressionWithoutBlock=8;static RULE_primary=9;static RULE_callExpression=10;static RULE_callExpressionTerminal=11;static RULE_unop=12;static RULE_negationExpression=13;static RULE_dereferenceExpression=14;static RULE_borrowExpression=15;static RULE_binopTerminals=16;static RULE_binop=17;static RULE_logicalOr=18;static RULE_logicalAnd=19;static RULE_comparison=20;static RULE_additionSubstraction=21;static RULE_multiplicationDivision=22;static RULE_primitive=23;static RULE_accessIdentifier=24;static RULE_bracket=25;static RULE_assignmentExpressions=26;static RULE_expressionWithBlock=27;static RULE_blockExpression=28;static RULE_blockBody=29;static RULE_ifExpression=30;static RULE_ifExpressionAlternative=31;static RULE_loopExpression=32;static RULE_predicateLoopExpression=33;static RULE_breakExpression=34;static RULE_continueExpression=35;static RULE_closureExpression=36;static RULE_function=37;static RULE_functionParameters=38;static RULE_functionParam=39;static RULE_functionParamPattern=40;static RULE_functionReturnType=41;static RULE_returnExpression=42;static RULE_callParams=43;static literalNames=[null,"'mut'","';'","'let'","':'","'='","'('","')'","'-'","'!'","'*'","'&'","'||'","'&&'","'<'","'<='","'>'","'>='","'=='","'!='","'+'","'/'","'%'","'{'","'}'","'if'","'else'","'while'","'break'","'continue'","'|'","'->'","'fn'","','","'return'"];static symbolicNames=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"INT","BOOL","TYPE","IDENTIFIER","WS"];static ruleNames=["prog","mutable","statement","emptyStatement","item","letStatement","expressionStatement","expression","expressionWithoutBlock","primary","callExpression","callExpressionTerminal","unop","negationExpression","dereferenceExpression","borrowExpression","binopTerminals","binop","logicalOr","logicalAnd","comparison","additionSubstraction","multiplicationDivision","primitive","accessIdentifier","bracket","assignmentExpressions","expressionWithBlock","blockExpression","blockBody","ifExpression","ifExpressionAlternative","loopExpression","predicateLoopExpression","breakExpression","continueExpression","closureExpression","function","functionParameters","functionParam","functionParamPattern","functionReturnType","returnExpression","callParams"];get grammarFileName(){return"SimpleLang.g4"}get literalNames(){return ns.literalNames}get symbolicNames(){return ns.symbolicNames}get ruleNames(){return ns.ruleNames}get serializedATN(){return ns._serializedATN}createFailedPredicateException(t,e){return new Fe(this,t,e)}constructor(t){super(t),this.interpreter=new de(this,ns._ATN,ns.decisionsToDFA,new pe)}prog(){let t,e=new rs(this.context,this.state);this.enterRule(e,0,ns.RULE_prog);try{for(this.enterOuterAlt(e,1),this.state=91,this.errorHandler.sync(this),t=this.tokenStream.LA(1);!(-32&t)&&1<<t&2055216972||!(t-32&-32)&&1<<t-32&93;)this.state=88,this.statement(),this.state=93,this.errorHandler.sync(this),t=this.tokenStream.LA(1);this.state=94,this.match(ns.EOF)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return e}mutable(){let t=new os(this.context,this.state);this.enterRule(t,2,ns.RULE_mutable);try{this.enterOuterAlt(t,1),this.state=96,this.match(ns.T__0)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}statement(){let t=new as(this.context,this.state);this.enterRule(t,4,ns.RULE_statement);try{switch(this.state=102,this.errorHandler.sync(this),this.tokenStream.LA(1)){case ns.T__1:this.enterOuterAlt(t,1),this.state=98,this.emptyStatement();break;case ns.T__31:this.enterOuterAlt(t,2),this.state=99,this.item();break;case ns.T__2:this.enterOuterAlt(t,3),this.state=100,this.letStatement();break;case ns.T__5:case ns.T__7:case ns.T__8:case ns.T__9:case ns.T__10:case ns.T__11:case ns.T__22:case ns.T__24:case ns.T__26:case ns.T__27:case ns.T__28:case ns.T__29:case ns.T__33:case ns.INT:case ns.BOOL:case ns.IDENTIFIER:this.enterOuterAlt(t,4),this.state=101,this.expressionStatement();break;default:throw new he(this)}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}emptyStatement(){let t=new hs(this.context,this.state);this.enterRule(t,6,ns.RULE_emptyStatement);try{this.enterOuterAlt(t,1),this.state=104,this.match(ns.T__1)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}item(){let t=new cs(this.context,this.state);this.enterRule(t,8,ns.RULE_item);try{this.enterOuterAlt(t,1),this.state=106,this.function_()}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}letStatement(){let t,e=new ls(this.context,this.state);this.enterRule(e,10,ns.RULE_letStatement);try{this.enterOuterAlt(e,1),this.state=108,this.match(ns.T__2),this.state=110,this.errorHandler.sync(this),t=this.tokenStream.LA(1),1===t&&(this.state=109,this.mutable()),this.state=112,this.match(ns.IDENTIFIER),this.state=115,this.errorHandler.sync(this),t=this.tokenStream.LA(1),4===t&&(this.state=113,this.match(ns.T__3),this.state=114,this.match(ns.TYPE)),this.state=119,this.errorHandler.sync(this),t=this.tokenStream.LA(1),5===t&&(this.state=117,this.match(ns.T__4),this.state=118,this.expression()),this.state=121,this.match(ns.T__1)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return e}expressionStatement(){let t=new us(this.context,this.state);this.enterRule(t,12,ns.RULE_expressionStatement);try{switch(this.state=130,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,6,this.context)){case 1:if(this.enterOuterAlt(t,1),this.state=123,this.expressionWithBlock(),this.state=125,this.errorHandler.sync(this),1===this.interpreter.adaptivePredict(this.tokenStream,5,this.context))this.state=124,this.match(ns.T__1);break;case 2:this.enterOuterAlt(t,2),this.state=127,this.expressionWithoutBlock(),this.state=128,this.match(ns.T__1)}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}expression(){let t=new ds(this.context,this.state);this.enterRule(t,14,ns.RULE_expression);try{switch(this.state=134,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,7,this.context)){case 1:this.enterOuterAlt(t,1),this.state=132,this.expressionWithBlock();break;case 2:this.enterOuterAlt(t,2),this.state=133,this.expressionWithoutBlock()}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}expressionWithoutBlock(){let t=new ps(this.context,this.state);this.enterRule(t,16,ns.RULE_expressionWithoutBlock);try{switch(this.state=140,this.errorHandler.sync(this),this.tokenStream.LA(1)){case ns.T__5:case ns.T__7:case ns.T__8:case ns.T__9:case ns.T__10:case ns.T__11:case ns.T__22:case ns.T__24:case ns.T__26:case ns.T__29:case ns.INT:case ns.BOOL:case ns.IDENTIFIER:this.enterOuterAlt(t,1),this.state=136,this.binop();break;case ns.T__27:this.enterOuterAlt(t,2),this.state=137,this.breakExpression();break;case ns.T__28:this.enterOuterAlt(t,3),this.state=138,this.continueExpression();break;case ns.T__33:this.enterOuterAlt(t,4),this.state=139,this.returnExpression();break;default:throw new he(this)}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}primary(){let t=new gs(this.context,this.state);this.enterRule(t,18,ns.RULE_primary);try{switch(this.state=149,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,9,this.context)){case 1:this.enterOuterAlt(t,1),this.state=142,this.primitive();break;case 2:this.enterOuterAlt(t,2),this.state=143,this.bracket();break;case 3:this.enterOuterAlt(t,3),this.state=144,this.accessIdentifier();break;case 4:this.enterOuterAlt(t,4),this.state=145,this.unop();break;case 5:this.enterOuterAlt(t,5),this.state=146,this.assignmentExpressions();break;case 6:this.enterOuterAlt(t,6),this.state=147,this.closureExpression();break;case 7:this.enterOuterAlt(t,7),this.state=148,this.callExpression(0)}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}callExpression(t){void 0===t&&(t=0);let e,s=this.context,i=this.state,n=new xs(this.context,i),r=n;this.enterRecursionRule(n,20,ns.RULE_callExpression,t);try{let t;for(this.enterOuterAlt(n,1),this.state=152,this.callExpressionTerminal(),this.state=153,this.match(ns.T__5),this.state=155,this.errorHandler.sync(this),e=this.tokenStream.LA(1),(!(-32&e)&&1<<e&2055216960||!(e-34&-32)&&1<<e-34&23)&&(this.state=154,this.callParams()),this.state=157,this.match(ns.T__6),this.context.stop=this.tokenStream.LT(-1),this.state=167,this.errorHandler.sync(this),t=this.interpreter.adaptivePredict(this.tokenStream,12,this.context);2!==t&&t!==X.INVALID_ALT_NUMBER;){if(1===t){if(null!=this.parseListeners&&this.triggerExitRuleEvent(),r=n,n=new xs(s,i),this.pushNewRecursionContext(n,20,ns.RULE_callExpression),this.state=159,!this.precpred(this.context,2))throw this.createFailedPredicateException("this.precpred(this.context, 2)");this.state=160,this.match(ns.T__5),this.state=162,this.errorHandler.sync(this),e=this.tokenStream.LA(1),(!(-32&e)&&1<<e&2055216960||!(e-34&-32)&&1<<e-34&23)&&(this.state=161,this.callParams()),this.state=164,this.match(ns.T__6)}this.state=169,this.errorHandler.sync(this),t=this.interpreter.adaptivePredict(this.tokenStream,12,this.context)}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.unrollRecursionContexts(s)}return n}callExpressionTerminal(){let t=new fs(this.context,this.state);this.enterRule(t,22,ns.RULE_callExpressionTerminal);try{switch(this.state=173,this.errorHandler.sync(this),this.tokenStream.LA(1)){case ns.T__5:this.enterOuterAlt(t,1),this.state=170,this.bracket();break;case ns.IDENTIFIER:this.enterOuterAlt(t,2),this.state=171,this.accessIdentifier();break;case ns.T__22:case ns.T__24:case ns.T__26:this.enterOuterAlt(t,3),this.state=172,this.expressionWithBlock();break;default:throw new he(this)}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}unop(){let t=new ms(this.context,this.state);this.enterRule(t,24,ns.RULE_unop);try{switch(this.state=178,this.errorHandler.sync(this),this.tokenStream.LA(1)){case ns.T__7:case ns.T__8:this.enterOuterAlt(t,1),this.state=175,this.negationExpression();break;case ns.T__9:this.enterOuterAlt(t,2),this.state=176,this.dereferenceExpression();break;case ns.T__10:this.enterOuterAlt(t,3),this.state=177,this.borrowExpression();break;default:throw new he(this)}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}negationExpression(){let t,e=new Es(this.context,this.state);this.enterRule(e,26,ns.RULE_negationExpression);try{this.enterOuterAlt(e,1),this.state=180,e._op=this.tokenStream.LT(1),t=this.tokenStream.LA(1),8!==t&&9!==t?e._op=this.errorHandler.recoverInline(this):(this.errorHandler.reportMatch(this),this.consume()),this.state=181,this.binopTerminals()}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return e}dereferenceExpression(){let t=new Ts(this.context,this.state);this.enterRule(t,28,ns.RULE_dereferenceExpression);try{switch(this.enterOuterAlt(t,1),this.state=183,this.match(ns.T__9),this.state=186,this.errorHandler.sync(this),this.tokenStream.LA(1)){case ns.T__9:this.state=184,this.dereferenceExpression();break;case ns.IDENTIFIER:this.state=185,this.accessIdentifier();break;default:throw new he(this)}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}borrowExpression(){let t,e=new Ss(this.context,this.state);this.enterRule(e,30,ns.RULE_borrowExpression);try{this.enterOuterAlt(e,1),this.state=188,this.match(ns.T__10),this.state=190,this.errorHandler.sync(this),t=this.tokenStream.LA(1),1===t&&(this.state=189,this.mutable()),this.state=192,this.accessIdentifier()}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return e}binopTerminals(){let t=new As(this.context,this.state);this.enterRule(t,32,ns.RULE_binopTerminals);try{switch(this.state=196,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,17,this.context)){case 1:this.enterOuterAlt(t,1),this.state=194,this.primary();break;case 2:this.enterOuterAlt(t,2),this.state=195,this.expressionWithBlock()}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}binop(){let t=new ys(this.context,this.state);this.enterRule(t,34,ns.RULE_binop);try{this.enterOuterAlt(t,1),this.state=198,this.logicalOr()}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}logicalOr(){let t=new ks(this.context,this.state);this.enterRule(t,36,ns.RULE_logicalOr);try{let e;for(this.enterOuterAlt(t,1),this.state=200,this.logicalAnd(),this.state=205,this.errorHandler.sync(this),e=this.interpreter.adaptivePredict(this.tokenStream,18,this.context);2!==e&&e!==X.INVALID_ALT_NUMBER;)1===e&&(this.state=201,this.match(ns.T__11),this.state=202,this.logicalAnd()),this.state=207,this.errorHandler.sync(this),e=this.interpreter.adaptivePredict(this.tokenStream,18,this.context)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}logicalAnd(){let t=new vs(this.context,this.state);this.enterRule(t,38,ns.RULE_logicalAnd);try{let e;for(this.enterOuterAlt(t,1),this.state=208,this.comparison(),this.state=213,this.errorHandler.sync(this),e=this.interpreter.adaptivePredict(this.tokenStream,19,this.context);2!==e&&e!==X.INVALID_ALT_NUMBER;)1===e&&(this.state=209,this.match(ns.T__12),this.state=210,this.comparison()),this.state=215,this.errorHandler.sync(this),e=this.interpreter.adaptivePredict(this.tokenStream,19,this.context)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}comparison(){let t,e=new Cs(this.context,this.state);this.enterRule(e,40,ns.RULE_comparison);try{if(this.enterOuterAlt(e,1),this.state=216,this.additionSubstraction(),this.state=219,this.errorHandler.sync(this),1===this.interpreter.adaptivePredict(this.tokenStream,20,this.context))this.state=217,e._op=this.tokenStream.LT(1),t=this.tokenStream.LA(1),-32&t||!(1<<t&1032192)?e._op=this.errorHandler.recoverInline(this):(this.errorHandler.reportMatch(this),this.consume()),this.state=218,this.additionSubstraction()}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return e}additionSubstraction(){let t,e=new Rs(this.context,this.state);this.enterRule(e,42,ns.RULE_additionSubstraction);try{let s;for(this.enterOuterAlt(e,1),this.state=221,this.multiplicationDivision(),this.state=226,this.errorHandler.sync(this),s=this.interpreter.adaptivePredict(this.tokenStream,21,this.context);2!==s&&s!==X.INVALID_ALT_NUMBER;)1===s&&(this.state=222,e._op=this.tokenStream.LT(1),t=this.tokenStream.LA(1),8!==t&&20!==t?e._op=this.errorHandler.recoverInline(this):(this.errorHandler.reportMatch(this),this.consume()),this.state=223,this.multiplicationDivision()),this.state=228,this.errorHandler.sync(this),s=this.interpreter.adaptivePredict(this.tokenStream,21,this.context)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return e}multiplicationDivision(){let t,e=new _s(this.context,this.state);this.enterRule(e,44,ns.RULE_multiplicationDivision);try{let s;for(this.enterOuterAlt(e,1),this.state=229,this.binopTerminals(),this.state=234,this.errorHandler.sync(this),s=this.interpreter.adaptivePredict(this.tokenStream,22,this.context);2!==s&&s!==X.INVALID_ALT_NUMBER;)1===s&&(this.state=230,e._op=this.tokenStream.LT(1),t=this.tokenStream.LA(1),-32&t||!(1<<t&6292480)?e._op=this.errorHandler.recoverInline(this):(this.errorHandler.reportMatch(this),this.consume()),this.state=231,this.binopTerminals()),this.state=236,this.errorHandler.sync(this),s=this.interpreter.adaptivePredict(this.tokenStream,22,this.context)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return e}primitive(){let t,e=new Is(this.context,this.state);this.enterRule(e,46,ns.RULE_primitive);try{this.enterOuterAlt(e,1),this.state=237,t=this.tokenStream.LA(1),35!==t&&36!==t?this.errorHandler.recoverInline(this):(this.errorHandler.reportMatch(this),this.consume())}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return e}accessIdentifier(){let t=new Ls(this.context,this.state);this.enterRule(t,48,ns.RULE_accessIdentifier);try{this.enterOuterAlt(t,1),this.state=239,this.match(ns.IDENTIFIER)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}bracket(){let t=new Ns(this.context,this.state);this.enterRule(t,50,ns.RULE_bracket);try{this.enterOuterAlt(t,1),this.state=241,this.match(ns.T__5),this.state=242,this.expression(),this.state=243,this.match(ns.T__6)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}assignmentExpressions(){let t=new ws(this.context,this.state);this.enterRule(t,52,ns.RULE_assignmentExpressions);try{switch(this.state=253,this.errorHandler.sync(this),this.tokenStream.LA(1)){case ns.IDENTIFIER:this.enterOuterAlt(t,1),this.state=245,this.accessIdentifier(),this.state=246,this.match(ns.T__4),this.state=247,this.expression();break;case ns.T__9:this.enterOuterAlt(t,2),this.state=249,this.dereferenceExpression(),this.state=250,this.match(ns.T__4),this.state=251,this.expression();break;default:throw new he(this)}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}expressionWithBlock(){let t=new bs(this.context,this.state);this.enterRule(t,54,ns.RULE_expressionWithBlock);try{switch(this.state=258,this.errorHandler.sync(this),this.tokenStream.LA(1)){case ns.T__22:this.enterOuterAlt(t,1),this.state=255,this.blockExpression();break;case ns.T__24:this.enterOuterAlt(t,2),this.state=256,this.ifExpression();break;case ns.T__26:this.enterOuterAlt(t,3),this.state=257,this.loopExpression();break;default:throw new he(this)}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}blockExpression(){let t=new Os(this.context,this.state);this.enterRule(t,56,ns.RULE_blockExpression);try{this.enterOuterAlt(t,1),this.state=260,this.match(ns.T__22),this.state=261,this.blockBody(),this.state=262,this.match(ns.T__23)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}blockBody(){let t,e=new Ps(this.context,this.state);this.enterRule(e,58,ns.RULE_blockBody);try{let s;for(this.enterOuterAlt(e,1),this.state=267,this.errorHandler.sync(this),s=this.interpreter.adaptivePredict(this.tokenStream,25,this.context);2!==s&&s!==X.INVALID_ALT_NUMBER;)1===s&&(this.state=264,this.statement()),this.state=269,this.errorHandler.sync(this),s=this.interpreter.adaptivePredict(this.tokenStream,25,this.context);this.state=271,this.errorHandler.sync(this),t=this.tokenStream.LA(1),(!(-32&t)&&1<<t&2055216960||!(t-34&-32)&&1<<t-34&23)&&(this.state=270,this.expressionWithoutBlock())}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return e}ifExpression(){let t,e=new Ds(this.context,this.state);this.enterRule(e,60,ns.RULE_ifExpression);try{this.enterOuterAlt(e,1),this.state=273,this.match(ns.T__24),this.state=274,this.expression(),this.state=275,this.blockExpression(),this.state=278,this.errorHandler.sync(this),t=this.tokenStream.LA(1),26===t&&(this.state=276,this.match(ns.T__25),this.state=277,this.ifExpressionAlternative())}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return e}ifExpressionAlternative(){let t=new Fs(this.context,this.state);this.enterRule(t,62,ns.RULE_ifExpressionAlternative);try{switch(this.state=282,this.errorHandler.sync(this),this.tokenStream.LA(1)){case ns.T__22:this.enterOuterAlt(t,1),this.state=280,this.blockExpression();break;case ns.T__24:this.enterOuterAlt(t,2),this.state=281,this.ifExpression();break;default:throw new he(this)}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}loopExpression(){let t=new Bs(this.context,this.state);this.enterRule(t,64,ns.RULE_loopExpression);try{this.enterOuterAlt(t,1),this.state=284,this.predicateLoopExpression()}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}predicateLoopExpression(){let t=new Ms(this.context,this.state);this.enterRule(t,66,ns.RULE_predicateLoopExpression);try{this.enterOuterAlt(t,1),this.state=286,this.match(ns.T__26),this.state=287,this.expression(),this.state=288,this.blockExpression()}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}breakExpression(){let t=new Us(this.context,this.state);this.enterRule(t,68,ns.RULE_breakExpression);try{this.enterOuterAlt(t,1),this.state=290,this.match(ns.T__27)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}continueExpression(){let t=new Hs(this.context,this.state);this.enterRule(t,70,ns.RULE_continueExpression);try{this.enterOuterAlt(t,1),this.state=292,this.match(ns.T__28)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}closureExpression(){let t,e=new Vs(this.context,this.state);this.enterRule(e,72,ns.RULE_closureExpression);try{switch(this.enterOuterAlt(e,1),this.state=300,this.errorHandler.sync(this),this.tokenStream.LA(1)){case ns.T__11:this.state=294,this.match(ns.T__11);break;case ns.T__29:this.state=295,this.match(ns.T__29),this.state=297,this.errorHandler.sync(this),t=this.tokenStream.LA(1),38===t&&(this.state=296,this.functionParameters()),this.state=299,this.match(ns.T__29);break;default:throw new he(this)}switch(this.state=306,this.errorHandler.sync(this),this.tokenStream.LA(1)){case ns.T__5:case ns.T__7:case ns.T__8:case ns.T__9:case ns.T__10:case ns.T__11:case ns.T__22:case ns.T__24:case ns.T__26:case ns.T__27:case ns.T__28:case ns.T__29:case ns.T__33:case ns.INT:case ns.BOOL:case ns.IDENTIFIER:this.state=302,this.expression();break;case ns.T__30:this.state=303,this.match(ns.T__30),this.state=304,this.match(ns.TYPE),this.state=305,this.blockExpression();break;default:throw new he(this)}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return e}function_(){let t,e=new zs(this.context,this.state);this.enterRule(e,74,ns.RULE_function);try{switch(this.enterOuterAlt(e,1),this.state=308,this.match(ns.T__31),this.state=309,this.match(ns.IDENTIFIER),this.state=310,this.match(ns.T__5),this.state=312,this.errorHandler.sync(this),t=this.tokenStream.LA(1),38===t&&(this.state=311,this.functionParameters()),this.state=314,this.match(ns.T__6),this.state=316,this.errorHandler.sync(this),t=this.tokenStream.LA(1),31===t&&(this.state=315,this.functionReturnType()),this.state=320,this.errorHandler.sync(this),this.tokenStream.LA(1)){case ns.T__22:this.state=318,this.blockExpression();break;case ns.T__1:this.state=319,this.match(ns.T__1);break;default:throw new he(this)}}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return e}functionParameters(){let t,e=new Ws(this.context,this.state);this.enterRule(e,76,ns.RULE_functionParameters);try{let s;for(this.enterOuterAlt(e,1),this.state=322,this.functionParam(),this.state=327,this.errorHandler.sync(this),s=this.interpreter.adaptivePredict(this.tokenStream,35,this.context);2!==s&&s!==X.INVALID_ALT_NUMBER;)1===s&&(this.state=323,this.match(ns.T__32),this.state=324,this.functionParam()),this.state=329,this.errorHandler.sync(this),s=this.interpreter.adaptivePredict(this.tokenStream,35,this.context);this.state=331,this.errorHandler.sync(this),t=this.tokenStream.LA(1),33===t&&(this.state=330,this.match(ns.T__32))}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return e}functionParam(){let t=new qs(this.context,this.state);this.enterRule(t,78,ns.RULE_functionParam);try{this.enterOuterAlt(t,1),this.state=333,this.functionParamPattern(),this.state=334,this.match(ns.T__3),this.state=335,this.match(ns.TYPE)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}functionParamPattern(){let t=new $s(this.context,this.state);this.enterRule(t,80,ns.RULE_functionParamPattern);try{this.enterOuterAlt(t,1),this.state=337,this.match(ns.IDENTIFIER)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}functionReturnType(){let t=new Ys(this.context,this.state);this.enterRule(t,82,ns.RULE_functionReturnType);try{this.enterOuterAlt(t,1),this.state=339,this.match(ns.T__30),this.state=340,this.match(ns.TYPE)}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}returnExpression(){let t=new Ks(this.context,this.state);this.enterRule(t,84,ns.RULE_returnExpression);try{if(this.enterOuterAlt(t,1),this.state=342,this.match(ns.T__33),this.state=344,this.errorHandler.sync(this),1===this.interpreter.adaptivePredict(this.tokenStream,37,this.context))this.state=343,this.expression()}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return t}callParams(){let t,e=new Gs(this.context,this.state);this.enterRule(e,86,ns.RULE_callParams);try{let s;for(this.enterOuterAlt(e,1),this.state=346,this.expression(),this.state=351,this.errorHandler.sync(this),s=this.interpreter.adaptivePredict(this.tokenStream,38,this.context);2!==s&&s!==X.INVALID_ALT_NUMBER;)1===s&&(this.state=347,this.match(ns.T__32),this.state=348,this.expression()),this.state=353,this.errorHandler.sync(this),s=this.interpreter.adaptivePredict(this.tokenStream,38,this.context);this.state=355,this.errorHandler.sync(this),t=this.tokenStream.LA(1),33===t&&(this.state=354,this.match(ns.T__32))}catch(t){if(!(t instanceof Xt))throw t;this.errorHandler.reportError(this,t),this.errorHandler.recover(this,t)}finally{this.exitRule()}return e}sempred(t,e,s){return 10!==e||this.callExpression_sempred(t,s)}callExpression_sempred(t,e){return 0!==e||this.precpred(this.context,2)}static _serializedATN=[4,1,39,358,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,1,0,5,0,90,8,0,10,0,12,0,93,9,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,3,2,103,8,2,1,3,1,3,1,4,1,4,1,5,1,5,3,5,111,8,5,1,5,1,5,1,5,3,5,116,8,5,1,5,1,5,3,5,120,8,5,1,5,1,5,1,6,1,6,3,6,126,8,6,1,6,1,6,1,6,3,6,131,8,6,1,7,1,7,3,7,135,8,7,1,8,1,8,1,8,1,8,3,8,141,8,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,150,8,9,1,10,1,10,1,10,1,10,3,10,156,8,10,1,10,1,10,1,10,1,10,1,10,3,10,163,8,10,1,10,5,10,166,8,10,10,10,12,10,169,9,10,1,11,1,11,1,11,3,11,174,8,11,1,12,1,12,1,12,3,12,179,8,12,1,13,1,13,1,13,1,14,1,14,1,14,3,14,187,8,14,1,15,1,15,3,15,191,8,15,1,15,1,15,1,16,1,16,3,16,197,8,16,1,17,1,17,1,18,1,18,1,18,5,18,204,8,18,10,18,12,18,207,9,18,1,19,1,19,1,19,5,19,212,8,19,10,19,12,19,215,9,19,1,20,1,20,1,20,3,20,220,8,20,1,21,1,21,1,21,5,21,225,8,21,10,21,12,21,228,9,21,1,22,1,22,1,22,5,22,233,8,22,10,22,12,22,236,9,22,1,23,1,23,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,3,26,254,8,26,1,27,1,27,1,27,3,27,259,8,27,1,28,1,28,1,28,1,28,1,29,5,29,266,8,29,10,29,12,29,269,9,29,1,29,3,29,272,8,29,1,30,1,30,1,30,1,30,1,30,3,30,279,8,30,1,31,1,31,3,31,283,8,31,1,32,1,32,1,33,1,33,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,36,3,36,298,8,36,1,36,3,36,301,8,36,1,36,1,36,1,36,1,36,3,36,307,8,36,1,37,1,37,1,37,1,37,3,37,313,8,37,1,37,1,37,3,37,317,8,37,1,37,1,37,3,37,321,8,37,1,38,1,38,1,38,5,38,326,8,38,10,38,12,38,329,9,38,1,38,3,38,332,8,38,1,39,1,39,1,39,1,39,1,40,1,40,1,41,1,41,1,41,1,42,1,42,3,42,345,8,42,1,43,1,43,1,43,5,43,350,8,43,10,43,12,43,353,9,43,1,43,3,43,356,8,43,1,43,0,1,20,44,0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,0,5,1,0,8,9,1,0,14,19,2,0,8,8,20,20,2,0,10,10,21,22,1,0,35,36,365,0,91,1,0,0,0,2,96,1,0,0,0,4,102,1,0,0,0,6,104,1,0,0,0,8,106,1,0,0,0,10,108,1,0,0,0,12,130,1,0,0,0,14,134,1,0,0,0,16,140,1,0,0,0,18,149,1,0,0,0,20,151,1,0,0,0,22,173,1,0,0,0,24,178,1,0,0,0,26,180,1,0,0,0,28,183,1,0,0,0,30,188,1,0,0,0,32,196,1,0,0,0,34,198,1,0,0,0,36,200,1,0,0,0,38,208,1,0,0,0,40,216,1,0,0,0,42,221,1,0,0,0,44,229,1,0,0,0,46,237,1,0,0,0,48,239,1,0,0,0,50,241,1,0,0,0,52,253,1,0,0,0,54,258,1,0,0,0,56,260,1,0,0,0,58,267,1,0,0,0,60,273,1,0,0,0,62,282,1,0,0,0,64,284,1,0,0,0,66,286,1,0,0,0,68,290,1,0,0,0,70,292,1,0,0,0,72,300,1,0,0,0,74,308,1,0,0,0,76,322,1,0,0,0,78,333,1,0,0,0,80,337,1,0,0,0,82,339,1,0,0,0,84,342,1,0,0,0,86,346,1,0,0,0,88,90,3,4,2,0,89,88,1,0,0,0,90,93,1,0,0,0,91,89,1,0,0,0,91,92,1,0,0,0,92,94,1,0,0,0,93,91,1,0,0,0,94,95,5,0,0,1,95,1,1,0,0,0,96,97,5,1,0,0,97,3,1,0,0,0,98,103,3,6,3,0,99,103,3,8,4,0,100,103,3,10,5,0,101,103,3,12,6,0,102,98,1,0,0,0,102,99,1,0,0,0,102,100,1,0,0,0,102,101,1,0,0,0,103,5,1,0,0,0,104,105,5,2,0,0,105,7,1,0,0,0,106,107,3,74,37,0,107,9,1,0,0,0,108,110,5,3,0,0,109,111,3,2,1,0,110,109,1,0,0,0,110,111,1,0,0,0,111,112,1,0,0,0,112,115,5,38,0,0,113,114,5,4,0,0,114,116,5,37,0,0,115,113,1,0,0,0,115,116,1,0,0,0,116,119,1,0,0,0,117,118,5,5,0,0,118,120,3,14,7,0,119,117,1,0,0,0,119,120,1,0,0,0,120,121,1,0,0,0,121,122,5,2,0,0,122,11,1,0,0,0,123,125,3,54,27,0,124,126,5,2,0,0,125,124,1,0,0,0,125,126,1,0,0,0,126,131,1,0,0,0,127,128,3,16,8,0,128,129,5,2,0,0,129,131,1,0,0,0,130,123,1,0,0,0,130,127,1,0,0,0,131,13,1,0,0,0,132,135,3,54,27,0,133,135,3,16,8,0,134,132,1,0,0,0,134,133,1,0,0,0,135,15,1,0,0,0,136,141,3,34,17,0,137,141,3,68,34,0,138,141,3,70,35,0,139,141,3,84,42,0,140,136,1,0,0,0,140,137,1,0,0,0,140,138,1,0,0,0,140,139,1,0,0,0,141,17,1,0,0,0,142,150,3,46,23,0,143,150,3,50,25,0,144,150,3,48,24,0,145,150,3,24,12,0,146,150,3,52,26,0,147,150,3,72,36,0,148,150,3,20,10,0,149,142,1,0,0,0,149,143,1,0,0,0,149,144,1,0,0,0,149,145,1,0,0,0,149,146,1,0,0,0,149,147,1,0,0,0,149,148,1,0,0,0,150,19,1,0,0,0,151,152,6,10,-1,0,152,153,3,22,11,0,153,155,5,6,0,0,154,156,3,86,43,0,155,154,1,0,0,0,155,156,1,0,0,0,156,157,1,0,0,0,157,158,5,7,0,0,158,167,1,0,0,0,159,160,10,2,0,0,160,162,5,6,0,0,161,163,3,86,43,0,162,161,1,0,0,0,162,163,1,0,0,0,163,164,1,0,0,0,164,166,5,7,0,0,165,159,1,0,0,0,166,169,1,0,0,0,167,165,1,0,0,0,167,168,1,0,0,0,168,21,1,0,0,0,169,167,1,0,0,0,170,174,3,50,25,0,171,174,3,48,24,0,172,174,3,54,27,0,173,170,1,0,0,0,173,171,1,0,0,0,173,172,1,0,0,0,174,23,1,0,0,0,175,179,3,26,13,0,176,179,3,28,14,0,177,179,3,30,15,0,178,175,1,0,0,0,178,176,1,0,0,0,178,177,1,0,0,0,179,25,1,0,0,0,180,181,7,0,0,0,181,182,3,32,16,0,182,27,1,0,0,0,183,186,5,10,0,0,184,187,3,28,14,0,185,187,3,48,24,0,186,184,1,0,0,0,186,185,1,0,0,0,187,29,1,0,0,0,188,190,5,11,0,0,189,191,3,2,1,0,190,189,1,0,0,0,190,191,1,0,0,0,191,192,1,0,0,0,192,193,3,48,24,0,193,31,1,0,0,0,194,197,3,18,9,0,195,197,3,54,27,0,196,194,1,0,0,0,196,195,1,0,0,0,197,33,1,0,0,0,198,199,3,36,18,0,199,35,1,0,0,0,200,205,3,38,19,0,201,202,5,12,0,0,202,204,3,38,19,0,203,201,1,0,0,0,204,207,1,0,0,0,205,203,1,0,0,0,205,206,1,0,0,0,206,37,1,0,0,0,207,205,1,0,0,0,208,213,3,40,20,0,209,210,5,13,0,0,210,212,3,40,20,0,211,209,1,0,0,0,212,215,1,0,0,0,213,211,1,0,0,0,213,214,1,0,0,0,214,39,1,0,0,0,215,213,1,0,0,0,216,219,3,42,21,0,217,218,7,1,0,0,218,220,3,42,21,0,219,217,1,0,0,0,219,220,1,0,0,0,220,41,1,0,0,0,221,226,3,44,22,0,222,223,7,2,0,0,223,225,3,44,22,0,224,222,1,0,0,0,225,228,1,0,0,0,226,224,1,0,0,0,226,227,1,0,0,0,227,43,1,0,0,0,228,226,1,0,0,0,229,234,3,32,16,0,230,231,7,3,0,0,231,233,3,32,16,0,232,230,1,0,0,0,233,236,1,0,0,0,234,232,1,0,0,0,234,235,1,0,0,0,235,45,1,0,0,0,236,234,1,0,0,0,237,238,7,4,0,0,238,47,1,0,0,0,239,240,5,38,0,0,240,49,1,0,0,0,241,242,5,6,0,0,242,243,3,14,7,0,243,244,5,7,0,0,244,51,1,0,0,0,245,246,3,48,24,0,246,247,5,5,0,0,247,248,3,14,7,0,248,254,1,0,0,0,249,250,3,28,14,0,250,251,5,5,0,0,251,252,3,14,7,0,252,254,1,0,0,0,253,245,1,0,0,0,253,249,1,0,0,0,254,53,1,0,0,0,255,259,3,56,28,0,256,259,3,60,30,0,257,259,3,64,32,0,258,255,1,0,0,0,258,256,1,0,0,0,258,257,1,0,0,0,259,55,1,0,0,0,260,261,5,23,0,0,261,262,3,58,29,0,262,263,5,24,0,0,263,57,1,0,0,0,264,266,3,4,2,0,265,264,1,0,0,0,266,269,1,0,0,0,267,265,1,0,0,0,267,268,1,0,0,0,268,271,1,0,0,0,269,267,1,0,0,0,270,272,3,16,8,0,271,270,1,0,0,0,271,272,1,0,0,0,272,59,1,0,0,0,273,274,5,25,0,0,274,275,3,14,7,0,275,278,3,56,28,0,276,277,5,26,0,0,277,279,3,62,31,0,278,276,1,0,0,0,278,279,1,0,0,0,279,61,1,0,0,0,280,283,3,56,28,0,281,283,3,60,30,0,282,280,1,0,0,0,282,281,1,0,0,0,283,63,1,0,0,0,284,285,3,66,33,0,285,65,1,0,0,0,286,287,5,27,0,0,287,288,3,14,7,0,288,289,3,56,28,0,289,67,1,0,0,0,290,291,5,28,0,0,291,69,1,0,0,0,292,293,5,29,0,0,293,71,1,0,0,0,294,301,5,12,0,0,295,297,5,30,0,0,296,298,3,76,38,0,297,296,1,0,0,0,297,298,1,0,0,0,298,299,1,0,0,0,299,301,5,30,0,0,300,294,1,0,0,0,300,295,1,0,0,0,301,306,1,0,0,0,302,307,3,14,7,0,303,304,5,31,0,0,304,305,5,37,0,0,305,307,3,56,28,0,306,302,1,0,0,0,306,303,1,0,0,0,307,73,1,0,0,0,308,309,5,32,0,0,309,310,5,38,0,0,310,312,5,6,0,0,311,313,3,76,38,0,312,311,1,0,0,0,312,313,1,0,0,0,313,314,1,0,0,0,314,316,5,7,0,0,315,317,3,82,41,0,316,315,1,0,0,0,316,317,1,0,0,0,317,320,1,0,0,0,318,321,3,56,28,0,319,321,5,2,0,0,320,318,1,0,0,0,320,319,1,0,0,0,321,75,1,0,0,0,322,327,3,78,39,0,323,324,5,33,0,0,324,326,3,78,39,0,325,323,1,0,0,0,326,329,1,0,0,0,327,325,1,0,0,0,327,328,1,0,0,0,328,331,1,0,0,0,329,327,1,0,0,0,330,332,5,33,0,0,331,330,1,0,0,0,331,332,1,0,0,0,332,77,1,0,0,0,333,334,3,80,40,0,334,335,5,4,0,0,335,336,5,37,0,0,336,79,1,0,0,0,337,338,5,38,0,0,338,81,1,0,0,0,339,340,5,31,0,0,340,341,5,37,0,0,341,83,1,0,0,0,342,344,5,34,0,0,343,345,3,14,7,0,344,343,1,0,0,0,344,345,1,0,0,0,345,85,1,0,0,0,346,351,3,14,7,0,347,348,5,33,0,0,348,350,3,14,7,0,349,347,1,0,0,0,350,353,1,0,0,0,351,349,1,0,0,0,351,352,1,0,0,0,352,355,1,0,0,0,353,351,1,0,0,0,354,356,5,33,0,0,355,354,1,0,0,0,355,356,1,0,0,0,356,87,1,0,0,0,40,91,102,110,115,119,125,130,134,140,149,155,162,167,173,178,186,190,196,205,213,219,226,234,253,258,267,271,278,282,297,300,306,312,316,320,327,331,344,351,355];static __ATN;static get _ATN(){return ns.__ATN||(ns.__ATN=(new Mt).deserialize(ns._serializedATN)),ns.__ATN}static vocabulary=new x(ns.literalNames,ns.symbolicNames,[]);get vocabulary(){return ns.vocabulary}static decisionsToDFA=ns._ATN.decisionToState.map(((t,e)=>new ee(t,e)))}class rs extends U{constructor(t,e){super(t,e)}EOF(){return this.getToken(ns.EOF,0)}statement(t){return void 0===t?this.getRuleContexts(as):this.getRuleContext(t,as)}get ruleIndex(){return ns.RULE_prog}enterRule(t){t.enterProg&&t.enterProg(this)}exitRule(t){t.exitProg&&t.exitProg(this)}accept(t){return t.visitProg?t.visitProg(this):t.visitChildren(this)}}class os extends U{constructor(t,e){super(t,e)}get ruleIndex(){return ns.RULE_mutable}enterRule(t){t.enterMutable&&t.enterMutable(this)}exitRule(t){t.exitMutable&&t.exitMutable(this)}accept(t){return t.visitMutable?t.visitMutable(this):t.visitChildren(this)}}class as extends U{constructor(t,e){super(t,e)}emptyStatement(){return this.getRuleContext(0,hs)}item(){return this.getRuleContext(0,cs)}letStatement(){return this.getRuleContext(0,ls)}expressionStatement(){return this.getRuleContext(0,us)}get ruleIndex(){return ns.RULE_statement}enterRule(t){t.enterStatement&&t.enterStatement(this)}exitRule(t){t.exitStatement&&t.exitStatement(this)}accept(t){return t.visitStatement?t.visitStatement(this):t.visitChildren(this)}}class hs extends U{constructor(t,e){super(t,e)}get ruleIndex(){return ns.RULE_emptyStatement}enterRule(t){t.enterEmptyStatement&&t.enterEmptyStatement(this)}exitRule(t){t.exitEmptyStatement&&t.exitEmptyStatement(this)}accept(t){return t.visitEmptyStatement?t.visitEmptyStatement(this):t.visitChildren(this)}}class cs extends U{constructor(t,e){super(t,e)}function(){return this.getRuleContext(0,zs)}get ruleIndex(){return ns.RULE_item}enterRule(t){t.enterItem&&t.enterItem(this)}exitRule(t){t.exitItem&&t.exitItem(this)}accept(t){return t.visitItem?t.visitItem(this):t.visitChildren(this)}}class ls extends U{constructor(t,e){super(t,e)}IDENTIFIER(){return this.getToken(ns.IDENTIFIER,0)}mutable(){return this.getRuleContext(0,os)}TYPE(){return this.getToken(ns.TYPE,0)}expression(){return this.getRuleContext(0,ds)}get ruleIndex(){return ns.RULE_letStatement}enterRule(t){t.enterLetStatement&&t.enterLetStatement(this)}exitRule(t){t.exitLetStatement&&t.exitLetStatement(this)}accept(t){return t.visitLetStatement?t.visitLetStatement(this):t.visitChildren(this)}}class us extends U{constructor(t,e){super(t,e)}expressionWithBlock(){return this.getRuleContext(0,bs)}expressionWithoutBlock(){return this.getRuleContext(0,ps)}get ruleIndex(){return ns.RULE_expressionStatement}enterRule(t){t.enterExpressionStatement&&t.enterExpressionStatement(this)}exitRule(t){t.exitExpressionStatement&&t.exitExpressionStatement(this)}accept(t){return t.visitExpressionStatement?t.visitExpressionStatement(this):t.visitChildren(this)}}class ds extends U{constructor(t,e){super(t,e)}expressionWithBlock(){return this.getRuleContext(0,bs)}expressionWithoutBlock(){return this.getRuleContext(0,ps)}get ruleIndex(){return ns.RULE_expression}enterRule(t){t.enterExpression&&t.enterExpression(this)}exitRule(t){t.exitExpression&&t.exitExpression(this)}accept(t){return t.visitExpression?t.visitExpression(this):t.visitChildren(this)}}class ps extends U{constructor(t,e){super(t,e)}binop(){return this.getRuleContext(0,ys)}breakExpression(){return this.getRuleContext(0,Us)}continueExpression(){return this.getRuleContext(0,Hs)}returnExpression(){return this.getRuleContext(0,Ks)}get ruleIndex(){return ns.RULE_expressionWithoutBlock}enterRule(t){t.enterExpressionWithoutBlock&&t.enterExpressionWithoutBlock(this)}exitRule(t){t.exitExpressionWithoutBlock&&t.exitExpressionWithoutBlock(this)}accept(t){return t.visitExpressionWithoutBlock?t.visitExpressionWithoutBlock(this):t.visitChildren(this)}}class gs extends U{constructor(t,e){super(t,e)}primitive(){return this.getRuleContext(0,Is)}bracket(){return this.getRuleContext(0,Ns)}accessIdentifier(){return this.getRuleContext(0,Ls)}unop(){return this.getRuleContext(0,ms)}assignmentExpressions(){return this.getRuleContext(0,ws)}closureExpression(){return this.getRuleContext(0,Vs)}callExpression(){return this.getRuleContext(0,xs)}get ruleIndex(){return ns.RULE_primary}enterRule(t){t.enterPrimary&&t.enterPrimary(this)}exitRule(t){t.exitPrimary&&t.exitPrimary(this)}accept(t){return t.visitPrimary?t.visitPrimary(this):t.visitChildren(this)}}class xs extends U{constructor(t,e){super(t,e)}callExpressionTerminal(){return this.getRuleContext(0,fs)}callParams(){return this.getRuleContext(0,Gs)}callExpression(){return this.getRuleContext(0,xs)}get ruleIndex(){return ns.RULE_callExpression}enterRule(t){t.enterCallExpression&&t.enterCallExpression(this)}exitRule(t){t.exitCallExpression&&t.exitCallExpression(this)}accept(t){return t.visitCallExpression?t.visitCallExpression(this):t.visitChildren(this)}}class fs extends U{constructor(t,e){super(t,e)}bracket(){return this.getRuleContext(0,Ns)}accessIdentifier(){return this.getRuleContext(0,Ls)}expressionWithBlock(){return this.getRuleContext(0,bs)}get ruleIndex(){return ns.RULE_callExpressionTerminal}enterRule(t){t.enterCallExpressionTerminal&&t.enterCallExpressionTerminal(this)}exitRule(t){t.exitCallExpressionTerminal&&t.exitCallExpressionTerminal(this)}accept(t){return t.visitCallExpressionTerminal?t.visitCallExpressionTerminal(this):t.visitChildren(this)}}class ms extends U{constructor(t,e){super(t,e)}negationExpression(){return this.getRuleContext(0,Es)}dereferenceExpression(){return this.getRuleContext(0,Ts)}borrowExpression(){return this.getRuleContext(0,Ss)}get ruleIndex(){return ns.RULE_unop}enterRule(t){t.enterUnop&&t.enterUnop(this)}exitRule(t){t.exitUnop&&t.exitUnop(this)}accept(t){return t.visitUnop?t.visitUnop(this):t.visitChildren(this)}}class Es extends U{_op;constructor(t,e){super(t,e)}binopTerminals(){return this.getRuleContext(0,As)}get ruleIndex(){return ns.RULE_negationExpression}enterRule(t){t.enterNegationExpression&&t.enterNegationExpression(this)}exitRule(t){t.exitNegationExpression&&t.exitNegationExpression(this)}accept(t){return t.visitNegationExpression?t.visitNegationExpression(this):t.visitChildren(this)}}class Ts extends U{constructor(t,e){super(t,e)}dereferenceExpression(){return this.getRuleContext(0,Ts)}accessIdentifier(){return this.getRuleContext(0,Ls)}get ruleIndex(){return ns.RULE_dereferenceExpression}enterRule(t){t.enterDereferenceExpression&&t.enterDereferenceExpression(this)}exitRule(t){t.exitDereferenceExpression&&t.exitDereferenceExpression(this)}accept(t){return t.visitDereferenceExpression?t.visitDereferenceExpression(this):t.visitChildren(this)}}class Ss extends U{constructor(t,e){super(t,e)}accessIdentifier(){return this.getRuleContext(0,Ls)}mutable(){return this.getRuleContext(0,os)}get ruleIndex(){return ns.RULE_borrowExpression}enterRule(t){t.enterBorrowExpression&&t.enterBorrowExpression(this)}exitRule(t){t.exitBorrowExpression&&t.exitBorrowExpression(this)}accept(t){return t.visitBorrowExpression?t.visitBorrowExpression(this):t.visitChildren(this)}}class As extends U{constructor(t,e){super(t,e)}primary(){return this.getRuleContext(0,gs)}expressionWithBlock(){return this.getRuleContext(0,bs)}get ruleIndex(){return ns.RULE_binopTerminals}enterRule(t){t.enterBinopTerminals&&t.enterBinopTerminals(this)}exitRule(t){t.exitBinopTerminals&&t.exitBinopTerminals(this)}accept(t){return t.visitBinopTerminals?t.visitBinopTerminals(this):t.visitChildren(this)}}class ys extends U{constructor(t,e){super(t,e)}logicalOr(){return this.getRuleContext(0,ks)}get ruleIndex(){return ns.RULE_binop}enterRule(t){t.enterBinop&&t.enterBinop(this)}exitRule(t){t.exitBinop&&t.exitBinop(this)}accept(t){return t.visitBinop?t.visitBinop(this):t.visitChildren(this)}}class ks extends U{constructor(t,e){super(t,e)}logicalAnd(t){return void 0===t?this.getRuleContexts(vs):this.getRuleContext(t,vs)}get ruleIndex(){return ns.RULE_logicalOr}enterRule(t){t.enterLogicalOr&&t.enterLogicalOr(this)}exitRule(t){t.exitLogicalOr&&t.exitLogicalOr(this)}accept(t){return t.visitLogicalOr?t.visitLogicalOr(this):t.visitChildren(this)}}class vs extends U{constructor(t,e){super(t,e)}comparison(t){return void 0===t?this.getRuleContexts(Cs):this.getRuleContext(t,Cs)}get ruleIndex(){return ns.RULE_logicalAnd}enterRule(t){t.enterLogicalAnd&&t.enterLogicalAnd(this)}exitRule(t){t.exitLogicalAnd&&t.exitLogicalAnd(this)}accept(t){return t.visitLogicalAnd?t.visitLogicalAnd(this):t.visitChildren(this)}}class Cs extends U{_op;constructor(t,e){super(t,e)}additionSubstraction(t){return void 0===t?this.getRuleContexts(Rs):this.getRuleContext(t,Rs)}get ruleIndex(){return ns.RULE_comparison}enterRule(t){t.enterComparison&&t.enterComparison(this)}exitRule(t){t.exitComparison&&t.exitComparison(this)}accept(t){return t.visitComparison?t.visitComparison(this):t.visitChildren(this)}}class Rs extends U{_op;constructor(t,e){super(t,e)}multiplicationDivision(t){return void 0===t?this.getRuleContexts(_s):this.getRuleContext(t,_s)}get ruleIndex(){return ns.RULE_additionSubstraction}enterRule(t){t.enterAdditionSubstraction&&t.enterAdditionSubstraction(this)}exitRule(t){t.exitAdditionSubstraction&&t.exitAdditionSubstraction(this)}accept(t){return t.visitAdditionSubstraction?t.visitAdditionSubstraction(this):t.visitChildren(this)}}class _s extends U{_op;constructor(t,e){super(t,e)}binopTerminals(t){return void 0===t?this.getRuleContexts(As):this.getRuleContext(t,As)}get ruleIndex(){return ns.RULE_multiplicationDivision}enterRule(t){t.enterMultiplicationDivision&&t.enterMultiplicationDivision(this)}exitRule(t){t.exitMultiplicationDivision&&t.exitMultiplicationDivision(this)}accept(t){return t.visitMultiplicationDivision?t.visitMultiplicationDivision(this):t.visitChildren(this)}}class Is extends U{constructor(t,e){super(t,e)}INT(){return this.getToken(ns.INT,0)}BOOL(){return this.getToken(ns.BOOL,0)}get ruleIndex(){return ns.RULE_primitive}enterRule(t){t.enterPrimitive&&t.enterPrimitive(this)}exitRule(t){t.exitPrimitive&&t.exitPrimitive(this)}accept(t){return t.visitPrimitive?t.visitPrimitive(this):t.visitChildren(this)}}class Ls extends U{constructor(t,e){super(t,e)}IDENTIFIER(){return this.getToken(ns.IDENTIFIER,0)}get ruleIndex(){return ns.RULE_accessIdentifier}enterRule(t){t.enterAccessIdentifier&&t.enterAccessIdentifier(this)}exitRule(t){t.exitAccessIdentifier&&t.exitAccessIdentifier(this)}accept(t){return t.visitAccessIdentifier?t.visitAccessIdentifier(this):t.visitChildren(this)}}class Ns extends U{constructor(t,e){super(t,e)}expression(){return this.getRuleContext(0,ds)}get ruleIndex(){return ns.RULE_bracket}enterRule(t){t.enterBracket&&t.enterBracket(this)}exitRule(t){t.exitBracket&&t.exitBracket(this)}accept(t){return t.visitBracket?t.visitBracket(this):t.visitChildren(this)}}class ws extends U{constructor(t,e){super(t,e)}accessIdentifier(){return this.getRuleContext(0,Ls)}expression(){return this.getRuleContext(0,ds)}dereferenceExpression(){return this.getRuleContext(0,Ts)}get ruleIndex(){return ns.RULE_assignmentExpressions}enterRule(t){t.enterAssignmentExpressions&&t.enterAssignmentExpressions(this)}exitRule(t){t.exitAssignmentExpressions&&t.exitAssignmentExpressions(this)}accept(t){return t.visitAssignmentExpressions?t.visitAssignmentExpressions(this):t.visitChildren(this)}}class bs extends U{constructor(t,e){super(t,e)}blockExpression(){return this.getRuleContext(0,Os)}ifExpression(){return this.getRuleContext(0,Ds)}loopExpression(){return this.getRuleContext(0,Bs)}get ruleIndex(){return ns.RULE_expressionWithBlock}enterRule(t){t.enterExpressionWithBlock&&t.enterExpressionWithBlock(this)}exitRule(t){t.exitExpressionWithBlock&&t.exitExpressionWithBlock(this)}accept(t){return t.visitExpressionWithBlock?t.visitExpressionWithBlock(this):t.visitChildren(this)}}class Os extends U{constructor(t,e){super(t,e)}blockBody(){return this.getRuleContext(0,Ps)}get ruleIndex(){return ns.RULE_blockExpression}enterRule(t){t.enterBlockExpression&&t.enterBlockExpression(this)}exitRule(t){t.exitBlockExpression&&t.exitBlockExpression(this)}accept(t){return t.visitBlockExpression?t.visitBlockExpression(this):t.visitChildren(this)}}class Ps extends U{constructor(t,e){super(t,e)}statement(t){return void 0===t?this.getRuleContexts(as):this.getRuleContext(t,as)}expressionWithoutBlock(){return this.getRuleContext(0,ps)}get ruleIndex(){return ns.RULE_blockBody}enterRule(t){t.enterBlockBody&&t.enterBlockBody(this)}exitRule(t){t.exitBlockBody&&t.exitBlockBody(this)}accept(t){return t.visitBlockBody?t.visitBlockBody(this):t.visitChildren(this)}}class Ds extends U{constructor(t,e){super(t,e)}expression(){return this.getRuleContext(0,ds)}blockExpression(){return this.getRuleContext(0,Os)}ifExpressionAlternative(){return this.getRuleContext(0,Fs)}get ruleIndex(){return ns.RULE_ifExpression}enterRule(t){t.enterIfExpression&&t.enterIfExpression(this)}exitRule(t){t.exitIfExpression&&t.exitIfExpression(this)}accept(t){return t.visitIfExpression?t.visitIfExpression(this):t.visitChildren(this)}}class Fs extends U{constructor(t,e){super(t,e)}blockExpression(){return this.getRuleContext(0,Os)}ifExpression(){return this.getRuleContext(0,Ds)}get ruleIndex(){return ns.RULE_ifExpressionAlternative}enterRule(t){t.enterIfExpressionAlternative&&t.enterIfExpressionAlternative(this)}exitRule(t){t.exitIfExpressionAlternative&&t.exitIfExpressionAlternative(this)}accept(t){return t.visitIfExpressionAlternative?t.visitIfExpressionAlternative(this):t.visitChildren(this)}}class Bs extends U{constructor(t,e){super(t,e)}predicateLoopExpression(){return this.getRuleContext(0,Ms)}get ruleIndex(){return ns.RULE_loopExpression}enterRule(t){t.enterLoopExpression&&t.enterLoopExpression(this)}exitRule(t){t.exitLoopExpression&&t.exitLoopExpression(this)}accept(t){return t.visitLoopExpression?t.visitLoopExpression(this):t.visitChildren(this)}}class Ms extends U{constructor(t,e){super(t,e)}expression(){return this.getRuleContext(0,ds)}blockExpression(){return this.getRuleContext(0,Os)}get ruleIndex(){return ns.RULE_predicateLoopExpression}enterRule(t){t.enterPredicateLoopExpression&&t.enterPredicateLoopExpression(this)}exitRule(t){t.exitPredicateLoopExpression&&t.exitPredicateLoopExpression(this)}accept(t){return t.visitPredicateLoopExpression?t.visitPredicateLoopExpression(this):t.visitChildren(this)}}class Us extends U{constructor(t,e){super(t,e)}get ruleIndex(){return ns.RULE_breakExpression}enterRule(t){t.enterBreakExpression&&t.enterBreakExpression(this)}exitRule(t){t.exitBreakExpression&&t.exitBreakExpression(this)}accept(t){return t.visitBreakExpression?t.visitBreakExpression(this):t.visitChildren(this)}}class Hs extends U{constructor(t,e){super(t,e)}get ruleIndex(){return ns.RULE_continueExpression}enterRule(t){t.enterContinueExpression&&t.enterContinueExpression(this)}exitRule(t){t.exitContinueExpression&&t.exitContinueExpression(this)}accept(t){return t.visitContinueExpression?t.visitContinueExpression(this):t.visitChildren(this)}}class Vs extends U{constructor(t,e){super(t,e)}expression(){return this.getRuleContext(0,ds)}TYPE(){return this.getToken(ns.TYPE,0)}blockExpression(){return this.getRuleContext(0,Os)}functionParameters(){return this.getRuleContext(0,Ws)}get ruleIndex(){return ns.RULE_closureExpression}enterRule(t){t.enterClosureExpression&&t.enterClosureExpression(this)}exitRule(t){t.exitClosureExpression&&t.exitClosureExpression(this)}accept(t){return t.visitClosureExpression?t.visitClosureExpression(this):t.visitChildren(this)}}class zs extends U{constructor(t,e){super(t,e)}IDENTIFIER(){return this.getToken(ns.IDENTIFIER,0)}blockExpression(){return this.getRuleContext(0,Os)}functionParameters(){return this.getRuleContext(0,Ws)}functionReturnType(){return this.getRuleContext(0,Ys)}get ruleIndex(){return ns.RULE_function}enterRule(t){t.enterFunction&&t.enterFunction(this)}exitRule(t){t.exitFunction&&t.exitFunction(this)}accept(t){return t.visitFunction?t.visitFunction(this):t.visitChildren(this)}}class Ws extends U{constructor(t,e){super(t,e)}functionParam(t){return void 0===t?this.getRuleContexts(qs):this.getRuleContext(t,qs)}get ruleIndex(){return ns.RULE_functionParameters}enterRule(t){t.enterFunctionParameters&&t.enterFunctionParameters(this)}exitRule(t){t.exitFunctionParameters&&t.exitFunctionParameters(this)}accept(t){return t.visitFunctionParameters?t.visitFunctionParameters(this):t.visitChildren(this)}}class qs extends U{constructor(t,e){super(t,e)}functionParamPattern(){return this.getRuleContext(0,$s)}TYPE(){return this.getToken(ns.TYPE,0)}get ruleIndex(){return ns.RULE_functionParam}enterRule(t){t.enterFunctionParam&&t.enterFunctionParam(this)}exitRule(t){t.exitFunctionParam&&t.exitFunctionParam(this)}accept(t){return t.visitFunctionParam?t.visitFunctionParam(this):t.visitChildren(this)}}class $s extends U{constructor(t,e){super(t,e)}IDENTIFIER(){return this.getToken(ns.IDENTIFIER,0)}get ruleIndex(){return ns.RULE_functionParamPattern}enterRule(t){t.enterFunctionParamPattern&&t.enterFunctionParamPattern(this)}exitRule(t){t.exitFunctionParamPattern&&t.exitFunctionParamPattern(this)}accept(t){return t.visitFunctionParamPattern?t.visitFunctionParamPattern(this):t.visitChildren(this)}}class Ys extends U{constructor(t,e){super(t,e)}TYPE(){return this.getToken(ns.TYPE,0)}get ruleIndex(){return ns.RULE_functionReturnType}enterRule(t){t.enterFunctionReturnType&&t.enterFunctionReturnType(this)}exitRule(t){t.exitFunctionReturnType&&t.exitFunctionReturnType(this)}accept(t){return t.visitFunctionReturnType?t.visitFunctionReturnType(this):t.visitChildren(this)}}class Ks extends U{constructor(t,e){super(t,e)}expression(){return this.getRuleContext(0,ds)}get ruleIndex(){return ns.RULE_returnExpression}enterRule(t){t.enterReturnExpression&&t.enterReturnExpression(this)}exitRule(t){t.exitReturnExpression&&t.exitReturnExpression(this)}accept(t){return t.visitReturnExpression?t.visitReturnExpression(this):t.visitChildren(this)}}class Gs extends U{constructor(t,e){super(t,e)}expression(t){return void 0===t?this.getRuleContexts(ds):this.getRuleContext(t,ds)}get ruleIndex(){return ns.RULE_callParams}enterRule(t){t.enterCallParams&&t.enterCallParams(this)}exitRule(t){t.exitCallParams&&t.exitCallParams(this)}accept(t){return t.visitCallParams?t.visitCallParams(this):t.visitChildren(this)}}const js=t=>({tag:"LDC",value:t}),Xs=t=>({tag:"LDA",pos:t}),Zs=t=>({tag:"ENTER_SCOPE",frameSize:t}),Js=t=>({tag:"JOF",address:t}),Qs=t=>({tag:"GOTO",address:t}),ti=(t,e)=>({tag:"LDF",arity:t,address:e}),ei=t=>({tag:"CALL",arity:t}),si=null;class ii extends me{instructionArray;isFirstStatement;env;breakStack;continueStack;expectLvalue;constructor(){super(),this.instructionArray=[],this.isFirstStatement=!0,this.env=[[]],this.breakStack=[],this.continueStack=[],this.expectLvalue=!1}assignIdentifierPosition(t){const e=this.env.length-1;let s=this.frameValueIndex(e,t);if(null!==s)return[e,s];const i=s=this.env[e].length;return this.env[e][i]=t,[e,s]}getIdentifierPosition(t){let e,s=this.env.length;for(;s>0;)if(--s,null!==(e=this.frameValueIndex(s,t)))return[s,e];throw new Error(`Accessing undeclared identifier ${t}`)}frameValueIndex(t,e){const s=this.env[t];for(let t=0;t<s.length;++t)if(s[t]===e)return t;return null}visitProg(t){const e=Zs(null);this.instructionArray.push(e);const s=t.statement();for(let t of s)this.visit(t);e.frameSize=this.env[0].length,this.instructionArray.push({tag:"DONE"})}visitEmptyStatement(t){}visitLetStatement(t){if(t.TYPE())throw new Error("Compiling type annotation not yet implemented");let e=t.IDENTIFIER().getText(),s=t.expression(),[i,n]=this.assignIdentifierPosition(e);null!==s&&(this.visit(s),this.instructionArray.push(Xs([i,n])),this.instructionArray.push({tag:"ASSIGN"}),this.instructionArray.push({tag:"POP"}))}visitExpressionStatement(t){this.isFirstStatement?this.isFirstStatement=!1:this.instructionArray.push({tag:"POP"}),this.visit(t.expressionWithBlock()||t.expressionWithoutBlock())}visitNegationExpression(t){this.visit(t.binopTerminals());const e=t.getChild(0).getText();this.instructionArray.push((t=>({tag:"UNOP",op:t}))(e))}visitDereferenceExpression(t){t.accessIdentifier()?this.visit(t.accessIdentifier()):this.visit(t.dereferenceExpression()),this.instructionArray.push({tag:"DEREF"})}visitBorrowExpression(t){const e=this.expectLvalue;this.expectLvalue=!0,this.visit(t.accessIdentifier()),this.expectLvalue=e,this.instructionArray.push({tag:"BORROW"})}compileLeftToRightAssociativeBinop(t){const e=t.getChildCount();this.visit(t.getChild(0));for(let s=1;s<e;s+=2){const e=t.getChild(s).getText();this.visit(t.getChild(s+1)),this.instructionArray.push({tag:"BINOP",op:e})}}visitLogicalOr(t){this.compileLeftToRightAssociativeBinop(t)}visitLogicalAnd(t){this.compileLeftToRightAssociativeBinop(t)}visitComparison(t){this.compileLeftToRightAssociativeBinop(t)}visitAdditionSubstraction(t){this.compileLeftToRightAssociativeBinop(t)}visitMultiplicationDivision(t){this.compileLeftToRightAssociativeBinop(t)}visitPrimitive(t){let e;if(t.INT())e=parseInt(t.getText());else{if(!t.BOOL())throw new Error(`unrecognized primitive: ${t.getText()}`);e="true"===t.getText()}this.instructionArray.push(js(e))}visitAccessIdentifier(t){let e=t.IDENTIFIER().getText(),s=this.getIdentifierPosition(e);this.expectLvalue?this.instructionArray.push(Xs(s)):this.instructionArray.push({tag:"LD",pos:s})}visitBlockExpression(t){const e=Zs(null);this.instructionArray.push(e);let s=t.blockBody();this.env.push([]),this.visit(s);const i=this.env.pop();e.frameSize=i.length,this.instructionArray.push({tag:"EXIT_SCOPE"})}visitBlockBody(t){const e=this.isFirstStatement;this.isFirstStatement=!0;for(let e of t.statement())this.visit(e);this.isFirstStatement||this.instructionArray.push({tag:"POP"}),t.expressionWithoutBlock()?this.visit(t.expressionWithoutBlock()):this.instructionArray.push(js(si)),this.isFirstStatement=e}visitBracket(t){this.visit(t.expression())}visitIfExpression(t){this.visit(t.expression());const e=Js(null);this.instructionArray.push(e),this.visit(t.blockExpression());const s=Qs(null);this.instructionArray.push(s),e.address=this.instructionArray.length,t.ifExpressionAlternative()?this.visit(t.ifExpressionAlternative()):this.instructionArray.push(js(si)),s.address=this.instructionArray.length}visitPredicateLoopExpression(t){const e=this.instructionArray.length,s=t.expression(),i=t.blockExpression();this.visit(s);const n=Js(null);this.instructionArray.push(n),this.breakStack.push([n,this.env.length]),this.continueStack.push([Qs(e),this.env.length]),this.visit(i),this.instructionArray.push({tag:"POP"}),this.instructionArray.push(Qs(e)),n.address=this.instructionArray.length,this.breakStack.pop(),this.continueStack.pop(),this.instructionArray.push(js(si))}visitBreakExpression(t){if(0===this.breakStack.length)throw new Error("Break statement not within a loop");const e=this.env.length-this.breakStack[this.breakStack.length-1][1];for(let t=0;t<e;t++)this.instructionArray.push({tag:"EXIT_SCOPE"});this.instructionArray.push(js(si)),this.instructionArray.push(this.breakStack[this.breakStack.length-1][0])}visitContinueExpression(t){if(0===this.continueStack.length)throw new Error("Continue statement not within a loop");const e=this.env.length-this.continueStack[this.continueStack.length-1][1];for(let t=0;t<e;t++)this.instructionArray.push({tag:"EXIT_SCOPE"});this.instructionArray.push(this.continueStack[this.continueStack.length-1][0])}visitAssignmentExpressions(t){this.visit(t.expression());const e=this.expectLvalue;this.expectLvalue=!0,this.visit(t.accessIdentifier()||t.dereferenceExpression()),this.expectLvalue=e,this.instructionArray.push({tag:"ASSIGN"}),this.instructionArray.push(js(si))}visitClosureExpression(t){let e=0;const s=t.functionParameters();s&&(e=s.functionParam().length),this.instructionArray.push(ti(e,this.instructionArray.length+1+1));const i=Qs(null);this.instructionArray.push(i),this.env.push([]),s&&s.functionParam().map((t=>this.visit(t))),t.expression()?(this.visit(t.expression()),this.instructionArray.push({tag:"RESET"})):this.visit(t.blockExpression()),this.env.pop(),this.instructionArray.push(js(si)),this.instructionArray.push({tag:"RESET"}),i.address=this.instructionArray.length}visitFunction(t){let e=0;const s=t.functionParameters();s&&(e=s.functionParam().length),this.instructionArray.push(ti(e,this.instructionArray.length+1+1));const i=Qs(null);this.instructionArray.push(i),this.env.push([]),s&&s.functionParam().map((t=>this.visit(t))),this.visit(t.blockExpression()),this.env.pop(),this.instructionArray.push(js(si)),this.instructionArray.push({tag:"RESET"}),i.address=this.instructionArray.length;let n=t.IDENTIFIER().getText(),[r,o]=this.assignIdentifierPosition(n);this.instructionArray.push(Xs([r,o])),this.instructionArray.push({tag:"ASSIGN"}),this.instructionArray.push({tag:"POP"})}visitFunctionParam(t){let e=t.functionParamPattern().IDENTIFIER().getText(),[s,i]=this.assignIdentifierPosition(e)}visitCallExpression(t){const e=this.expectLvalue;if(this.expectLvalue=!0,this.visit(t.callExpression()||t.callExpressionTerminal()),this.expectLvalue=e,null==t.callParams())this.instructionArray.push(ei(0));else{const e=t.callParams().expression();for(const t of e)this.visit(t);this.instructionArray.push(ei(e.length))}}visitReturnExpression(t){this.visit(t.expression()),this.instructionArray.push({tag:"RESET"})}}class ni{static WORD_SIZE=8;static HEAP_SIZE=65536;static METADATA_SIZE=1;size_offset=1;free;buffer;heap;constructor(){this.buffer=new ArrayBuffer(ni.HEAP_SIZE),this.heap=new DataView(this.buffer),this.free=0}reserve(t,e){if(ni.HEAP_SIZE<(this.free+t+ni.METADATA_SIZE)*ni.WORD_SIZE)throw new Error("Heap out of memory");const s=this.free;return this.setTag(s,e),this.setSize(s,t),this.free+=t+ni.METADATA_SIZE,s}static addressToBytes(t){return t*this.WORD_SIZE}setMetadata(t,e,s){this.setTag(t,e),this.setTag(t,s)}getTag(t){return this.heap.getUint8(ni.addressToBytes(t))}setTag(t,e){this.heap.setUint8(ni.addressToBytes(t),e)}getSize(t){return this.heap.getUint16(ni.addressToBytes(t)+this.size_offset)}setSize(t,e){this.heap.setUint16(ni.addressToBytes(t)+this.size_offset,e)}setByteAtOffset(t,e,s){this.heap.setUint8(ni.addressToBytes(t)+e,s)}getByteAtOffset(t,e){return this.heap.getUint8(ni.addressToBytes(t)+e)}setTwoByteAtOffset(t,e,s){this.heap.setUint16(ni.addressToBytes(t)+e,s)}getTwoByteAtOffset(t,e){return this.heap.getUint16(ni.addressToBytes(t)+e)}get(t){return this.heap.getFloat64(ni.addressToBytes(t))}set(t,e){this.heap.setFloat64(ni.addressToBytes(t),e)}deallocate(t){}}const ri=t=>{if(null===t)return ci;if("number"==typeof t)return ai;if("boolean"==typeof t)return hi;throw new Error(`Unrecognize literal type: ${t}`)},oi=t=>{switch(t){case ai.getTag():return ai;case hi.getTag():return hi;case ci.getTag():return ci;default:throw new Error(`Unrecognized type tag: ${t}`)}};class ai{static getTag(){return 2}static allocate(t,e){const s=t.reserve(1,this.getTag());return t.set(s+ni.METADATA_SIZE,e),s}static addressToValue(t,e){return t.get(e+ni.METADATA_SIZE)}}class hi{static getTag(){return 3}static allocate(t,e){const s=t.reserve(1,this.getTag());return t.set(s+ni.METADATA_SIZE,e?1:0),s}static addressToValue(t,e){return 1===t.get(e+ni.METADATA_SIZE)}}class ci{static getTag(){return 4}static allocate(t,e){return t.reserve(0,this.getTag())}static addressToValue(t,e){return null}}class li{static getTag(){return 5}static allocate(t,e){const s=t.reserve(1,this.getTag());return t.set(s+ni.METADATA_SIZE,e),s}static addressToValue(t,e){return t.get(e+ni.METADATA_SIZE)}static setPointer(t,e,s){t.set(e+ni.METADATA_SIZE,s)}}class ui{static getTag(){return 6}static allocate(t,e){const s=e[0],i=e[1],n=e[2],r=t.reserve(1,this.getTag());return t.setByteAtOffset(r,3,s),t.setTwoByteAtOffset(r,4,i),t.set(r+ni.METADATA_SIZE,n),r}static addressToValue(t,e){return t.get(e+ni.METADATA_SIZE)}static getClosureEnvironment(t,e){return t.get(e+ni.METADATA_SIZE)}static getClosureArity(t,e){return t.getByteAtOffset(e,3)}static getClosurePC(t,e){return t.getTwoByteAtOffset(e,4)}}class di{static getTag(){return 0}static allocate(t,e){return t.reserve(e,this.getTag())}static getPointerAddress(t,e,s,i){return pi.getAddress(this.getFrame(t,e,s),i)}static getFrame(t,e,s){return t.get(e+s+ni.METADATA_SIZE)}static setFrame(t,e,s,i){return t.set(e+s+ni.METADATA_SIZE,i)}static extend(t,e,s){const i=t.getSize(e),n=t.reserve(i+1,this.getTag());for(let s=0;s<i;++s)this.setFrame(t,n,s,this.getFrame(t,e,s));const r=pi.allocate(t,s);return this.setFrame(t,n,i,r),n}static getValue(t,e,s,i){const n=this.getFrame(t,e,s);return pi.getValue(t,n,i)}static setValue(t,e,s,i,n){const r=this.getFrame(t,e,s);pi.setValue(t,r,i,n)}}class pi{static getTag(){return 1}static indexToOffset(t){return(ni.METADATA_SIZE+1)*t}static getAddress(t,e){return t+ni.METADATA_SIZE+this.indexToOffset(e)}static allocate(t,e){const s=t.reserve(this.indexToOffset(e),this.getTag());for(let i=0;i<e;++i)t.setMetadata(this.getAddress(s,i),li.getTag(),1);return s}static setValue(t,e,s,i){this.checkValidAccess(t,e,s);const n=this.getAddress(e,s);li.setPointer(t,n,i)}static getValue(t,e,s){this.checkValidAccess(t,e,s);const i=this.getAddress(e,s);return li.addressToValue(t,i)}static checkValidAccess(t,e,s){if(t.getTag(e)!==this.getTag())throw new Error(`Trying to set a value of a non-Frame, got tag: ${t.getTag(e)}`);const i=t.getSize(e);if(i<=s)throw new Error(`Invalid index: Trying to access frame of size ${i} at ${s}`)}}class gi{static getTag(){return 2}static allocate(t,e){const[s,i]=e,n=t.reserve(2,this.getTag());return t.set(n+1,s),t.setTwoByteAtOffset(n,3,i),n}static addressToValue(t,e){return[t.get(e+1),t.getTwoByteAtOffset(e,2)]}static getPC(t,e){return t.getTwoByteAtOffset(e,3)}static getEnvironment(t,e){return t.get(e+1)}}let xi,fi,mi,Ei,Ti;function Si(t){const e=((t,e)=>ri(e).allocate(t,e))(xi,t);fi.push(e)}function Ai(){return((t,e)=>{const s=t.getTag(e);return oi(s).addressToValue(t,e)})(xi,fi.pop())}const yi={LDC:t=>{Si(t.value),Ei++},UNOP:t=>{const e=Ai();Si(vi(t.op,e)),Ei++},BINOP:t=>{const e=Ai(),s=Ai();Si(ki(t.op,s,e)),Ei++},POP:t=>{fi.pop(),Ei++},ASSIGN:t=>{const e=fi.pop(),s=fi.pop();li.setPointer(xi,e,s),Ei++},LD:t=>{const[e,s]=t.pos,i=di.getValue(xi,Ti,e,s);fi.push(i),Ei++},LDA:t=>{const[e,s]=t.pos;fi.push(di.getPointerAddress(xi,Ti,e,s)),Ei++},ENTER_SCOPE:t=>{mi.push(Ti),Ti=di.extend(xi,Ti,t.frameSize),Ei++},EXIT_SCOPE:t=>{Ti=mi.pop(),Ei++},GOTO:t=>{Ei=t.address},JOF:t=>{Ai()?Ei++:Ei=t.address},DEREF:t=>{const e=fi.pop(),s=li.addressToValue(xi,e);fi.push(s),Ei++},BORROW:t=>{const e=fi.pop();let s;s=xi.getTag(e)===li.getTag()?li.allocate(xi,e):e,fi.push(s),Ei++},LDF:t=>{const e=ui.allocate(xi,[t.arity,t.address,Ti]);fi.push(e),Ei++},RESET:t=>{const e=mi.pop();xi.getTag(e)==gi.getTag()&&(Ei=gi.getPC(xi,e),Ti=gi.getEnvironment(xi,e))},CALL:t=>{const e=t.arity,s=fi.slice(-1-e)[0],i=li.addressToValue(xi,s),n=gi.allocate(xi,[Ti,Ei+1]);mi.push(n);const r=ui.getClosureEnvironment(xi,i);Ti=di.extend(xi,r,e);for(let t=e-1;t>=0;--t){const e=di.getPointerAddress(xi,Ti,xi.getSize(r),t);li.setPointer(xi,e,fi.pop())}fi.pop(),Ei=ui.getClosurePC(xi,i)}},ki=(t,e,s)=>{switch(t){case"+":return e+s;case"-":return e-s;case"*":return e*s;case"/":if(0===s)throw new Error("Division by zero");return e/s;case"<":return e<s;case"<=":return e<=s;case">":return e>s;case">=":return e>=s;case"==":return e==s;case"!=":return e!=s;case"%":return e%s;case"&&":return e&&s;case"||":return e||s;default:throw new Error(`Unrecognized operator ${t}`)}},vi=(t,e)=>{switch(t){case"-":return-e;case"!":return!e;default:throw new Error(`Unrecognized unary operator ${t}`)}};class Ci{value;mutableBorrowers;sharedBorrowers;constructor(t){this.value=t,this.mutableBorrowers=[],this.sharedBorrowers=[]}addBorrow(t){t.isMutable?this.addMutableBorrow(t):this.addSharedBorrow(t)}addMutableBorrow(t){this.sharedBorrowers.length>0&&(this.sharedBorrowers=[]),this.mutableBorrowers=[t]}addSharedBorrow(t){this.mutableBorrowers.length>0&&(this.mutableBorrowers=[]),this.sharedBorrowers.push(t)}useBorrow(t){if((!t.isMutable||!this.mutableBorrowers.includes(t))&&(t.isMutable||!this.sharedBorrowers.includes(t)))throw console.error(this),console.error(t),new Error("Invalid borrow")}useAsOwner(t,e){if(this.mutableBorrowers=[],t&&(this.sharedBorrowers=[]),e)return;if(!(this.value instanceof wi))return;const s=this.value;s.baseType.useBorrow(s)}}class Ri{isDropped=!1;owner=null}class _i extends Ri{constructor(){super()}toString(){return"number"}compare(t){return t instanceof _i}copyable(){return!0}copy(){return new _i}drop(){this.isDropped=!0}isValid(){return!this.isDropped}}class Ii extends Ri{constructor(){super()}toString(){return"boolean"}compare(t){return t instanceof Ii}copyable(){return!0}copy(){return new Ii}drop(){this.isDropped=!0}isValid(){return!this.isDropped}}class Li extends Ri{constructor(){super(),this.isDropped=!0}toString(){return"?"}compare(t){return t instanceof Li}copyable(){return!1}copy(){return new Li}drop(){}isValid(){return!1}}class Ni extends Ri{constructor(){super()}toString(){return"()"}compare(t){return t instanceof Ni}copyable(){return!0}copy(){return new Ni}drop(){this.isDropped=!0}isValid(){return!this.isDropped}}class wi extends Ri{baseType;isMutable;constructor(t,e){super(),this.baseType=t,this.isMutable=e}toString(){return`*${this.baseType.toString()}`}compare(t){return t instanceof wi&&this.baseType.value.compare(t.baseType.value)&&this.isMutable===t.isMutable}copyable(){return!this.isMutable}copy(){return new wi(this.baseType,this.isMutable)}drop(){this.isDropped=!0}isValid(){return!this.isDropped&&this.baseType.value.isValid()}}const bi=new _i,Oi=new Ii,Pi=new Ni,Di=new Li;class Fi extends me{typeEnv;isFirstStatement;expectLvalue;useForMutable;constructor(){super(),this.typeEnv=[],this.isFirstStatement=!0,this.expectLvalue=!1,this.useForMutable=!1}emptyTypeEnvironment=null;globalTypeFrame={"+":{type:"binary_arith_type"},"-":{type:"binary_arith_type"},"*":{type:"binary_arith_type"},"/":{type:"binary_arith_type"},"<":{type:"number_comparison_type"},">":{type:"number_comparison_type"},"<=":{type:"number_comparison_type"},">=":{type:"number_comparison_type"},"&&":{type:"binary_bool_type"},"||":{type:"binary_bool_type"},"!":{type:"unary_bool_type"}};globalTypeEnvironment=[this.emptyTypeEnvironment,this.globalTypeFrame];lookupType(t,e){let s=[...e];for(;s.length>0;){const e=s.pop();if(!e)throw new Error("Lookup Fail, frame is Null");if(e.hasOwnProperty(t))return e[t]}throw new Error(`unbound name: ${t}`)}addIdentifierType(t,e){const s=this.typeEnv.pop();if(!s)throw new Error(`Add Identifier ${t} Fail, frame is Null`);s[t]=e,this.typeEnv.push(s)}extendTypeEnvironment(t,e,s){if(e.length>t.length)throw new Error("too few parameters in declaration");if(e.length<t.length)throw new Error("too many parameters in declaration");const i={};for(let s=0;s<t.length;s++)i[t[s]]=e[s];return s.push(i),s}dropFrame(t){for(let e of Object.values(t)){if(e.type.compare(Di))throw new Error("Type annotation needed");e.owns.value&&(e.owns.value.owner=null,e.owns.value.drop())}}copyOrMove(t){return t.copyable()?((t=t.copy())instanceof wi&&t.baseType.addBorrow(t),t):t}updateOwner(t,e){(t=this.copyOrMove(t)).owner&&(t.owner.owns.value=null);let s=null;return e.owns.value&&(s=e.owns.value,s.owner=null),e.owns.value=t,t.owner=e,s&&null===s.owner&&s.drop(),t}visitWithEnvironment(t,e){const s=this.typeEnv;this.typeEnv=e;const i=this.visit(t);return this.typeEnv=s,i}visitWithFlags(t,e,s){const i=this.expectLvalue,n=this.useForMutable;void 0!==e&&(this.expectLvalue=e),void 0!==s&&(this.useForMutable=s);const r=this.visit(t);return this.expectLvalue=i,this.useForMutable=n,r}checkType(t){return this.typeEnv=this.globalTypeEnvironment,this.visitWithEnvironment(t,this.typeEnv)}visitProg(t){const e=t.statement();let s=new Ni;const i={};for(let t of e)s=this.visitWithEnvironment(t,[...this.typeEnv,i]);return this.dropFrame(i),s}visitEmptyStatement(t){return new Ni}visitLetStatement(t){let e=new Li;t.TYPE()&&(e=function(t){switch(t){case"f64":return bi;case"bool":return Oi;default:throw new Error(`Unknown type ${t}`)}}(t.TYPE().getText()));let s=!1;t.mutable()&&(s=!0);let i=t.IDENTIFIER().getText(),n=t.expression(),r=new Ni,o=!1;if(n){if(r=this.visit(n),o=!0,t.TYPE()&&!e.compare(r))throw new Error(`${t.getText()}\nExpected ${e.toString()}, got ${r.toString()}`);e=r}const a={type:e.copy(),is_mutable:s,assigned:o,owns:new Ci(null)};return a.type.owner=a,this.addIdentifierType(i,a),this.updateOwner(e,a),new Ni}visitExpressionStatement(t){this.isFirstStatement&&(this.isFirstStatement=!1);return this.visitWithEnvironment(t.expressionWithBlock()||t.expressionWithoutBlock(),this.typeEnv)}visitNegationExpression(t){const e=this.visit(t.binopTerminals()),s=t.getChild(0).getText();switch(s){case"-":if(!e.compare(bi))throw new Error("Operand type not correct");return new _i;case"!":if(!e.compare(Oi))throw new Error("not Boolean type for Bool");return new Ii;default:throw new Error(`Unknown negation expression op: ${s}`)}}visitLogicalOr(t){return this.checkLeftToRightAssociativeBinop(t)}visitLogicalAnd(t){return this.checkLeftToRightAssociativeBinop(t)}visitComparison(t){return this.checkLeftToRightAssociativeBinop(t)}visitAdditionSubstraction(t){return this.checkLeftToRightAssociativeBinop(t)}visitMultiplicationDivision(t){return this.checkLeftToRightAssociativeBinop(t)}visitPrimitive(t){if(t.INT())return new _i;if(t.BOOL())return new Ii;throw new Error(`unrecognized primitive type: ${t.getText()}`)}visitAccessIdentifier(t){let e=t.IDENTIFIER().getText();const s=this.lookupType(e,this.typeEnv),i=s.owns;if(i.useAsOwner(this.useForMutable,this.expectLvalue),this.expectLvalue)return new wi(i,s.is_mutable);if(!s.assigned)throw new Error(`Trying to access unassigned variable ${e}`);if(!s.owns.value)throw new Error(`Value for variable ${e} has been moved`);if(!s.owns.value.isValid())throw new Error(`Variable ${e} refers to a value that does not live long enough`);return i.value}visitBlockExpression(t){let e=t.blockBody();const s=this.extendTypeEnvironment([],[],[...this.typeEnv]),i=s[s.length-1],n=this.visitWithEnvironment(e,s);return this.dropFrame(i),n}visitBlockBody(t){let e=new Ni;for(let e of t.statement())this.visit(e);return t.expressionWithoutBlock()&&(e=this.visit(t.expressionWithoutBlock())),e}visitBracket(t){return this.visit(t.expression())}checkLeftToRightAssociativeBinop(t){const e=t.getChildCount();let s,i=this.visit(t.getChild(0));for(let n=1;n<e;n+=2){const e=this.lookupType(t.getChild(n).getText(),this.typeEnv).type;switch(s=this.visit(t.getChild(n+1)),e){case"binary_arith_type":if(!i.compare(bi)||!s.compare(bi))throw new Error(`Operand type not correct for op: ${e}`);i=new _i;break;case"number_comparison_type":if(!i.compare(bi)||!s.compare(bi))throw new Error(`Operand type not correct for op: ${e}`);i=new Ii;break;case"binary_bool_type":if(!i.compare(Oi)||!s.compare(Oi))throw new Error(`not Boolean type for Bool op: ${e}`);i=new Ii;break;default:throw new Error(`unrecognized operator type: ${e}`)}}return i}visitIfExpression(t){const e=this.visit(t.expression());if(!e.compare(Oi))throw new Error(`If expression predicate must be boolean. ${t.expression().getText()}has type ${e}`);const s=this.visit(t.blockExpression()),i=t.ifExpressionAlternative()?this.visit(t.ifExpressionAlternative()):new Ni;if(!s.compare(i))throw new Error(`An if expression must have the same type in all situations: \n ${t.getText()}`);return s}visitPredicateLoopExpression(t){const e=this.visit(t.expression());if(!e.compare(Oi))throw new Error(`Predicate loop expression predicate must be boolean. ${t.expression().getText()}has type ${e}`);const s=this.visit(t.blockExpression());if(!s.compare(Pi))throw new Error(`${t.getText()}\nexpected block body to be ${Pi.toString()}, got ${s.toString()}`);return s}visitContinueExpression(t){return new Ni}visitBreakExpression(t){return new Ni}visitAssignmentExpressions(t){const e=this.visit(t.expression()),s=this.visitWithFlags(t.accessIdentifier()||t.dereferenceExpression(),!0,!0);if(!(s instanceof wi))throw new Error(`Invalid assignee expression:\n${t.getText()}`);let i=s.baseType.value;const n=i.owner;if(i.compare(Di))n.type=e,n.assigned=!0;else{if(!s.isMutable)throw new Error(`Trying to assign to an immutable reference:\n${t.getText()}`);if(!i.compare(e))throw new Error(`Incompatible types in assignment expression ${t.getText()}. Received: ${e.toString()}, Expected: ${i.toString()}`)}return this.updateOwner(e,n),Pi}visitDereferenceExpression(t){let e;if(console.log(t.getText()),e=t.accessIdentifier()?this.visit(t.accessIdentifier()):this.visit(t.dereferenceExpression()),!(e instanceof wi))throw new Error(`Trying to dereference a non-pointer ${t.getText()}`);const s=e.baseType.value;if(this.useForMutable&&s instanceof wi&&!s.isMutable)throw new Error("Trying to mutate value under immutable reference");return s instanceof wi&&s.baseType.useBorrow(s),s}visitBorrowExpression(t){const e=null!==t.mutable();let s=this.visitWithFlags(t.accessIdentifier(),!0,this.useForMutable);if(s instanceof wi||(s=new wi(new Ci(s),!0)),e&&!s.isMutable)throw new Error(`Mutable borrow from non mutable: ${t.getText()}`);let i=s.copy();return i.isMutable=e,i.baseType.addBorrow(i),i}}class Bi extends e.BasicEvaluator{executionCount;visitor;typeChecker;constructor(t){super(t),this.executionCount=0}async evaluateChunk(t){this.executionCount++;try{const e=fe.fromString(t),s=new is(e),i=new Ae(s),n=new ns(i);n.errorHandler=new Ue;const r=n.prog();console.log(r.toStringTree()),this.typeChecker=new Fi;this.typeChecker.checkType(r);this.visitor=new ii,this.visitor.visit(r);const o=this.visitor.instructionArray;console.log(o);const a=(t=>{for(xi=new ni,fi=[],mi=[],Ei=0,Ti=di.allocate(xi,0);"DONE"!==t[Ei].tag;){let e=t[Ei],s=e.tag;yi[s](e)}return console.log(fi),0===fi.length?void 0:Ai()})(o);this.conductor.sendOutput(`Result of expression: ${a}`)}catch(t){t instanceof Error?this.conductor.sendOutput(`Error: ${t.message}`):this.conductor.sendOutput(`Error: ${String(t)}`)}}}const{runnerPlugin:Mi,conduit:Ui}=t.initialise(Bi)}(_,runner);
//# sourceMappingURL=index.js.map
